%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: mywriteup.dvi
%%CreationDate: Sat Jun  8 18:52:28 2013
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR10 CMR17 CMTI10 CMBX10 CMBX12 CMTT10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter mywriteup.dvi -o
%+ mywriteup.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.06.08:1852
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMTT10
%!PS-AdobeFont-1.1: CMTT10 1.00B
%%CreationDate: 1992 Apr 26 10:42:42
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 73 /I put
dup 75 /K put
dup 80 /P put
dup 83 /S put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 90 /Z put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-4 -235 731 800}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D19
38DD5C4467F9DD8C5D1A2000B3A6BF2F25629BAEC199AE8BD4BA6ED9BBF7DABF
D0E153BAB1C17900D4FCE209622ACD19E7C74C2807D0397357ED07AB460D5204
EB3A45B7AC4D106B7303AD8348853032A745F417943F9B4FED652B835AA49727
A8B4117AFF1D4BCE831EB510B6851796D0BE6982B76620CB3CE0C22CACDD4593
F244C14EEC0E5A7C4AC42392F81C01BC4257FE12AF33F4BFEA9108FF11CF9714
4DD6EC70A2C4C1E4F328A1EB25E43525FB1E16C07E28CC359DF61F426B7D41EA
6A0C84DD63275395A503AAE908E1C82D389FD12A21E86999799E7F24A994472E
A10EAE77096709BE0D11AAD24A30D96E15A51D720AFB3B10D2E0AC8DC1A1204B
E8725E00D7E3A96F9978BC19377034D93D080C4391E579C34FF9FC2379CB119F
1E5BBEA91AE20F343C6420BE1E2BD0636B04FCCC0BEE0DC2D56D66F06DB22438
452822CBEAF03EE9EAA8398F276EC0D92A7FB978C17805DB2F4A7DFBA56FD6AF
8670EB364F01DE8FCAFBAF657D68C3A03112915736CEABAA8BA5C0AC25288369
5D49BD891FABEFE8699A0AE3ED85B48ACB22229E15623399C93DE7D935734ADA
DA7A1462C111D44AD53EA35B57E5D0B5FC0B481820E43222DB8EFCD5D30E15F9
BA304FA879392EE0BCC0E1A61E74B3A1FC3A3D170218D7244580C7AA0DC65D19
741FA5FE6F8CBF60250ACC27454BBF0897CA4B909C83A56672958752ED4B5E79
E18660764F155E86F09EFA9F7685F2F5027EC85A775287B30E2069DE4E4D5712
E7D033481A53A2702BA7542C71062173039030CF28D8B9C63B5596A9B42B33E7
D922944A38713383D3648A4AF160A3B0C8F3379BA4372BE2E7EA49AABA75AEEE
C5DDE1D8BF68483C3D21271280ABB91D54CC819680322EAB72E1250A760BC8DC
FF798F2ABFC4F3539392985C4CB324B00072295FC160818BB0355FDC4F12E39B
984826450553E3D271F03D8DC2D12A92A4D32034FD16DA13B876D88C8C097384
46D8D7E41CA1A8979F9B07EC3337E70CBBE3A377235B04C79BBBDB66CE1C1A41
89DAB7CE91F2FC0CAF6DDAD09992D56F72299068192610EE3DE5DB7CF6366B4C
D74F414484DCCDBA449BFAADA39D0F27574E604E31CB513B18E3821A33076151
C2BCB6E957C77A0AECA48C587ABB5E8C7624D56B32F80BBCFDC874AAD6EA5119
C9B06886F08CC7DE5400E0F52B07483FD4BAF26C1556CA27B259F845681D61D0
2D28B185C9F052844D9A5F91CF19210B9DDF9783C39758F2DEB5872E01B20C5E
3CC7E7889E1BAB998D3EE2C0BAA7AB94A0807026C3BDF56A310B4681C58D1834
5EE64DC11A1319A075FF87153721EC71149B38A0B04B2BE5F7AA7FB4FB2E1E2E
7A588CC73985A118C9749C59F314217A2AAC1EC276E7792B77F016056DD12AC6
948C957C7C3B9AADE380C0A96D8E6CD538273CD29074D828D913BD4D6C6C497F
1B9050980A4456612F803805179F3209B9FF00CF89CD712251E945D9890F48F6
2D7BDD75C039463CE9BD3DF3455394B24782A39C8153CE2CC40B6E292B33786C
E75BC0580F75B3BDDF84C60CC0EC5F43F21CA01BE82B389C0343CB33F73CF536
6E3728360F34B44E5DE08BDF7F0C26F77B0929D99246B2B71F7F345FAE87122D
B133D4790CF56BD602B4820130D33FFAD92264489E171134E3BFE65432F37F05
DA07EA3A7D39B6BF552802A696BEC508696E970750C886C56D08FEAEF7B3ED8F
CA285454D781C644B6CC8E1EF3F868E9E263C3FDA558C06041595704C4221370
9840E4E342CA702042CE6FEE1C9D2DAA39EAEE832EC5B5CCF4356631126EC034
098584503DC269E46529E9BC9A1876241E5D02385C01CCBC4586A534BC006F64
CFB2D96D2A0335C60E7ABE3496F2D6E02EA0E2E87060FC7E3F329EDBCC6C34BE
FE1FEB9BB6E1AC9EA24DD39FD65F546075AFA4DFC47FF9D123C260C1A24D7DBB
F9D7EA7521116E0BCB646255B10FCD83BC6BDDB05A88F3E45F44E84ED06DFF6C
94A29B28115E216A9CF9FE7D3E57CE2DFC16EBE65FAD0B2EF636ABBD69135184
04B8AFE632756FAF016B0B606A2B3F8AF5D559F520A31D9795F8EEFEAC33A9C8
DAE79B4C509AADC75E9294D991FEE7A9997618C77F66F76DD34BD0D958BCD4A0
C51804637FA2A9CC04F1699866D2052BECF6CA12EFA87AC44B380C5C81076BA2
3997D1E5608B5A7F8FD817AE2AD105F62BD0A8B7211D101D0B831DE1D7F5D2E0
175F6876F859239572AD782A03694CCFD799918D7767FDA3F1D18373B14848FA
988776075310A30D09E67B5A2FEC18B97222F5520D3D725D6A4A798F397889F9
C5BF8EA0C3561032426D2CE40C34110BE5EF2C5360006DAA2DB2A65D96054D79
A92E3BC95F9BD8A039B4CF4160D6FC7A044224543268CA50D09E925E82535982
E145CD9EF07FF8CDB948AF911CD33D12229B7B475A5EA0375C453CDB1D0105A1
967E3752967CBA2AAB4B40073FE07263F6C8EDBCE3B0315D54CF353AA5E6D299
5DE8A679708E03C58E7A2C909724760472CEEF8CB8011B14AB8BC1505033206C
914872B480B2C6C0C1AD6BCD94432B504D7A4A790C8EAA6E69B5E30D34B342DE
E982D887B5A2B4B9B6AACF1586816F54D41BF4CF7A9C9574D73F79B97F893250
4D7905A1BB7709A9399BC350C3E8FDE35E7D90C80F400EADC5D3AE97D18DFAF3
78F7A3B4DF6E193D4B7F88245E037B89986B991F2DB81A30AC4AD8DD4CBE396D
3634A820D2C497FB78CA5B581ACEC6102023D7A1AF40771D704DD85A7637D72E
DC047B059D58FA589BA07D8D5B86EF3FBD70431B0EAA2719EE370676132006A9
B81EC41A4F1613036C2D7869609E4AFCC16A08F57EA576C92DC716D1F11834C0
3356646434709B13CAB2C5C71FE29AB72D5E5CE6D85AF61744F53C57FC32B3B2
2326A44D5B05060EC9E1455E04C6978C073A1C316E51953826E04E36114B27C4
B9B836D9014855146AEBE63AC6D0099E339804EC2490D65C102A2608B4C2C177
1AD03C8BC84783FB9538FA02AE8B6C01971DCA80FF0A5D1372CC44894D43F690
1B9E2C4E1D8EB2402867D47BC6BA790927F50B489859C8F754E939A7F04A74D0
13E1AB299DD2AE5DCA3E38FB929BC5EC486463490AE07A3CAB9BA1417202EC48
3CDB0D353DD5A3B333A28C20CA058150C42B8066B1FEC50645EE2303E04EE07E
3A1BE6212E86DF8E30F0BC0F9DCD9933A3D948E0944D06164469D352E28C27A2
B1E508AD200BB86D0356AA24D8AB0799642AA5513CA1FF7E907A4A2A599E91EF
2033D946F17E7B210592097E189340B9027EE894A4936ED4120F2663DA2B5EF6
FD300A925FE917EB27D6987685BFEE216F34324CA3C4C657E96616F253B9E9DF
6502F49C630577E9F2557797B58AFD65C90BEC0395589B23EE598DBC3692BB8D
77E4C95F5FCDFA542FDEDDD1F585A429399F11FF392222D50C507F894C3FAB85
246FBEE719A113E7A6FC7F94F462101727FDB99C4D5809FD0CA0F0A58B3F8DBC
74ADD3702C0F3BEC9F6E4EFB5C7CC5EB8DC3C12FAFC6EB7E60C69DC923DA5473
8AD87D1F840B41C6E05E7A5A33978474E9A0DCCD3153EC097B868AFDCF9BA63B
200CD8359D8307409A26C9361924BA1AE7D1E5BE281614E2EC9E85C9385BD254
A6CB6AF757401AD716CD60044E8633978C603DB09B35D9C1C10CBDECE6A14C73
F95E71C8419A1D55B3308631D7D045BCA35532AAC519B2784861CD4F54A8E578
5A3F04C11763F092D1832B8C1874B44DBB8F008E30D991BDE56BF1011FA8BD59
D70345755B5256F8BED791C9BC27FF82E94EC3365CF080A041491DC44A6675B4
F4CA1B2C149C61B03C3A57178B0F1A4F994E6BE4265120AD0685B05AF77E3714
549CD606B408325BE08BAEDBEC3008F4C7ECE5639C2B366CF3E30243D75230CE
DE3D9FCF7A7A7A4B5D5B270B708BE1348435CC2AABEF8745A02224D5D384947A
243CFD83F07FA13F716246EF8576297649B5ECBA441AD20C5A44FAEC936CE027
67D12C77851FF2FC87FB8DDC82312E1A345A932A3B7199FC0FC17B184CB144D0
77836E4A62192B276824F669DE72613673B1AE1843E70996D7665DC09CCB10C8
48919BC2269C7A8FFDC415E819F6DBFF1E0C15C70A44EA91D71292456AACD4BD
EF06E3C71A7B52847DF18D82C68A94CD9F046724A1E38A0CA1229C16C5888185
220E66E3B041A8E41E99FA1B01088614A523573149AC75A7D7F05DB3F291B8E2
4566600588984A5045006EDA447AB75B6FDD529B4FEE4A30C97F368C8AD0BD1C
701BA87BC0E257B8B7E4267AA721723B2DCFA79FB998DE6717C9D61D4DD0429D
A3976B200DECF7C1E5AE2B0C82A2E77F210A629659FD0C60B3F293108A2DEA9A
7E29F18DF7B50B1C147D01B5097113E6B5296C335992A9F41B3945FD686079B0
C609413AE913EB551F95464EADAAA862030C6040D5F7F7C7D7AB3A3BA5BF0B80
0DF152E5D761CBC4CE079640AAEA0E52F02DB003BC752B93DF4EFAA08C17ADC6
D6552D17C40F7BA22C36545BCB13FFE628FBE179DBAB4BD13138CFFB2F20254F
B043FE69D7F576425BAC9BB45937B4ECBA9EFA95ED9D163C0E084E7E099E6477
D9459A3B8B5EAF518D5C0810B631D6818EC2A987E2815205318264673F0D92C7
1DCC602D59A3C0B81F87232994471FD36EAF0A96AED74AE83DFF6E940873A04C
729C944FC1DEFD3F10BCC8342CA9310E5CD3E8216DFEE0D57492C559F3B2D6B3
554F873B001A248344370825D7FFF102214E8CA677AA59C7A8CA55A3CEA43245
F5CC029D20DE0E7C22FFE9422ECBECE681F6FA9C6D9CF9DF3A6FA0A88E317DA0
C6B4E0A6A63C93B843B4DB626577C84AFEDD18CC5AB60C99F9C3329D157B395B
F8B6A3C9A7D52C7846A9E27F3CCC0A880BEC287FFBC33BFF8C38406988CF4F8C
F4A7E91437B9E1B76AE058B4805C631647B71E1CCC3EDADB7B746FCBDE141F3D
C33DD25822D60F8AC8F4E340874095EC485D4511C34FC6D505E7C28C53D69563
E565A5CB01A06EDCE63D669F50E78E95576FAD2B05B1C1246D1FBFB30402B98F
0FC56DF18B8B695F9CC151ABF95344A50D88C29F50986E252E1F528B1C904045
B92470B6629131A9FBD0480F6A3101306A01E5BC79193541B1F3BF07613E2441
F0E83BCDC06EB37F1E3E1C0D2A93305CCB1DE7140DAA52B47091DD8290005337
D335B4DF2AF6946429B3505705949E7A81DE4C64ACF5EC1A78FC18FC9F94672A
ADF116C10EE98888C59C4224E757743E8ABE3DECC906B6795CEA674D5AB0DFC8
2CC650B9F14CE054AAA5795FEE44F22E8F39C77E875007661061F7AD15610A78
8DAEFBC6DA56FBFB756A453084458409AA06FEEAE644BA7D52B384047642569E
9500EEE8CEF2C1C042AC5BEDACF9DC7EC21A421C293997A7C090FF6DED41E0DF
E847332494FAF20BB9BDCE80422B7B6DB0269354C1D3DA05400A2B0CE0245655
6C72359E07E7DD15F3C492C4FD1B31032B9980D51F54280664BFFBFD45AC4BCB
361F37B5837F10CB849BF7CDB30B54AED09CA2BAE9CDC4D1D54ADC0BDB1887BA
254F77818F1DAF5A2F24ED51AE99DC9827BC7A3104995945FE6FF30CB3F50D5C
A1031230F581213F3598BFD88344217EF7ED629E9EC59124E105F4E055B4189B
7B7D69CBF80BD2768894B932EED170F91F01C05ACCE119191FB5C7A48237EEEF
52A6835892B3B54964B6B886C41378BA0228E29EEC2EEA12E455F92FD73D05A1
949C64593434122FDD7A18A70B885AE1F926367A0C16B4D7989FFB6890C44E4B
73AE009817D269D97962046AB43CF066DE274030C234FF34BF7409698CC692E2
F8EBB8B260EC465CE01CF8AAAFC3187EBE5DB3257B46DFB3BAAE647A4E6281E6
2914FB543C7087043DF8FFEBC0BC045CA43EB00FBEE4C9C9A68C2E6807327A13
EE52672DB07455EB623FCA4CEAC9BA25E3E91FA1CC49494DE4A85AD5E19936FD
EEAE7C67AFC21DCCCEAF4585A5FEDD5F260382A55102E38F695DC326E8E99976
315E9CE4E415B527B32252FFE6E6ECB622B1BC79CCC3F3F3ABB840456B9A1C5A
9561A76B95EAF29519DD71BED43BFE3631EEAF0A41E491D253F9B8F249D55B34
A82E8367764865CADA3CBF6B0547444DFD550902B1F0B77A4E17AAF5B5F08B24
3912627FB8B86D6518E9F417182C4AF32A3E7627485AC411A7B871F5BF774D2B
5BE2685F3E78ECC1CED569782E413E480A289345225D9CCACD4A973694A4E2B5
3FBC9AD169AEE743EC76630A99B7D5F5E36D537462AB2553E3C3A5C1A210761A
FA56BD458B20B88E77632A444D4B1ABB70AD7696240212D91BA8E36EB84775E6
4443BA3F1AD37854F4194479628AE234FC163493B95429557BBF50B05D064F49
FE56C160DD4F1F3C86706D3D6749DBA10947C59BF928C1EDC19B1906C5B6517B
5829CA639E9988DD3FE9D7BC3A82A943852318FA1520DE9B90D6433CE8858C57
E0E808D0C830A71152775F4EBBDA90264B97D95D4A8BAED7CFD661264855B20E
3662056E3CB054E129528FD630502BF34188D35D65962DC2E580AF24656C5FDF
C65CE4DAA54855A606420D79F6D3F8C49876D863323B205397B0E53EE715E3BD
15E9FDF158B394B7F363999E6A89748BA81111FEAAD698B48D9019D5C119BD83
18D0072FE4D289F73E31696AE2361927A468FDA6557C565881902CA37CA042E7
FCF5AF8B7910F391A50E1116A0BFA42FC0AC63895741DBBC1F2FA4ABF552E686
346C551FDFF40C892DCDF6369AE4A642AB9FF011374A1369A87078FEDFB5DB78
EB2905888E4D1C8F9C9D92FC4AD2E95CAE0FA49FCA7F297EA12F79F5A890C67F
F5C414B73D5CF14F7908D908A314604B03AF5CD59A6EDCCFFF36C42EB62988AD
179C38DAB00660CDC277DE78DD1AD4CD178C464B3DD2143332030A170D0EF348
5802960A7014BC14CA8355F7AE222FD545E11525022A6B35E46ACF64EBA22C17
24DD7E597FB7AE10A4ED6498C1DCDC9FECA6DAD8341F1E94D9B0369D285D049C
1E9BDE256DA1F9A17A9F1A125D81CC65622EB261F3522CFB611AAE7A1B482318
CB46E3165E9736D95B63CA8A30EF98F781DD603AA1ACB09048D56EECC9797D85
EBAE5EDFC8191D50F208271A0C807767450A3D77FD4F933626140CAF853E9151
E6374FFBA48BD47A21FF078B2998D11F58BAFE71F0E8E6ADE191CF1388F8969B
2D60346DC2784C4A9BD9842476BE708DC22912A021E2BEAFFE6771E7D8347090
65B2F51B84F8229BB8C106DBE0ABA7EB3647375F31A68AFFAD178DC3CDD29431
E60754B1A8A9037424C51390AC1044A6BAAD83EE73AAE8E360D077C56DA1C22A
8F63A05A662FC58D29CB50A9ED188D792C3BEDF0AC0D51A62C4166158F4DA1E3
749E782E67E741A57FD07F41ACA38719A35D00E21DFB2CB42451AA5392CD5EE4
CDC6C0D57A239A4DE8142D8D946C43447F01687F70AD206E2FCBF187D9ED9A0A
59C865157A3E12460E508081C2588369116BD34D4065DA4022A4F92C92368C8E
FE92094C15316E9DD048D50ED9CF64EE2D891810480723916BFCCD953D8CD90C
0AC838528DD2390079E0FD621B7AB55C544ECCA6D9886F50DF9969A322A08A21
F008074D523C5F0411D1825B020D683FC2DEC93E8BA8F23459FFA7A663B91BD7
95D284BA593985376204AA3F9B3A732EE59EE399511AB73EC4DC8AD08BCC7C5C
1C0365CAB20CAC490CF6D627873201E5D361B071FB3875678E5F11405336022A
2C1B575556366AD0C031DC2D16A33169229503421D1DF4EF841C73CA1E003715
AEFE476356F61B2BDFBA295798319757B09E3E7D6016E95E4AC716606025564C
43E37CCD6B686A9F990892AFC5BBBA01D4278A3C3997297DD914538C061FC676
377E45B8BBC8446DA335BB7E9FB1AC997CEAF6A5A9B55609352138F43330B4CA
7F9567DDFDC19A2B1A24762CAE2CA4491051AB36E77763CF0C4876F209239605
0DB816A361C2045F1DA9B220B73F7B5BC046C5E8230F2EF7D4FC5FAB89CA3565
130DDC4A33AB9154791823772A3B5A14BDD260ED970787F22BF496C600A9E9B1
B23FF7BC7C575BC78BDC375EA549B3D1CB434BB2F4C1D42087BE45BC43F31C1A
61798EFB365FF8EE58CE0217E960FFA93CEBF76082F97BA2FE1E7BCC79D175C3
93F1C32C154F3AE36C68FD8F7E877F99351AC7028B5C606136FD1AF93A07AA33
D04F822EDF7519496D2D1000BDB06F4A821D498F4496F216002A55F904C4F5CE
E447E8FF54E1FCE39901C0193F0597539D90CA6009A94DDEB307A8F1DF4FC269
7C5D65090FF61014B8E5C637667220D275786D404EB9E397BF507A757C05C053
9FF46D32FB0810D2568FB9BC13CEE0FCADF33F1292623071D4258FDCA98C74A0
2D831BFAF00E1E02B08135A75A24D1E4C97012C6B27BA095D584B45D5165257F
ACF1B2FAF37A4B0A4037A1C272269EF52928EC25A47786E575597FDCEDB48157
3A253F21CF32BC64801D754F64F5E1742CE2029A19A681C6F60DB6AC6C9D5F86
2AF4044B001222FB89BCB012F216F40745A8C83F476AA2EC8FF199E515A7E5C2
A7F2921F7B3276C46E627EC9C448365179151C403BF75943608395C806506CA3
75842EAF2B698159AFFA9A7E5828AA4DC973B2BFF307F07F99894A8D459964CB
AABCD5D8B43E6B5711A5D450C9C10836C1356B25F7BCDEE31E00C4B3F35E08C9
71D77B44783A8535366294C69D7057BC0832361C73E1EC219274C2A0DFD008A4
ED223FFA8F535BF4C39D5B790C50C2298F800D4F20A14886ABD26BD0C541BB56
1B976A2E15EA730FED0A1250D60E500758D8C34FC5644837792341D4FFB842B8
A734CF7F6E264F503FD4E2F2774FAE313C970F901639565A3E3E76D703A582DE
C915099DE575BBAEE9629A8C3DFE99D503EC78C85FC2947AF85BB84E6F1F1AB5
67C07D58453D3F0AC0CC0046893EB2759554A2B681DE7F1C2CB0E58861A7FDD3
184B14D9230093E87B5CCA3170173169B902685A43F7A556E98F9A0A6493E6C7
09B0398258681BC8DAD0161258189C33E4B62A86597F9F1DE8AD993EF37E72FF
0F3FD9D8B886455C36900BE5A00F33916DA803EB7AF3C4A6E2E357E10197C710
4659D01B1CC1643E9F8111DE5EB220C55285404A71F4705B36695FACEA17CCA8
489B8299AD38EDC867B7268CC246506F5BBBBFC3D14A90088832B221D2B1BC04
9FF01F38632C5543635D5C50D72753189B6E7D3C2256DD4D9996B9DAFE26B26A
693E5F809284B93F59C989DFF4E9F211B0E19FBC5E7ABA2663F797AA3595FDDA
EE31A44DA1B8A68B7FF4C04E0E6081E923008B4E30F545264C8A3B7BE6D3A1B6
838677A6169635B72334D6C4AD95FE31C915C3CA6391F120E7C0DE924BCFD077
5C206A6AD52883079B7995D5FBF086A4105B16E401F8B8E167FF1AC63B4387D6
96BAA5A32240094EBCAB7F1F93CA76DB335B2602FBC3BC055512D21BDF1245F2
08FA3CF8B30AD060DD4103B37BEAE1E95497C5099160B1CD19F9C54B17B87612
94E8AA037599FAA34591C66EC6C28E0E651FF3F44D543508CD6A26FB528EC147
F348D552F878CE65FE478CE0E2707FD47AB54CCDB011230F814AAAFCE28B5E9D
3DB8025213F5BA12DC8FDF38AE65A77A16F4058ADF9349BE33206AA553303876
7E7825CD95506A532B51160C141C82A6C95F11F865430D46ED4ABF7549C640FD
E4BCA2513717257C0CF25885C80581B4F85C61A1D84377470AD4E54C5DAF5E53
72A4BF8A5F534BE700FCAD322519C92035EB5195839A43AC2805A1F80214B090
40B348035F8227BB49530AC0CACC8AE74C26F29A3F6DBEDAC505FD6E4A428701
791DFF2FDBF4BB8D11750420A1E7C071BD2CE1610221111BE969B9A1DA8B7D58
54B9749B9D20F7342EF6AEC65434EEA4D568F4D6BB3C09B0CF73AB59C8D847C5
9CAD4F8285E8C1BDCC09B56FDDDB5432D237034DA0CBE46B41FB1854130FBF05
AC975F368D1787E9AC0D2FFE3E7F2B49B12782C5A61CAAAB91E4243FE7472992
993B794856455BF74154BF21C01ABEE16A00F77BEF4437E45E8917E8321E5588
1BD5B2CF34F05A4538234DF095D95E8EF60D58BA8723EE38C1BF8C53E550C80A
ADBB41C14AFB32E92B7C43E5041D57835F81241AE80CE33D9E2273498E5B199B
24A4EC520496455B9229BE5B0F7D1058F01D39D42A44A7A906201846220957A3
E0F043C3F00922B6B82FF58CC49E2BF0B5C416864BFA4D61AAAFEAD259C278BF
9417D46BD858B7BD156328B803B0C2E9AC413E75126EF70C43E8DF65723915BA
719170639A27FF7F38FA5F8C4B63E92BF771C005696B9DC398ACF632C758D0F3
22548F809FC3143A224B7840E06A48FD9B407C5AFB0774F3A11501DAD5064AE3
2122E705132629E34D28461578702630C2C2A0A15DCD273E89391A95A3716777
816CDF730DEF9488448D7A18F3AD50AE69CFC612D34994C46C6D1E46743CADED
B6568872E31500E8E11173D08032B100AA96D5914BA91AEE098D01F6668FB615
E3EB85CD8368B333BD7B94EB89D9D3E79A95BF46E37CF6417572E1E2D6BF06E7
C1296DA5E0332BA58B4DF3DC97B65E9D7028A43E8BBCF936AFC215A18901E8DB
B80B4091BB90C73BDB34A0F6D810081B7C172024880938E022F7419204396843
EB109EF9278B2EB45E371E36ACC7A49C4CCC095297F14DBD2714FC9E3FD9B4DE
3FD13213BBE4609BC89366098AE5AC64C3ACAE66C4795EC042A8ADE4E9D1EA5E
785F876B2ADE4CF308CB0E18D976364943D8C3C3E9FAEBF6FFF4EFB4CE7B65D1
C4052ECE0D6D5BA92BD7416B79DDAD230D2B96391053C9A06105ECB773B04A31
1AFA9DFD9F26D6073C9897908BAE3DF9C407D203FA96BC8E08622DFF7068093C
3FA7E39280D6F7B95328BBCF6F8AB167441973E8B975DDC83CF4DD5B94BF12B6
D974FF05A9CDB40C428173C50939F31FBFC9CBFD9DE059D12EF31B09B80F410D
98D90F18B56410946E7FBABEB3A4C9233D5A62FBEB5CAB652831EC7974972848
C76CE9F91EF8020A84FA01E09B08A3361F210221282D5389954B8D293AC8A7DB
AAEDABDEE6744381325F419721F4A0D98D450EDD3A75D6356EAA78741CA044E4
196F1CFEADE64ABDA23FEE2888CB851399FFE594563CAE58FF377DBB8A76C508
3FD9FF6D0A4F25E5CF4F17B5899A7FC53C8ABCAE8624B9A8C7D95F9D565CFA2D
512D2AAE2902DDB5C128682ADCF8EFB04721327C4132E5466331B92AA5F0710C
395A531502D10894CB3537494CE9F137E476D25965A392E8CEE4D85B86695DDC
C27254EDB47CFDAB62B22730A2B16DBEEA9E050DCD0089F774312BC5057CD525
D9045E1215325CC0723F83F53FCC964A289A70B0C5429F91778AAC998BDB8D3C
5D3201C35A15B87ADAFEB414C30C12940E7007737AD1F6CA327D82270A5B888B
91AC03A5884EB396FAA342E4D38850ACB7F08947D615C8E1074471F488B933A6
92B30F4E10BC2B8D8CDB19EE4D8595663E65BD19219404BE6A250565E16A95B8
783766ABD8E13BCC6243793ABA4649AF7DA922B47AEED0BB5A5DB9AFDDBDDD11
F1BD466AC2975CCF01ADB2DC35D4FC9238D2A0702C19FA960572EA133CD6D3B2
E7D2A879614AB8F7069547E9960FAB06748890D5F0A5FA3D112DFDB4B66C6212
A77482B76CF4C14EF915668A9F42DC8E63E315EE9C5696D02578BEC6FB9CCA65
102D447617A53098BA44E23CD196EE81307ED3EC79D83621AD892ACCB0D69979
5212FE11FCDA76C353563A9E572477897382A0380985F34C91C8323A46C59421
32D608F0A6D9B608328B1B4F94664C82D9B242D04B201BBF9E03F44DDC8F1165
152C91F13B5CA6F1845B64D813EA04B065AB226BEB705B6A10904ECAEA195C32
4670D509DC959374FB326AEDFB01B1D3363209BF2D5496EAD25AE4D1D48999B2
CF1B86B782F019A46398E20B2F0B42C25FDDEEC912ED23D7DDFE0B2CB8111B1E
CF51455F48B07223CDC6ACB6831EA10250BA63E0D733B959384775A926C4ED23
ED335A4D133B7D4EBA89A5D141B2DEAA5F032C0F920309DA820435E666585CE9
1A6992BB36778B364456B5D49E23833F7C25D1E582C5A6F723DD402F129B7DA8
979587C31A09CAC286A0D875124EE0ABD009684FA49C031A03F24291DCF5FD8F
AB22FC5F6436C9AB3BBE4C5571DD94826090AB9852AF4D73885770AD62B9079B
4D78A490CDD29A387171DC758B8F32FB884F796E9FEC86EB1F691DB20A1980C8
83531AF52F17732C5EFC71B8D78AF4F1144D9EE53C202571B3FC1AF961DB5152
F5ECF2F14A25BB642A8F643AD087F395EE8234B9826E6363A0778C3FE5CD632E
3FA0F8AC072FE4BD36714B68DCA5AFF226B31F73F9B5F9428B8554A5F30707CA
037F4E25E9633F48F2D3C408000098D8C145159A42BF60B3A9A7798B541A9B76
D75CC0C51EB3E98D67B1F9CDB69F7E54F91AD27EE8898074F9C121542CACFFB5
166928E71B7EDBDBA98268BA880A44B5E9E7BB7ACB6FE397DB19C4EF3A901D46
69D990B98C51A653A00AF3766F53A71D62ED5E6B671714643C02F77C2C724F05
FAB2234B9FEB31772A00D4BA60134C569E1494F356DB0322B23BEC2775B117AC
223DD46B82ADF0EAAB2DBEFF1939955E9B623C1E56927357137873A17849050A
DF8832E00DBC3FA00242233BB231028EDA35C9FF0C6C600F602AD74B5D9E2A41
1D001D6D7E6EF7005E5D31AA71FE12970B484205456EC7B0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 110 /n put
dup 114 /r put
dup 115 /s put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
3E2BEC20D96C8D8F87D3795D89FB5CF20764520BFFB68DBEC2E6CF11766F3C36
158216CB5670AAAC6B6DA6703EEC34A7A6121912C503DACFF77EEC307C814781
1DDE8FBFC4C619015754D5A9A19F6C50825D7713B249F248DC97A1861F4E5331
48B227C483756CD96295D1ABE014D1FE73EF4FAC79473FD6AB6F0CA54EFEE555
0A4D46368EBFFE93D013746240401E8344D2CE1E0B351AF85B025C4C233A7164
97EC29F67D26F13FD1D838B581E01C17876215F42905EB9854230D8AA697FFF9
60C6CF4A2D30F5CC3D9C486405DE611B6D256905DFADA40D973BF64674B442A0
1FEB1A3D4919A07617A27743A09CB7D09D704091DDCAD3EC109234B92B216272
DEF791C4CE2AFF1FAE873B55EEA236B5D7863EBEDA745A01F1B923C099D45133
777ABFD6B7F8BC5AC1451D7C099D307AE7D722E2E51D1B37D35113BC3C4E5199
9A3CB6CDB9A5989F9CBEFD8525DD0CB408CE3B330EE56916962985562FCC86A3
43B75EF4246FC7A4CF31F045952B00ECCDEDD2CF09FB40AF4E4942CED6C94427
141538E4F123C3BA36F1C48014EA8E07DE5539999BA7BDCBD9F8FC03EA22E679
F8DE87347B72E49B656ABDF8B8803C27AF08A870B7275117B61406135A9C4D5F
BFED36E5624146C997664753AF1810FDFA26E48510FC4F87379E7D44705D5498
FE374F19349E440AA3C821EEB6533565368A67A019C6410A2E3EF1BC946066BA
0F2F9DFB6905E5A99B729BF724E2E99732AA95653A290B59F06E9309EBED4A45
7F14123650AEF3D7E1B4F588044549AE79DBC0BF48C90CB964A7AB8BB66B2EB6
30E5B583C60EBC2E0F44699AC4D195810EB7FCF5EFF2F6104BFE83F8FAD4127F
CFE58BA5CEDC9A7F2685DCF74A9FC6FA7B76BF49F403F1C1502349BC0A974850
2BA3C55CEBD65A2C6B02C09672FC5050C3313FD5D15E531445102FD4C10E3105
F811FF33B0D333F21DCA8150A8D0B34DE590F50C4EA1E8CE6A2838D1D0B6A38B
5F76FD8E0A434781FCBFCD51471400C79F0B74E70D21228099B7BB8972C58DCE
1263B097F81C72CE1B3A5BD51F0B47F690A1838CC209E8FE7ADF7D6B1401B66D
E7D164DB1EFA349D27B2B1C9258BDE9F85537F47386A4FAF05521A2873DD8B84
D5EB8796FECB0E0A9F3BCAEC07FB7F3A44016E7EBEE062A2E45166A46FDDA99F
EF68A94490B936C5226CCF0E42C4C92A733EDE5E0F121B82C6847D3F9A5BDD19
B5B5BCE273D9BEC21301437B065502483F7A6A47A2CE8413245207B7D31B29D8
F12D7571D1432E0B2F28CA32C004994D87ABCFA0B51E6A92AEC5DF6C09D904F7
2EB575C6971EEEC686B3444D3F6923CBA81EF0CEAA52FF275F879C9C57A154B7
974BC55868E2907529AF51F1396C2A54681FF1ED6E15368C53F545FADA8ADD4E
9CFFCAAAEE25EB1A75BE6AF066B9648E79DBFDC18AA79DCE516229BD1D10884D
A240AB5243CF69688E32A88B9F8EC31A9D5E301C6B4792B34F4C5358D61E7C18
F55A27B2C257FCE06539EB0A7C9BE5D35021D9433C5451EB4E7A17FE49E164A9
3CA58E8ABA129A48123CA1ECCB823055EB8BD0202469EF8DF55ADADF4993B193
1DA1DD9F02F652FD9D4615E33321E6112B02D11A4668C46FD22A69D6E9DEE079
5600DA6E6C1CC9F4FAC6C1C9CD3607A8883BBB5F5A139BDF6AB37F380204D4D0
F4F8709A64463779659A181EB81E2E64EA4C12949926404932C2EB8892A1B87A
D907C478EC8A0B4368BCA53B6D93B648C74D8B2EA46E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 63 /question put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA620E40822E15C2AB
8BF88EF4FF68D9C81564F0AC5495C426E3ED091CF4AEAD7696C3B00A0D6FB6CE
60547AD516EC9CC7B904D6617F81D2AC5086C30E40057B3C8854C4893D3B1D82
2D61C4414046FFBFDCD7AD22EE19016B50905C92287F9946F2DBA4CB1B18E118
FD01CB5EB39E77C77A4BE276258F7EF35269272729704F2A26BDE6159C77034B
5492340010118D673DD5EA0631B6540528D4A4986A8E41BB4707BB401A60BBA3
AB0F3BBDAF9A8D2B7C9B68FEF69743EFEC10C0612F197B80D0CEE66CCA02D9FB
8FA38CFB6344B8100B885794E7ECE8AA6D8107B2EF81BA826373623EF112BA50
178236AF89E23EC9CDCBEB79A9078259A18EE28303F01C50FFC1FBB2287BEDEE
F3A8EE002D31853749218195F8BAB4220538B74193DE9D34638E95B89173917A
8FA78F2BB1A510443026A45473761BF9BD48E56C6C5F58F3E1F28C44EA7CD103
CE694A234E3E4FAC00C7B7457368EEADA99D68BCFB4D94645F2B3A9CFBFD4F6C
C4507329F36C896FD3F8C1F578F5E9A55769444CDBA6DDDD04845CC137EDD73B
77D3ED47D897530E0916D85268032FD2B04169FDB8EF6729440B54B80A058984
80A335C168FFAE4E5D9F1EA6C657C9FC28F04A9B62D94C0E4721F1FD4B402604
7F83F2DE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /colon put
dup 65 /A put
dup 68 /D put
dup 75 /K put
dup 76 /L put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C43C8942435D0AAA3D9055FF808F2C3C887A3C469BBD98F026D0A59E26BA9F9
C2144CFE49A9AD892D4D31764F0AE3A10644AE3966B0A790684B14D11FA49785
EC5565D2B2E584CBFD85125F3FAC133338DE35361943DCE9AF05FCF2840CE512
998D42CBEC52B57B79DD63F00985881E8463396ADA47189A94DDF951A78866F0
B8A3D9197E39335277EF2294308DA70065D910943A34F7D5F2090FB4AA42ED70
CBA469A9F64B95A6FBA4BC89DBC93765E3AE4723162DF3F9D6BDE77DD5870ADE
C8900D6346957B84C3CE8CF47DE0552AD09E4838FB0F10F99C1389CFC4686DEB
31DEE2B4F08790D16F3041F9EFC88D77D02D39EC1157D538C0B41C1685D632EA
CDC90C78A145838224866EA5C1299D942039DFF06157BA1886575C8115796C72
19F735AF881485DAC6D989490ADE623FD53D3DCABB2ABAEF03EE07C10DDF06EA
99B3174459E7BF82AD59FD366E775F2BDAA584B63EA0CB7C9786C3BE9F3808FC
75BBF201A290AA21889E5CD37096F11A64E99FD8B75A43DDFD7D2AECD6E2CB37
75A140048A071309DE0BB4DCAE725D0BAF946A3B90C50C382C5666284C76AB6D
9A4555AD14A381C99AA367FA48815462B99963D4DF3F430E53E3B60480F6A2F5
D7E849209A7AE61B59F7A42A948633E0ACD2298E6DE2C5391C09F4C59480445A
BC499233014F7CE5D6264C4CB6D86A34CCA594AFC2B45CEAD60B06E00C2B5461
24D997FC4CC926EEAB53AFB8D5FD95093EC7F8AE954461DFF82B1BECA30362F1
BCC63BBF49AA1EFDC9D566C279E1414F49AA6D5DB38B8D06C348CE62D821EABB
F38DDFC853EA77396A9200427D7A496C00901A160DA2B3750F182E0997BF2AEA
A9203BC605739D05AD7F40F41D225DD4A3828A8F61C5D7D44CD7A1BCFFB86696
9C08FAD1B53BDCD9164D4DD029610B5F4BB64F78DF6E08B2AA822A05DD7EF020
508A2B1DE57BF4C3BCE369C86CCF8DCE8D9A14741FB2B95B64B0A6F1418F72A9
598F4F87961296FC27959C36761791F79D11E7A2E74F091C91E3DFC3972F7528
29701A9A56AF90D252EF606AB1F3692F28DA0BDEAFC67D8AD415DD0D765221F1
B6FC5E558D6B8F8E2C7596DC387CA75054E76CD88A73C70D00EC9107C2921EF5
731B0F62DF1425A2FF4BDA0A24778A9C91623362995344866E10A6FEEC9EA939
48DB1E8B52A4DE9C519D1746424625538A44B88FE3D36326D07A265BF765E1CE
13921BA63D2579F4E4810B02BA04C2575F9B3DE73B3C0717D291B1FADB5CF0BB
53580EE0D0D9793655C120785EB4BCBB821E8527A72D3693FF951B817B0C573D
D5DB185BDEDCA385C107ECB4E1E8D095163C1E1D3F72C275B61A4DE771B0E16E
19CB3DF5F20D287F5D809838AA2CEFF36063445A85B572C32C3E7440B8EBBD9D
DB685EF49816FE4FCE933CC8FB9DB6AABFB4A7AFDD770660992B5B358055D8F8
1A4E17C278880C1CD7EE01A18B494840A319E33F4AC1E6297C29ECD99CF40382
3DDCA191ECE0B6B048F8A2A1F76292B7B97507E23E7F67542D3DCB15382B67D2
1221B0493CDF762D5DAF74EF51E1BC7D681227D74BB4FA289367386C7E1336DC
43C1C9642F061F5D37AB11CFCC684A90F26860F6A8C83DE2EB7967A6EC3B3BDF
7BC8369F3B75CD2AC52AA6CDEB0EFC2D16D516CAE224F43B2D27BB3E5D8EE808
4006BBEC1E92E4082D9FC86B57883244C9EBFF9928FB25A1ABFBD2975EC13B67
BA0FE234769EA322D7BD6A625CEECF761B86029731721E8AC8309218E62674EF
E19F7680875F97B165F98ED675E01ECB188DC245C92401C34205EAC04BCD2D58
FAC32371EFB6E5D5756CA672592DD476727FEDD6D3D097AC35ECE2CF9566CBAB
1542F0D2DD98D9C9C449D090259795FEC6902A26EB4FA769B6D69E24AFB30245
D162651C3A4E7062F50A2745C48A022613EBD4D548CECD3BEDE82B6F3ABDD347
9267EF6C437E8321A946AB76CC4266FCA120221DD2FD10D0D0B4E60CC1B62200
CA014C0082EA2D25E5DDFDD419C40CF6050BA645E567C73712940D5AB8A01BF1
0027AFB257F47AC916ADB0983ED911F0B7727BF69D4086C35B882047D43DBC95
022E7529C70FCF759643AE938B78028BBA80DA9C452CEDA419DD9A5072503407
3E146FA327EF37A42BDF89B7179E149B9B47FBFE7242A16A51FB892A522DF79A
F53216C44F05B03589EF8E7E8DEB57E0E67D92B00817CF77F9BB3CBF7193CF44
EEFE1048EEEE13D3145A537E36EC9579BF7F644FCE29B9DEDAF744D04D1293AE
80228767FAA0DEA157AE012366411EF7FD20328FD7487FCB0359A2C3DDB2F675
FD4F19FFF7624A6E377FCB3665A9FF116D70478F2A3E65DFBFC2FF092F9850EB
2B71CD915FE968B6E1508E14CEE71D31A1326446C52E695C2507986B4909A561
47A70DD2EF6F64283AC3B77F9FD1CFAEA70C395F703CC45FA89683CD6C236956
9025666D1374BA5770F0882409DC49F5B5A88EF4CA7083BE59CB6A1CD0854D2B
4CD2CCFA3075DD963BED13446DB095DBF0110C91F37B3D40676E16C9581A1A15
F4652705C78A2D5E83237F631C636666506EEC2F05F9EA92F470C48E324B832D
794A19F57A45A6756DB2F76572B7AD021D6FA929C0D7E12DB13E4C67BF95E5DF
030A0E043B81B9D8A07CBEE3534B22DBA6D4E10D9C1ACD01698F0ED598B5B41A
6A0E6D0F2574E95ECD1E474BCC9D1268A3EA3DA202B156561FF12CE0FF24DF02
6AE0C4F5E9C54A99414DA792DD12B28CA755EAB40F8B80209CAD9C23709C847A
713462FEB11D47CC01578C57B76BB99518CE79DA95D0E123EE90C72AE7F12AB3
3C886831E259353D25D8DE2A181583570ECADFC2E56E811D01631FBEA7DD06D0
9D43BD257CD5CA1EED3B4094299A941B275D10F8DF2FC45E7F5662E8D68C8485
A5BEF7774F24BE02E4F97DEF84271B28BC2EB0F7A142B4E38410960D4EF38686
26E011F2C34C11A4CA1A4F9B19DB211A5FDC3A6DE3166A389955DF61953E07BF
CD10176EEC59E5C4E597B55947B9A5CFDC46383A2A0D1A5DDFE6FF6C2D0475A7
93AB0F8E07B53BF5BC2B694D9F446406C5F6AFDEF7DAC3490D2A4F8EB5B5DAC7
F4BC89A2201490B3FE43699783A03E499B7600D2BF19DFA1CB1759814C206807
2606865C4C41CCEAA7EEF7524002ADECEAFA6F66021A0CE7CADBDF87EB34671A
D41E7D21301645BFD368030179703BAA24418FC062306AA79459E2ED00880DE1
18B1D3EBB83F7B4EAE113717EB779469370C16FD560FF0E7ED5B064190BEEBD3
DD7B3B225C6896897F66324C47D21FE56385190964AC48101992141C10D7536F
D8F19D5BF6EF84B5365D0B134EC2EBEE46AA45CB2BED558384C0810A4D8C74E5
F5FB04C5933F867279DCB5A36907E8B79113B6B53770AF44144FBBD5512C84B4
5395A139FEFDF152F20C88B13A164D2AFAC4C7D921949F4AF831F49EA2EFB278
6A506EC9C7C71C169C5E3F5DBFEC05D929DA175B31ECC29063EE0B3EC5435279
498BBE2852DE50A49CE6E73A7A7161F5D3D5236EF113CE26197328AC1543A12A
CD6B0B42DD11167C48D4498D17288153BA2B71843371C60F890778DE24BC671A
02EC3A506CD6ADAC4F390B3BF6BC999631DC8299941ED01D7C38F09BF1CBF92D
16BD74DA5052400BB05CB1EDA535D2112D8B1156E4BB447E03283B73159B887D
909A0451DC0EF95FF2DBC1703FF8184FCADD73C61A302101AB79746BF1FD0631
3F127A9406E3FE96BB0C53C6453286BA89ED160558222ACE7F1E5CE0A7D670DB
EF80EF999D59F6D8F6295C84E02DA5DF5A13454D6FA40AE6B4E5A7574026E85A
8292EF7A44EAE8D820C68BCE661B582CC9225F7E895CADCF8D9ACA0E7A078A43
C1B9E8633600327B1677ED735B660EBBB29D68C4EAC965DDF76A90365A8A508E
C24836330D3F54D9577BBC5284C8E20572579BF263BD5FD4825EA43F853792DE
143222CEF0E921336CB621B80C7049A238FFD2A755107C9432D347E62718571A
11AB177C8E2235B4FA8A50C34B9627C51820A1842610801D286B2CAE96628C6B
449A26836DEA7993064BC3AF855B11C9174A7848495F02A8FC078D415BE7B485
4C1AD6795BC44222BE1CF20D0D6959D3F72E8BD9FCE42A1BF41573D9CDCC5A91
FDDC9E37C8BFC86285223D460D83E7E8315801DB43598647255DA1AEA3C192CC
D0B7AE58CFCBB4A684430170E9A5850EB6BE081C9C50701784E74CF6163D9718
367649F5C49BA1CEAF6E7FB429253851771596D54A83445DF6D31A4B5125EABC
E8154358677BDD16BEE8B2F093E408B107B1563F7BFD660FF832BA0D9C9D1ADD
A12C980483CCFB9EBBBCED5525ED0E76E8D38107FF667BFDD7E2603E75DED850
A83EB18FB642153FDD189DAA3527A54CA61C6C8B383F4DF5B6F0A8F6A88A23DA
58161E03EA8A4D453D868CE0B2A683F2E9782971B2662EA50B92E301EF9B156B
6DDFEEEC562B56BF0E21CF5E97BC1710E761E4452E2F16A17C19BB195851F887
EF25C5078E84B5DBAB3E0AC1C616E2F0F39806E403F1CAA05C82C648951A6774
F1C6FAE4B75974561C3F5A59C0CE7A92734DDAA9801D8DE5C44BC7D401255A42
E2736A4CFA8535046C0DCC8ABEB2AC19651B074C474E0A629A1A6AC5BAAA1D48
02783D9D99587148226168E6ECDF1844CE8B5769EAA098B4A3D439A3AF81019D
A351910A2AD4C5BA4168C0F3AF1065B02FC418E569AFE07E72A3DC33EDC821CF
B83DC2A3DED270DB08A5A219CD7CCE26DAE13664BE002A3E5C4024E93F05F765
52DC4EAE6FEB3E29685EE07A366210401912E4DEDA93E3CF2329ED37745DB564
BF22ECCD4E43635D4D72EEB8908A3A7EC0EEF2622F97EF899CFE9558727C954F
55620C15AEE72C390597A0C4CE9F2E38C68A8C572C1A2B76F90B3B231D0EE27E
1401DBFFE93B117BF189DF00019C25A515EA8555691915129D178804383AD46D
D9F92369D8C99D4A5545811B82A63E579214AEA2C458E18C1968BB09B783E7B0
53D5B188DCF04A033845E47D171E67EB44908329E3C4C4C722F9B5F3D9E2D5F9
CF96D8515464A45D0AB973CCC3C12325589ED89E959DD2D4B737EBF1D20335AF
D003F4ED950CBEA0892B8DFB962D88104180231CD85387BFDDBD887E9F2BDE79
AD0CEE7AF2F6CD9297DDFB57E536FB3133B7F2BCEF68A0CB093A11A366BA7A11
16657279D8ADC8B7A1D8EF4469361FA67671E6088B7830F7E1E0E1157EDE6646
59D529CE838DAB137C8C0E774EDEC8BB32FE2FE5AFF2FE7A3973C2BFF62E20C1
4DF2C9E34E28C2735E94F805E9AB61CD6758AA4FEA55C97E83591D434B9FD70D
1882FFB35584012D306CB2E5350052C2C0FC0D428CFF56D29C3B2E35151ECD35
8C15B9142EC1A80487452EB20BE9F003C8FB4F8BD6AE2CA4A104C81DA4F453E0
8A1119A734BB13DBD88839CAB1C0B92D0B076A04579CCD9303DDA07A673D1002
DBB970F778C6ED029411597F9384EFDA165B13C4CD620849AC1A42CA27E16F48
D7F7CDFD0FC1D17BBACBD73BC6870943BA505CAC3E62B66EDAB0326915824732
C25C6C8F905185DE2A9B66378B0FB26F237896410FCC41B86280E0DCD791D7DA
D6FF3A5B9BD7FB0488C67575F86FFF52678E4EC69028FF1C4D5A79DE6EECB2BE
45A80F1586786495BD850C7E0646EE385E2012684E70CF66AA39269862C1EFC0
9730A0334B3CEE6E736DEE94954E18B0CA6E84A7706FD63D83C7DCDF070EB67A
6664DB5DAF4D9AB6674CEC49F22C7F2BF105316CF737777B88FAE3EA973BB285
515C3412356DB34C92A0E1C0F1B8B586DE56C40A9187A816D869A5CBA5A58C1D
4519E7297D1313A3EBF3A74470EA8A7B29C7821076A54E943B19C3646690F80D
984C12433071327578F4EFC0C41220127963B5017C100394162C82A604468C0F
3C058177D1CD8BC11D7FC679EC42E7364B68B98785CF42A46A17DE64D018533F
C2EDEE8FB429A6018569B73FC67CBE650060C8D7E1DB5E594BF03E3C85BC77C8
25580A24FD2CA9A4E7E20EA4B7C05BABD8240C093A8C4CF4365B28745CE7F461
DD8A3F70D3143A058B211EEFF74659BF32FCB39EE3A6EE72596DD787F2C4AA6A
B4E12B4738675CC6DFEC0A418B5F189A07806D23DE9F63461002638D44324B64
F8F6E12FFCC8C231C340B30855550FAB734AA6578ED1111455D51F53F11E4097
1DD9F5A3C50ADD5FAA24C4724177A14A57425C63E329FB62212AE721A405D0B6
CFAC0BAFCEBAF4A5E103350D03486DB18B9D55A6519D9FD9D6FA8C5B5BC53744
D796AE1C40A0FFB7432A07AC6713FC7B4039057011585D42921167FAAB44FE70
84A1E1A08A0CBE8C740F5E212BDCFF32D9C1F25F8D4492CD8F11CC76C63A4ACB
17539CD861AEEB9B964CFB5E2DC6DDFA63AD99A97575223B685E4EA63BA32FA1
1795CB98760FE3BE9F0F6CCB7087687C1E033F54D11633B02DE3C4CD0AD65DCD
BF939927DEB4123F63B7961F395DAF45BB9A65934E4FA245B581DAEA7DA7D74E
974A57E01386BD03FE8A74EAA30926E2C977200B9C7E10D77B4237DEBDD21DCE
B3E0707AE0FDD457B689C122BE5D1273C085A4D33454581757A05DEFC6DD7033
22B2A4FD5FFC6B292A5076369A9578B7C22F86AE485EAA159CB5291C44D05E64
663271B195C92E16DFBC57560BDE6DA29A3469580D335681D467A5A788BB3A3B
104D7050FAD15E83F5A2496F54799B307F864ECD6F0EBDD92EF2024276DFE8D4
C4A56DAE40289F25D369293542AAFE431972CD980DAB9E20BB9DE56AA3F72BB0
BE1BCF870CCED1411A973EC4CBC938AFD7490FF132832995D29037489CB55448
F7D616976DC5D663465ACE1083BA1065862489B1CB204E6F7EA6859F0B954A2E
A8E95CCF3A308657DCEC08E2067F63583E7812B6E262AE9FE8C604993785A41F
9223CEEF44F1A12F66CF7A5FE0F7D6AE655133F984E33B483BF0624AEC7C99CE
B1C8EE8CF2E947AB9DD0CB56202BB2D222552FCC61EA409E2B9729EF23652BDD
96588F9F888EB306831171F02E05CA55B08F0283BE8C474127B099FE00A7CA84
DAC699B15E319EA4413BF05BAF6362F944CD35C1B6AE065FF16B4B6598346D80
3FD35778DCEF52BBB60713E747AF6891819A2AB53410E59E0861EF073D058796
85B03CAEAA37BC470C2890DD59F869F096285E382A04C6A876371E10BE5E1B44
BBC43CB2DE7006F88DA702846E7137B555BFB72AB26D9B19A6639988991CE783
BC94654D8C4059A95A253536034104BFB810A7A74D652B4E6B907C878EF5111E
DEF772685DE3ED3775010656DC84140F1636DF0A6ECA687C09BA1D84C8ED45B8
DF806323C509F4CC3632A2AE8256287B31B8E1DC8C4024659E0A37F81E379A1B
FF9C1B17975C03D6602D8636AB174650A5119E4795C21B4E2444ED3478FDDC25
3AD8E3A67F7409CD6795FE5E7C300F8D7F661C9E4F73D43F8F7FABBE39CD2B4D
3A593D92EE3C9251059258C9405C14277E0F7C92094F2080F2805CA2FE1B5D32
F1AE35B40D4F604C71DB6B47E89FD8A2034056251F4567FE7108497BBEE2FE22
9409D0183B8557806FD5FA327B960DBFF778E112E5EFAAF6073F5E4803217F07
E95D929493BD53041E7390687990737AF415605F63B8488CB18801C218B6326C
43774EC4C4DA8430BE40CCDA458A17C20A45582BA9785FDB17A327722E488B9B
9EB783EE4A78C0AA0C6E10819F723F821956CAB513F496929C6B014F6207442B
2739F42588DD4DDD422FB60CB10501C4ECD5B0766F56647E374F1613A7D396B5
CEBB021596473489CD4760EB93A06766730F89ABB1FBFD6B53D87C41D5A4EA29
1B95E80F0C03BDD4AEC3A628392368A5790F6FCD2B8BA756A81768B60A72A4BB
EC08E9DD362053160552672B8D56C9858AF04AD734F9A89C162529BCF087B4BE
9C67ED11AF08BA1FBB88FDF76207970E7E3FA14C6EC2341A9A592E90581F079E
3A7241E70ED019C42AA70A6070B100863D7A453B9C10B3FB6E2F90F69C6A7EB1
3BF52C7E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 69 /E put
dup 70 /F put
dup 87 /W put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
/FontBBox{-33 -250 945 749}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089
7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461
1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760
207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B41A77EA47F9
681F5618B8703DE456E33A911005AA8BAC68AD30ED18BC9210073F8D09A5E6DF
A6A8EC7B5854CEC92EEBDFF2804CB222CD798B2C12A25FD91C572FBFD56E05D1
E733310E3D9D742EC10D6249318B4723CF308D873A895EF1DD5705B161D802A5
90AE24A4664E5C2957C047E384997B6B1139B812602018D5D4284330978710AE
77603FBC72FD7D2079472D43AF770B33E00C001BB9F8FBC2B2D6CD345D2DDC85
A898835C8C129A94FC47323C98756C2F186E54A25F5F8582321C27682C39658B
59AC6AE16BAE603BCBBB3D923AFC239E54230996A81D2C08A8EBBBF1229C70ED
205F6B5F957CA0086F3A55092F6EE7BECFBA1A7C7D1D5463534180845A414F11
DD70E277F211F596DD4BB077E53D6D21A09A2E20A6A72AA71CF23F3C4A840490
624169DA7457239AC49F1787A214872DD57FCE2CC8282E33AE8FC771E0E07E8A
73A892650D4DD7C0D538B3A4734C066F2543183F2355B307472923FEE62AB55E
51C290B12DF5A6BB7B4A38A235EDEFF95A3DF320849E00520BAA8B9E7C0B1B7C
5E9EF2D83E7544BA2EA57D67C60D48737BB2D2A9A2F87DF3DFB3DF178A79CE48
611DD772CD62BCEDDB43DAD311954F9204B165D8AF9504E6B204A26C0C61E12D
DF852FECD64D6AE45AF620E568728EA92070867AEB289CD8CE5A9EF1800F05E4
5CD098FBD4FE746C7AC8D959E8C2F94A276570B042F3265A31C0011DC1364C86
57446196BB9FAD1A9FC486A999293315CCD780FA8E7FF98A77B91BAE5BF63F50
ED059EFB7BAF9EE4338EFBA7DA32D03A0C792DA4CAFC6D212D2CE8B3289656C2
4A42529F41F6C402517E860997694179C4FA1385F7E9CC8DA9FCF4928520A533
DDDCC5048AF61F6A424B1764A18BE345585F789AD785C4FF67EA2F74D9E60228
443171FABAF38B5C57335245DA681E79873ABA01C6094C36B5A43D067CA03DAF
E0BEFA48228CF12ABB06CB65134440BCC48431C21AF9AF2881BC5325B7923BBC
DC384AEF8860B1164BF1C5B587E868B490C2FCCFC33430076A7DF03A010C21BA
68EF464BE5D692DDFD6074A7F7126BC8FF5E0954D9B18984896A40F99CF89848
952BF2031243FCDDF05F8080E375C3B17A19CC42A7263CEDFE151982C4845ADF
B7CAB4DBF1E96474743E245A26A2921A31659439CDCA452D454A4F0340A2F6AE
FADE20434A8986F8FC269E0275B7D2DCD99AB18D2343914B507345DCCD94305B
1AE6AFD9CD115F5569E307E1ADDEE2A708D5B7908986F8E6CBBC8117D67C1F89
B1CCEC115313FE16BA0237EAA0EE1E83EABFC0FBF68511FC441B4986E5DFA175
F941801C3CD9EDB1EAC15C35F8D1276BCE339B1A2B3830A4C0EC604785A20166
2CC6D930DAD1BD7D6CAFB5C33F34C5213CF06BEB9FCE2E51FDA3362D0F383FCF
705F2FB15F622616AFAF24602F198D6FEAD61CE5FAA618ACC4DA2BF0DD4FE0BA
8707DBE9D8770F4833DAFC2F1934F653F5B4A2277AF741C109905BABC85F6FF2
DE46F2EFFBD2032FC3881390D4F016E4D857CBA6422584B58592FF15BE3F136C
5FC567DFA23F29DAE4DC595FD7D7D37F297727522FE817208846671417DE30E2
54B7C125312832340D97D9B4A636EC5087B4631B33012C5E222C8AE050F71B32
D87C29FEB608FABFE3223A5E37EABB417E6C5028FEFF0CB0BF5E1DB3B02AEEC3
83E1016C6CC5C2056AA81622EAF8C5EE9C0570B74693C11631C30EDAD293B1F6
BEAE51B02EF69960E25ECE203074205ACF39A1EBD2FCBC52058863C5511E2F1E
08CE1E701CB9E31C728699F5FB0291B6CD6238C5D2D09D269A05466D6592BA41
8B1BCB69BBB82665EB954222BDAA82335CBD5704BCE4B51355C0034C031EC948
E1673AB15FD82E364EF7F3174AD63A72B07211FD32A7645BDC1870B0C5B561E5
EA43EA5FB368C5DB88E88C4DCB9BA90273F52757FA433B4897CA4ED890F19B7D
FC26C63E17300E05CDC7D192AD35C4355C0CD91970F023727882E0E0BC9EB24A
10C756205DFB927FDC6CB0A47114D36DAFB70AF363C742ED7E1825B54CEC33B6
7E43E5AD90822F878A092FDF3C3031518062E5F3C354629E59BEC26567BBD032
98FCEA9B66D1CF4AF961335AC75961D8AD08C386515A84C4AEA307E64DF3A7FB
CFE8258A0C77D8AA2BBF9B51E08A6B3A941CEA38D3C1F54C0566BEE839C98959
AEAE002CA4F47F8E6C9E4A2379EC8712160CC4CB22114F4812716075E656D5AD
C70A439E59D2BF3D6CAC4B5BA10A3CB5FC0327BF1C7ABE0292D4FB85A5236C75
1CE6D8CAFA5E0B1E69D40E0C9A8F6E765347BD86316E2B90161B6FAC68D87631
FE81FA687C64C3F316BAD947A6EE07D4958921B10CB153699E36E15002283C2B
47E663D3F27B78B8FCB742FD815149756E1304780C35B9D48D914F8A9D2AB7F1
106552C25F4F84EC84F24A203FC6CEDBC60CF1A37FAA024845CA5A8F5F73426A
6306AE4A6A869E92C707FC598D5DC32B1C04DE76E89ADB4A7DAC598AC155F50D
19730558AD4A3CBB75A5CB7344DDCB5EEAAC25744BA3932833459391CC06CB48
269ED18297C2ABBC13866212372554C3F7EBA570671F4038BB91A83A51C9C754
3ECA714C625E9FD1A3DE5A7981FCC4523F126DC9598EC71CDEB496B6929D4ABF
5C2740CD92FD7AA51BF13CC5D1C1B9F30BC8911BC14F76B778103593A3BEE79B
33BBAB87209B3427093260A56FAD9DD2CAD645AB277EF0665E396CB941D6DE6F
EEE7502AF4A62EB6FBD8AF3749333B992281C03D2E05EF21142C081682A8D89A
25F79247AD5D784D0DB1BD25CD30AEB2C1AC4DF79D4E12A3BE9C4225A6C2B598
047D8442C2277E3FB67E28BD9B258E8EE71178D3FE830288A4BEB67B5B5C1414
026FFBAAD71D496C2E7927341371BE9E6DAFB4B7D64C91E27BC129A8A63B55CA
2B205D95879C2E2C8032B0E3B9704BF6D3D42B349C04866D8933053C1EDC69F0
6D157D320F7F28BE07944E7D493DDFEEE1905B944B668ED9F8F7DD7A8779C34A
A47F5C436D7CAEA5A22897C5C701D1F8AA50263CFE7F9D4D1E3643BACD0B4E8D
098A56A1F7B07F98B4E77B87755D33F062B9ECA07410DD5A3E988E80D4300C77
CFCE2F4A647D489DC9811316075C4DFA25DF4AC956D764DB19A4999B22CAE76B
62C7C9996470F66B6CF5FE6F9D2CA0E2D9BA624D17B946A1D42ADDE60E425851
252F083983BEEFDD89E8FC5E60414ABC1B514D07CF80DBA0A52009CCE73F2F56
035782907C967EBAD44B11E61D91EA36C5449968B54BDC3A0E23FA1D53EB80F0
6E9C0A98477C1F1BB15B8A8A9DDE385C4D7281FC78A7C73D655D2AD6A078AEAE
F9E0D25E1ADA8CD1B0E5C56B541300D0426387C82BCF93B58AEC959A49809C33
35695A7D7C8A617251DB3BB214D725C382932A84427E07400D811AE62D005F66
80F35688522024224F756E3F64FDA0F23B6363696CEA90F29DF19CC66EA77579
18BE598EBE4CBAAF5C4F17601D0C96E10BD7E4CD5E367D3E78CDFA7CFA25452E
A93BA1F0B1485CACA0E76AB4A89D1F452FB44D31A0EF7BA427D1A23A75AA83C1
4222B1E5C35701D2E53BB8D30519EEEEB09DF8DC92FC1CD35E538D53F1A88248
49E0B4F65706264BA1F92EECA804C6E9ECB67987402D439C119D5B52E4EC9AD3
E0F900583FEA9727EE3A79C4CD119BCC755ABC1E3D56BC93DD71CA512FBFB9E8
B79C817F9C008B1EF60D248DE1DA521B84DBB5B5DA9980C960A06E11CC039CCF
BE15D151D160F81B8A081E16182D85D747A1DD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 34 /quotedblright put
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F90A32C4175B6BFB279
024EAE1B04D721A6C54FD62484F8949B2CE9B87D9CEE04DFF82BF14931B3CA03
AA5F701B6F80BBCDF2C427C40A51597F0B1BFA25EDD7CE0EAF2EC676BF0059B7
15DD5462BA30DE78A08DD533DC0E8D85F9DAFC5FD842F417265427E0F1B71834
D2BF6EFAC3CCC40D3EF3B2E2080F148441BA45E366C4D6E1518CA79D0F8BAC9E
8E96C013C5983D132995F24CBAA56D109CDC788C8290329263E27D61167108BE
F6F7E34D9763B8488961B06606C887EBD661360490D1C27000A57DDBEF704857
0E8F5EF47A6BC9FE32D665F96B1BD1053C2B9B13978232C5BAA292BFB5002ECB
270123C4328F876AF7B3D5608AF8DE787840AA36F761E1D3039E5884ADE4D847
748C9A06E3A59A3A501BABCA7B001FD0E905C3AA4F2C5C322A2EE36FB2990635
BD9E564481BC260120FDEABAD5B6492CF06B198DC662742EB735619779C22D65
AF2E30C0607862ACE3FAECD6767F1F3004976BA3516C0F46748DF6D2537228D4
262931785C56FD63F5F32713B6EC173DE79A0DADBA75077D02979206D6558AC9
3EE38F05514FC2240E7DF391D5B24A168FE1E21335D3CD85C8342D30A798FFA9
B26D912799D11555CED849422395DCEBAA7D01D4CD352FF15B440BCBFDBAC428
DDBE93CE72877DD4A49B269B9556A0885B900B85E470091D9F47E7D614666194
37C866969917FF2A83A59FAFFF833C4D59C1941AD41E3510A001EF34D62D3C6A
61C1495F9B0D38FE63DD90ADEB940260EF8C34C785DF12DCADE1D98A80245746
6441404AB59E4E5485646CCC7D915BEDB43D7A69B6396F9190E6EA550F1F5ECC
A4490EE2F1C8DE42D0C7B22BFE8F09714DFD36CF87A55CD5DBAB05E5B3B3693C
0ABA02E046F6C88E1BE994C9BD53E940649DC41B13735EDE57F82411246D8FA1
1044C60A22F2B63E2538DB8C1D79959CA5C5DBC9DB829A20CB5E8460B7513A4C
31A6C2DD7C468CD59F16F6AF9EF0D998A30B13176A72C03CF9F1834EE4A80594
BB4BD35138BC412598107C77DBB5CEE3770216E29A6A8E0EFD2F29304CD1CDC3
E76FD941CC11C921DE1DA42692FF26C427E2CDAB7E4C74AA2C397D0F5E113BA0
DBB1E1EA2E0425A631741400B4B6F6852226616B19C51800E61464AEF1760069
68766A64B5958147869BE59B5111CC8EAB18D9199E2125098176388459F62396
17DD0D36AD7CD6CB000018ACED61872E8BE35C3566A9B952053C2333C5F24B2F
CA9F277757753D2F6EDD21768E13879ED32482B903E093F21D15504887AC3422
10F51CA61BB22D4ED3F309581D152E58AD87EFCB9F8695A97E7AB80C191935DB
179B5356CEB8EF33442DF4D996ED5EEB41856ACA7CE0B40780DD6BF166DB744A
42B0FD920E26631BB6AE8D8FD212771798848FD41F375847559F31E98376A6B9
61A49F4D417DB14DF4082A54778F4FEC2D3212E127CBF42AE5557D76520A3BD2
020457CEBF899DE23F6CE83BE0B858CEE311E32359887CE829FE077A65D22E91
F574540A79D4D5F08EB8732CBCC914FA5EB82DFB0B0302C93F0F6BF3ECA741DD
C5E6AA48F46B5BFAD038C883BE3C5A3DFC3B1023B53F919693D926C30EE0E764
D5F0718E1E6FF21E3D07317471F236816684C72959767B2BE7699D724B0DA358
C026BF13BD1EC67FB112AF4E709EB2EDB6380ADEDF041D3CDF7FAA77469DB01D
BA261D5C83ACEA3F689DC99F2ABD561EC07F64B022D41E0885EE1E0C0B924FEB
77C3AF4D74775AADC61A54BC4D32ABA2AD65507CB897AB1F4E48E3C105F475F1
DEBFF8907C698CD3CB27BFAA0EB89215A61F0472141CF6FD631A12E0A59C0DAD
534C6586FCCDB6640A17F5A25F59E07E0FD1AC82A086A7BFA0BE49A667F4C5ED
2C2F7C57EE68FD5915D4FEEBBC64BA498094A62A27945C79E5F9757574E87859
0BC40D509F94E5FCAD23F16D46EF270AEFFC1C9B565359B2E78723E8DB9696B2
7FDCF1375F232F95BB8862D540C5720511EDFAA0BB4C751CEE05A4275285DA9A
506239896ACAD6EFF082B59BBE5A8F250586504C4358A8FD81328A658B7D717B
1639333275F8B91C6DC93F8D64EA33D0982CDED1256406C04951A1950EBC89B9
B33C906E868B6A8A53DE8AD4D5256AB17364E71A79E45141CF364F70A0AA73CA
C32AEF8D110B679EFBC642DA4642FEC57C3E2624041BA6AE0ECA8948F9758E9C
B01C4BE00824D69194971977762F3137E4A29CF75E7CA5AEEABBE8BAAF372900
9568A58C560553AA8E54A61FAC2C1E4F0143630EE4F90118BAC4D4CA93227527
B130ACCA68C64DD8E082911555076F45E71AEF1926C78723A18139BDB7DAFC4F
8B919FA63AD06F328B69DDE50884519EC65F23010FCD4890618541BC4378CA3E
B728E49A4A4280A9D428434E48D8A9F32D94B22143012CEE76BF853435E06562
E8F031DA24D514BB2393326B40F10ADBFBCA7B34034EF81FA78AE00A9C2D48DC
F471A1B29DB2A08C61B51A3D9DB92FFB9586528C63B1D4F799EC8860F599322E
2427DFD19414B3777233AF1FF7B2B2EFC4850906E719D588687804ECA98FFFE8
D42CE0432436DC32D762DC414979B6FDCDC90313424AAD6296D923DE06F574FF
B070437A72E6EE64CFE8A5BF1B8BD97BCDB5A3CB12C6867022173264CB352DF8
35FB3F1A54EC5D4A4E2D02FC9182C82F2B8FDF4011836C02C9469EE3E02D15D1
43FA9B91F674A2F2BC60767EE5CA9CFBEB6721E11E89A907CD73770447AFD597
58299A068869AAC491CB098105B5FC04565522830EBA28C905D68C1D624B6575
3C2947CBB3FF35CBD7125E4AD2C61F5E612B487BFDF21E3E9BD5469B5188D091
A0A50B0C32A075274CA441C45A3A3F80218170C6E5BBB27CC20E75F949940341
D9BCD11E3C0B55AF0B6164CFE995922766AF136977AF057CCF02D9CFEDCF2ED4
0B357EE37D1BA0BA363BFC80033DBEEAF7A3C6B9B10EF4CAD92E0618D9ED2DBE
F1390699C9EF458B207D0C1DF2866DD01003570A0CE4CA7740BBAC91383C39E9
5444752DB8AF522811D0F9DE74E5EC5C93E70B6EF4702F65DF556047C8DE56F2
BE2D9D4FF955E9F97B4A6C340C9402C310A24AE074C4E9B707DC900C785D9855
448D9BAD9DED6B2D5B43ACC75A34EB890886EA98DDC683BABBE8A0CE1DC18B20
EDB94BB9B04D49C981F11C4EAEBE8C9019354097D65A07FFD2E58B43BA439933
A33B8DF282F951C042A96550CB76AF1A54E9925ED9F9AAA159AC5B869A0E96F4
F24AE44C82D16B3C5D61DD413A9869714310553C3751A7124B95EEC496B47CBA
567157C8ED608526A98B14DB1BB73EA0E09896CDE40588281A65FCEB1185D162
9E67550381D843F836444760F525136796DCCD66F9AB803CF75F4B9D5C58D037
3FEF7DEACF754B583626CB1D0F7B00A48E4341378409C47149224B1DF6579421
6AC0D1A6BF9C8A215978D2AA29E7148E5801D5FE11B2BD40B59EDBF24CF1ED55
CEA1D53ECE41F36C023EBC95706F28C69B9B19BA70750C5BC61F614C0A27C9D8
5475020195C2820BDB78DC356F6689EFC5043A7F9DB425D9F2DF809CDB309F16
D68E93534E204E0308B4E9209D964F1A7DA379A431FA4999FBDDFCF02C597867
7650E1B25460D7096D78E31B9956FDC746D940030C991FDD2AC210E5871A6139
53A8D6D98F83889C23D8817D39A01B28AF6C1B9862FFEF63AE1E91ED571F982C
7DC21EB71485BE7C0C7B1F095DF411016A743CBE75590ACE06525A8409BD73D9
3809105F15651FBEA6456FE72F17499066F5DE99BE83C1D63BFD8A9DAB29AD52
83CA8A8F1D0D525C53EDA5914C43DDD4EE0AE26DA43B268BF785348AF84E8483
1FF05A019FBC3F898D29566D1D0FFD26143AF3A0DE034C1B0AE6D56643F1DDF1
430A6E1971AABCFC11C61DDF7F6AC2EC38242708739B6855A1C556FBCAF9B144
3E029683B78EF009A0799B99FE95C6519A1377F6A620066AE6EC7CE7F6D9EC29
6CAA7818EEEBABA8BDA2DD61A42891379DE29E58C57F990CA2D0B30992E69920
661C8F1C541ADDD82A2FF747F7C08D53144E33F3379B4872234A6D01BFC7C7A4
BF22AFAAB9AAE7C0B0853B7D9BEA74132ED9AC7953F1F8FECEAD9049F03AD2BE
9C2B704EAA6FE1BED6B9D5F24A8E6A970BF813349D9BD6D7B8FED3CAA2F323F4
56528D5FDBBC68A02009DFA0CFF94D486B69A1E0FBF0D0A8E1264F8F030EA211
1F07B970EE7174C95A652E7288736B378FE840B06ECF366FF758F7D16CD25092
12498EFF37EAE702F9AB23FFC6FF201B440AC22FB1144AE1DAB3139CE07D5001
340908BD59A44D503C5735C917253B1A9B51AEECD70F21C185244D7200902977
A0FCE11B1D685F8DEE3BB4F58B374A230CBD620BCC41C95530B42CE05B1979CE
E47E7652B58C28E2F10496DBCBD2FCD1B875145FC74D8BB7EB9FFF253B1708F5
CDC217AA31BA8067214CCD330696C71620A07D8591BBFD0CDC8B2C233C0FFB71
400F09C3545F93E4024B17B6480273269454B395D20B31284402815F96BBA624
65A1F5EC243185C59A554218470A43E6D4D986017B7125D14E0569943FA881F0
56BAB091B9FC1618B28AE2BFEB0E1090DD47EFBE23623C229ECD8878272585ED
E742A19BA82792451E80C6FB179CB019D35A4886F4199A9E071A533F4B17A585
EDF1AFFBC6405D4ACEB9ECBD54849980494E7AFA78EB53A868BEB388C065152E
DC3EAB68C57EA90C6E436C46E01ACB2F04096458E8323E0DCDDD5310881521AD
67C15B7D4F029EB496F70C0F2025E71459803203EBAEA2A0ADBD41B65333AA4F
5A2BFE7338E9B306238E1D8BC6085424916BC7DE6F88D2E02A0F2D5F35649BF2
E53465A5880B5A834C6C156B18D4820765E32ADD01D07CA8FD9EF29D2F78A265
8AA8DD15E953B260B1D96FBF63DBF198726C03374B25D0F876C1C3AB4BA268D3
C87CBD9B5314D0B8D5FBFB08637253ADABA6A08996F6E61FCB734770302606BD
BFCD44A338889583B36C355DABB9808D69B95C9D2A17F5B32D93AC2E5807BF5C
7CAB1CA944F1D42E808F9D685635693546748C40E5BA4636D1F6E110F9241F54
3763F508525B73285E4A8AD078BFD1BA9973A2C62AB9D5C668A30E7A522A7F60
0326F481652F976B930DBA6F800ED84ABEA9F12901E5640A862653EDCB8C19D1
2C01F984C27F19A7D8FC4B877EFDAD0993720CE0D429C9628EB7516C3B42F2E1
D263F310FA313ABF404B1559D654EF3DAEBFF0013C5DFB4D1E497821574CD903
C96BB743E6D3B9010FAF0A34BB54C90F11238570140FC767BC33962035FE07B8
C8A7187FE57A51C851BA5799933C492367612F6E35974753D96671952E82E1FD
F5184D871015865529FB8D5A0120C4B79909331FCD71D9FBB0D49C924518983A
D5DE3DDB7E6316189316D6B06CD96C6B1B6C7B856239124C0E5C5AC9CCC7C7C0
C72975B6D41A6E6CEF2D49B32FE08352155083ABF341AE7E369060F882B42ECE
0B0419463BDA73574837FBA5BB1A91F2223BE30A37EBACBEB56DD1883A190168
4E4DF5866A6F420C31FC24B39B21ACF13B3B3E696BC0AD27912CE71C1D008467
88DECA100D5CADB5950536566184EF1B25CF49E9558C69768224B8799EC06441
B2678088C788DB307E71B81CBE72F57756BCF12ED0BBEEBA9AD11938E15C84FF
B7F87A74F65CEB103501BBC71081D77206F432EEE65D0B1B86C4A99F2F82E1A8
C1A99BB1618BBF70CC31F6C2E9A7AB1A0921BB4593BD3B8141C21906D641D749
A8890767FD65E615301C335A832AE379DBB640E6494DAB43587D7ADFBE483ECA
4F742AB91B8898CD249D62AC2E8C637DD9B917E88D7A2F3D2D5985794A314E62
BF511EAA4352A63C44492F198A22DE6457690F97504EA320ED3C407F06712B6E
54C5CAB192D17332B1F64FF905B5FB7B27C27CF97EEC30A339EC1623AC2EF63F
ED9B7A57B91BD980020AE2F7EADB93FCD58EACA62094DD947024B6015DEAEAF7
2BA482052C94C920FF003842D0F77DF612361361220FC2434F2061E923146828
2126EB1A866EBBA9A92E357DB1659AC41F7E1934CE2D2C1C4093AEEDB96F5D21
E6B4D5D3863F804F5251DF7EA095299A01F3D1654F1144873B39922D2E6426AB
F401BE9F2EDEB374638A6B81C497AF1A3BF86AA92A3344A5E429BFF0343D2FC2
92C47BF0E40A9735D7DFFC0129E615C486DB63E1EDEBDC2D9254F35F2BF0D8D6
AAC471434DEF458C60CFB09D9527981AC6495DA6C45E1F7829CEFB77B283605E
3B546DB071BCC13DC0A613F033997B770C1D1AB9F4FD31D3F494A374147A2675
5ED2C526E931B633C85743BFF76A47B505EB76C6E4F5F9930AC8A5EBA9B0D42D
EE0F815E78416AF79FECE5999FDA65066B5ADDA64C738665A471DE6AA902CF6D
B867639227419D50B5DA0FBF4E554277BC77743774981B5F311C4B6338B1A442
883BA291714EE7C9B13CC59E725D847D5D6D90BEB3962888946EF0A7AB7B4EED
A1AB647C8FF6D86FC7AFA494192800AF68BEF904BD04A44B4EC8F27247686E98
CB5D6332C5780CE5B447EF5272B68E280396BB0038EAFBE5C15663A102C354ED
2E6795246E4A6C072056F93F58555E56BDC79246C693884E6A473EDC0B8D179E
D2321434D6FFC7501FB674FA1EA63AE5F4E231C96F28C3C4CF486DF084B6677C
309AE973D621FB7B686F01A9B35EAD32189661D4078B259D01C76460829CA747
FDC8A2EB95668F8D11DE94D30C4C0015F97244169F50C39E5D1DEF6ABDAC42C8
7A9FA1E044B3AAE3CE402A134BACD3A480267942A6FF2BC1B7A51663AD4F7CB8
FE32EABFA32715FDACF044382EE4C83CEE9C5B5275A24BC7D653E340A62B95BA
E19354E86AC07768661DF2227C1B967CEF410635E9FE5335322B68EEEA00E49D
4D3A8B77992C56372985DB9B0D65161E48F7E017E660BA209FE5B5484FB2D152
1F84B8BB29212E303D38699F10CC1C2BD040171F0EAC6FD6813DC1F2467EEAA7
2D5B6E233564255498561675B8730A03A724C55CD89B0530AAF45EAA274A54E6
6F0A44971A19F15A677310435F00FEA21251A606203744A08C4796E3FAA94EB8
7EC56B13AED730BBAD23EC61271F6179B2D05284D8B4088DC12226849A712BDF
44F01046160C9EA7803F498D0AA1CED10437D4840DFE12A0552EF0231E92CCC9
B991D9CDBAC0918FE8C8BFCB5EF28C3D75BE99A302790CDB054BB82CD682D4A2
F524371E3BDC71A910A873A7B5DA17484BE4D3B0E1EB80CC24992A57F83BE21B
DFD31D9EC9D0CCDB014451739397A1F51F9C90F10457BE1731B9B53EE7F2CE5C
ABDC82B8B6077759101C5B04AC0F9FDADF4802620ECB8C7170BA39F7709F9AFA
E6241C61AC8832688DAED86B85988790EC41B088CDA53DA646EC7D66ABBFD954
E176F26E074A1EA2401A3EE979EEFCE752F7A151B1786CC4159D94985D8D6083
C23CDCA11C30E0D3A7B07CE8C005634A8A737B518C8C436702EBE49D0709B59F
D366603B062A10F82AF3D2EDE03749874E14755E9BFBDB3D34A87F2C6659E773
7B33A4368D556F1AE0FA06AAFD75BB548E69DA1B393D7A068985A537EA9B3046
AE397BBEA8006912097A0FF7A8588BFF9D306370D71E9FE625F0746E526444AF
DAF8F166A336EA2C0E28298ED7E06A806F1785B62EC3DE9C104CCD52B318F2AE
555A00719C43D68D70ED2451DF86AA08650D28ACCD67CBD33738E7757E8E2B0C
B0093CD2F99FC78F082F294BB4F0B99CF9231F11FBB3A1F2B5E12E7341CBBD51
8A1755F0BD5F99A1AB5558D08F531565D8FC143D9BD83DFBADEBD5E592869F85
CCB38513AB28E8DB8BB3571CC6E3CEE2113B83F27568F2C06381E202A5DFD811
82803EA2C9C5A42E025CCB47B9E285651DE94328117528A57CFE7A2F947D1379
63798BFC38697078108C2DB9CD1172D49C24A9E5CE4CC4C9588851EF85982ECC
428B172FE186743B4EE44C89D2A8C5D4684D87E2D3E10E71887716F92D393E19
7D04D0530D7FD4D38344A8EDA3EB656D43E2F0969B674A3E39EA722AA7E0F0FC
15F7D815ECE3C0A014E08259EF587C6F102F09659DCFD708E8460D6C139F9065
38DC8016DC25992B79DE18A8F05FD56EBADFC6A1243D6F2B06B1A6714427A9D0
45DC87743ED9E41CE1ABA1306011519966601D96EBDBCCC874EDB0A29C173078
9168BA13E312860F6F86465783C6A7D1603E86CAF75E0C43456D96124174117E
C1007ECF9CC357F1315F74A733E787EF9E3B8B0B75BE57C1CEFFD6B1B874D71E
B8836894119991DCE9BEF9D8131CEBA6EDCAFAA65297048EB2C7DBD0B7504397
BCC1F9814637EF5B32E1460EF2F95BA227688CAAD92327EB9A0F938585F0C4E5
1A9A47983E8574836AA1D35FC57E139BB2C82C969C76E3DC60201C072108277D
D312DC4CF49CF87155CF50393705EFCB2C14FF684DF7ED87626156DC32C14F70
5AD1D0D211F915CC725936768787EE0DD642776251D24F43B3768D71DADC11E2
AACB273F54C4F56099DF7F8A88B075166575E551FAB8B2DBA3C0C1E04B8A06F4
A8BB65814BDF54BD6E3BC7814B08FBB7456270E8C6AE4E821C7F2CFC2E5D63F5
C1A11DD4C9E22DD675E80C52018F7499E826AA4B0847AAD1A6DE07CE420915D8
D6818FB18F2A9ED99D88926E51C63059CB3953AE041479135B2E9B47BC35FDDC
36FAA07882784CC78DA0D1A0C9A011CE9FAF50F8F8ED0D2C9F7019A57B506845
A95C8C5B84F758D82EAFD78EF15971FC959C85DC40A32E9C92B313AE6C9B6A01
363FC91D7820039F5C6F6C1F688198C513E8D588B4A71EDBBFB9E6C75D7162DD
1791E120BD3A7F227A8DDC3CEEFE00708BA14D2D951331B13224D4CA86ECDC9F
9A87B85B8B601B3C023490F8964C012EB4C9FAE2AB99CD123B2CCDAD6CAFCE1B
570E98316B458A795D6E1BA5D2B2091FEAB5AA47930165E19F19B9B716BA12DC
713E27662175508F25C34E892ABC21F65189A7B0539D4B5C62BCAD1040B67F7A
18DF665DB4E22379DBABA7A9A8EECA362AA72ACEEEAB4354BF23E34C5BBE1D36
AFD0DDB862D56EDDB74340801A9B99A3FE6EE5E54CA2E26799D6E0798FCBBD2F
A95998F79DC262B32CF446DE99F1F28D7E4BC66D9E8F49B605C40EB2BD2B593D
FA775C4AFFC93BBFDB554C175CE7C08B2BA23E030DE754B9A531A0A773A89247
2AF326FB039A4EDC00B4615B0AE394EF969C36365EAD91B28910BFE2E19A119A
CD175B85AF1252BC04BB6A0F5977A603928E07DC8A44EF4312BE3E1EC4109D20
746F7F25898CCBBEAE6B18292D597B8A4B3D0128F75502651693CBDB97C8B964
C558212543B2BDC18F8EB0EA99717FC50F96EA88708C981030319187A96B5E67
E44EA94DDB461E1DD7FD05A8D805A05010B172889344563174C9B06B476FEA9C
A3ABAEF4554BC89A1FEBD8B04A73F8075A08F61BCD2A47BAAF3D9F7B8E3135FA
5BF9682D099CD94579190650FEC2C192E46B48252E0BDA65A8C0033EAADE78D5
42A918B3982877D635623FCA3720AF5223CCB40B8BF9D8769CE7E5A2CA443FD9
F93B1B5897D9F820F9C89089BFD5E80565FEB5400F3DDD8785C6FC1BA1DB1AE5
80D92C516D0C247502013E375FD6DD39EBF5E91482A565771FA8538F9B5EB2A3
70FBD1BCA09F5F6317E26D5AE6A7CB94B462893CE961331DD7336633AC21711A
AF4218C54B8AD522C2250327B32389B8A295DD1F558888FA54108271EB695585
D94909B0C10EF3DA2514DC013F4DF962C9AF49C6DEF6BE9F27DD06C566B952B0
E54F70849595C7590D53C26E8EFFFD54F150F00C5D5641B093AD580F4A488396
EFBC266030373575D488E79437053188E85D4AB341AC9857BD6C1D9DBD3048AE
646D90DF421D5A6524B4458CBE6D026C8C405E1B948E396F7ADAAA9D2175E1A1
CF8D731477EDBF3DBD813B88E9FCF2A0634286DB48F1690B55274EF702FED85D
FB6B34179754069F09F5EED19D5286C29B9685B47D6D17576302AE59091B876A
8621F5DD5BE793CA75FE932BB481505C85C2942E2AB5133FD7DFACC3B48F2429
2D6972E4007701BEDCEB4B6A9B6158582382BCCCAE242C6BAB6BD7444CDB59A0
FA61B9A2340F8A745925CA1DC0D6807A16E775AECA7EAC0BBB5B7B1E99A43A53
13A3529EEC93C9C9B670C341E68EEB14290EE0A3E12244BA8B78C5E47BB01E69
D019CC1162914397C3F62F8BEABA27A2AA939741B821941ED60062F1A37ACC68
0809707840AD5CC7B2B571A26BAEFA0E5223639AF598638EA63595637298DBC2
23770759A94271F95758DC9B9F1321D01EF3B1B72FB7F26EAD582E322E063B79
912350630BACC0423CAD07C6716EE6B04AB0DED133F0617587AC7F1F7661F8C5
C379E67AD5621F68106289F9C376A8737609201CEBBE6A4EAC1BD37CF778DF81
5C5BFD928327B3DC84B90533AFE46E57CB1328608D35AB3C7CE9DC9C7E195A16
693FBEDD2EE1C09B7BB3723F2D80E65600A5267348089861A9759DB228B050E2
7A0DA71310C648C0ABE303DD0668C4D3076D5DD0A7B987A97D7A06BB2D6F7B7D
AED3BABC89C3BB8F4372FC276B579F4AFEC713077A0A559CE43B53C671E5DF22
31169CE6A89E7321C81DD25ADD160080B555D3DCC6648A68CD81BFD55C61575B
55CE81AD2FCB312F598091DD489E2C89D1E2DE3DCEDC21192B5C4F19FAD686C5
E26EBBAF20A4FF199D272D2827ABF70D81FEB55B6E8A0A4E8EC556C6E30F632C
01C0B4DA6B43A2A2C8E16551D8D38C6FF29B0F0B4A19C3A5351894C300287BF3
C450EB0B53F2C96C311D84E6910A20BECB97378773D0C36C7D36161BB7E471F4
939323501EF1C3290AF265082ACE455646B5A8E5CDA75E3B42ED5D590F33039A
CDFC17F0E383BD78C243247126D25F1CF2927C972633FEE93BA6D0C2FD5E1DFD
E5291719DAAFE40E89A93BCFE95FA6F24A039E002084700A0F6C3A6D1FBC8BB5
8AE7D75ED52DC79F386874D6990C0DE2CDCE27109676639058BD0851B0D4D4B9
2E06446161F4259EF7F08B253A4D99A384A0B7B981CA23833599C95A85663558
BA417EBF2CD699E456FF07EE96F679238E19A16F23D3C451C2F60D1C1B8C8121
D2CB73F55CD3491C305A459FE6578E99C904B32B0B871F0BF848D9058BD8231B
AF07485CB7370B7CA1BF10CA0E7AB392213B9F4BB8202FF4E9689E36F5969A8C
14045227D31F349F0A431768381FF05D0918043A0364E0FB6E9F985B950BC05C
854ADCA445BF8CA5BDA27C01DBA3D6E3FF024DAB523BA821A3EFC2D28A8485FA
731F61509039BCD14E4A5902BE27E3D7D9EA84669AF6A7A79AE161EF66EC2C9F
6B129CE1AE24F7C5976B5F9F5C3CDAA7EC934C59BFCD71C059884BDB467AEF39
567F64595D391C5B87621D502EC8E8DFC93172E203A1F4E83704D398EF4D2826
52B44067A94FBD3F5186B2ABAD0CA2C9A8D2C5942F008D5BEEBA95A60565A7DB
7CF96173AF6412E973E494553C27774F9F400B047BAC419BEB5AF5E73A16B2BF
2952F427F4D2EB0A8E49FFF24285E853509E0D8183E4FA71A475DB7E6F500549
E7B84008437AF73D051C80D96CBE6CDD2FBF0C0A1AD4D8997F049BF0EAFF0F85
3CB38EB70844361987548FE07B2EF0D080DEF138694D60EB578EAA153F4D1DB6
24C943C6EB6E769D31A60A835C69904551CDAB7CC2F73F4C7D08C0523561C4A2
7D91F5551D3F6E91772CD9A6C30B730F0407A151609DB00838943D72FF15891B
99F5C453C9A55ABE30989050078C15DCF96585584E271243856F4498E78C53DD
F772F8C6A055FA1935A98D2F0EE718B0D61B169E108218F037D9D5534B52E077
2F24FA781941C52C58C0117354343D88F57A7B6063927826E2546B62AB747597
13B8EB434017BD286D4B8D1324E89253BDC7952632AE3B9D2EB5A2077524E8BC
F30FB91952D785D81CD646C0653F826803104A40FC84E0C7367D70E5076747F6
835BA2EE060485F4C0B8B04FDD7063BF368B5D03919BA1A6BE1C73BFC1DEAAA7
359378C7E4DB1AFBA9B9ADA3BBA9AE1831B5AAF7D1EB6D0E0203DA6BB60B700E
D1C88502760CBEB55448814D8C19AE14EE79331CCC9E4EE383DDECB5529C9A53
44DC42EE4D4633167E43975DE83F428E82F748B50A94FDF25001C9F3A5ADD08D
D2D92E0BA5FBF1572353BC19A68BF4960209FE870ED162AB8A1544907A180B0A
B7DA8011A6D287D8EF177118B6F9592020AACDAF215A51E3092AF3E3D620A6D6
903CAA0664D9A1DA53575287ABB4FCFB8B07286C5B32AD4FB317524A11B3A9D9
2B6DD74E3D0518F0284F5C3FC73D823018F70FB554B63E8B08666EA70626C61C
85E2E7808AF2B58BAF9CB731FC52163FFCCDB2003C1422109422978F9BFA78CF
15C4DC9764565E1D547C38FEE482BE141B7950FBA898E7A05FC4C1D7A898171A
4D2DD4F18FFD439B245EE764584AE55F9374A96A26D814BEDC1D8538A093B81D
AFC4BB90CFE50CDE5326C2C28CC971E0AA347B98315D5545F108F9FA747CAA97
519A0229AD41EA7D255174A7CB3D300931BAD5ECD20FDEDC7B7389D743FCF1F7
B359832AB63307C9EA17CA75ADB64F673DB60696140500F5996866BC65823D38
4F225B5565B174B521DB5B9CF4A2ACDAB2B2CC40376120474632E8DA7A72643A
6DD84ED7CF8BE094A9EB1446EEDBDD0AAFA2371F0BF8DF820559813EDDFCA336
4987574BF51C3C173D51D2E4BCC733839D9809F2D297408F7ABB87773A4D1B58
691F6D8D2F76E59C857AFD1DF9A7A2EF7433B8FD7CB7685D9135F557A94CCF55
3F6B19B2BB57A2FD7E2FC165BB70AC31EE3573AC55C801C92A30DF854751E6F3
8C9C313829EC3DA85556270A530A7EB78223EFA0C620269AB2477C90CBDD3F51
2799433E33C0B14715920F4B5239FCDCB7FE66146FA38D692C1DF46256F79071
284E39D6D4157A4629B199C56CEF41AB69CA176069DB6826B0D031609D748FE7
7F85FFEA216208C8EE921B21C9479810A3F78EB2D45A5599C6FE608923C36C79
F7679D7B7D6F91139B0F09764F633F172C08C8FAD1572F70CFFF2730B390C6FD
7A207353B3CA110F287DE5C16EF2E0D00F1B5C7DC1ACC9BD86052CB4CC720DE6
95B2E597A7457B39FC8E1DE8CF22EDB54779FB20EF7A89DDBBB7CCEEAE9F1613
F58BD16D881889BCE52C6FFB1CFE347EB0A3A2B04452FE57F442E1A3E7379DBF
482BEE086A82129A1203EEF0BAE9B5E411FA9A0BC8383AE177A47ED4E4C0D0F8
9C33C3FAC4DA6583F05F5ED1F62A07CBC1C40F8ED33CDB25D8DCF813BD3B369F
4449A1F9F92E3F85686B8F413FB6E1FEE71C3E103D93A0B913D677AE69BCEDAE
9B772BABFBA3F4EB27B863BF6C7B975EA51D8567457D1F8172A346B722AE9AD4
FAB66F721C6B46DFB69B1CFF87535CB475FF2D9A94BEC297FC5AC63B8A2DDFD5
FD1DBEDE0782BF8913B66862979827FA35997CB7B881D1384C3EA395C1C16D25
EB6F3C033E0AF3FA25D586BC503D390F2803488A1A0A99FE8945B03F98028270
CD30F7B38434B80BAF90FDAAD1DC8C239ED9940FD49E479D966C2DBE23E82BED
9F770D88B58391C0977B41EB9A13618C9FEA982172F650F5264C6CA5FE60902E
159071338E0A6CB0F1723CED218E5D0283B586C38B132353F030EC51D5D9E7E7
7C84ADF6DAD7ACB205E6E0C83F3CF65859A047295D9FFA34A0C24995D35CC2A9
5E0D1A1BEFB13E97A3B1EA1AF5D983A26A5A2A0539EC8684E5635048D714F9D6
4954C385C100288C749EB832F43A7BC2C94A27B7C7936D9E1BF1059A3799F908
088FD56232CA34722A344D7BE9FF5B0B499A5452284C702CAAE8E061700A9146
D6F617F3D202C3F8523D3E70FB52B42544B9BB64E97AE5D188CEA1D1AC557D31
80BA7B25A08A5BAC52B31528C96FBC0C6568D88F0F42D6008CB2BBC2B9901385
A7D8078C72EAFFD23EA93B76D1061C7D261C50A07ADC7ECB8F664D37CAB147DD
899709F5F752D858AA82A3878143927424011F77078D1828140D7A1DD46F0767
6793D384F0F674DF083455C65C421CE1E0329668A11BA3B45DE5ECA2EBAAD6F8
56F018513A5F5C8C3618D174B65EF8D502D2689939BFF9996A1F54088A5F2B47
3E6084597BEE6207CACC02D3814CA90C8047E9B47ED43D2EC5A536E23F684FCF
DA237A6175E8D56F2AF3BB703D0CA383BE9541ECD54217996032E666822E8CD4
2764F925D079BF86A30C428615171DC9F68D125137DF7857910A0781EBB70F97
1CD17DE3C51DFFD8FECF95F26DA474AA453AB1E644DF6BC5FE52720B49AC69CC
2165442D206051AF74D94A9543490B86D0DB1068F814BF8B3DC1745A61AAD9A0
65033708BC879B1840A1510DAB2A67494BDB4D9C8AAA76C40F5E0FD350640BB0
0EC5428477F93F33D150233B917483CC1F681F9E38E8489A7210EA2E9DB19749
52169E960DA5F3A12CF0C0A4F8310E92A03FAB9FB5800FBAEBDFB4EC42126344
B2E493D90C73306957F2FAF17A38045BBC57DE54782E80706D578518617F4F52
BFF52DFDB1957B617854CFA5EA37E2C6F7ACD8F4ABC695C6869ACB8FBA559DD0
9E46EEA80DFCAB2C1DE6ADBC39DEEAEE57CA68E388C918768BC085E3BA658864
5213FF2CE6582279B241CE61ADC245A8C9D9B7863FA9BD9CF8744B1501E11DBE
65F6EE3E476CFA1DE97DCDDE3FA6E046219877BB49769B1C7D77A111822F7706
E1B5BB4BFC9CE253710E1D602D1E4EBFB6044B1FF6ABCE21B5FB754C1639B7CB
F0A14FFBA64CA160B0F5488845A396F118FCF91978A0D02CA3DB84690F8CF611
AF0A86A3346C93EC6526015C075BD24F05101CD5951776CE547A46C5950F443A
04D247043F102FE3D2FD0F1E3E9F8A229E10ECDA74D55BA3E430874ABF0D9872
B8436D86E69D28439F0ECD13697A62FFB0E39EEF4071F8D3E124B4E3C9658ACE
50056E5E0C5C96E047D3417C049FA78F201E19085E9691055526666CE6FA58D1
7791CF7E40D0C07941029DBC5B0BF6AE23C24513CD43D476EEC250BB483AC4DA
634BFA0DF949FBAB2EA05CDADD4C9667BC8A01066CDA86C23A378221A1EE9A85
49553E665836F5EA874A09D21461931421BB17A751C6AFB1E1D12D807198933B
7B33AE91AB4596AB8620CDCEC7F4A76DBCEA88571DD6B4E378072FEE91B03244
2133F9EC01B2E2A0723B81A54C2B4D23F6B4205E2C0B8AE52647A72990BC2455
C36184BE34FD402663B73012B1510C5688575C4F9E35AC25C95C8D13C6BD2426
0581FAD197CECAB9B1B2F4CC17987AACE33005AB6D58FA66D1C1E2F8C681E4F4
1C8C624D44A198E6D69713C8BF44C047DFEFE0942BC3097BFECC0FEB09F4ABD5
9D1C1D9F17993AE3358D14FEC073994BDA4C9CF1783D3B8EEFA1D846AEB7DEB5
796632B7870F8F52FD5BF2E1D584AEB0764D01DA6B661B300583B16D454E0A94
8E63F8E18BE21FFED0DC20C678F972C4D5B31EA9A05479558A9E3E85BD9006C6
385C78C8741CBB3A2A2F4F28678263112941F1471ED147F1648C57846C6B75FF
72D05CAD8A67BB67A1037262B56BDA565585702E7C3EE4DFF401BE347FCCAE1B
59A4D8259E6E1D77B9561AB792AF21AC1CB7BE28430FC115C3606CDF0BF152AA
BCC6FB022701D84BE7CC43DFA501D98C886A8B3D06017CA60136794FDE099A5D
7EF88A7FA4B7EA924D1A2E6875E67A2809D0B82E87E7FC6E951B3CE6FF920F70
9129BA3EBF95CD0DBD71A3DD51C9DF96B79F4139BCFEDF81AA350F5DCA45452F
2A5488E8C1396217D120C7A94A24EDBE9EE04C6FE034CA66A0228A94B2E09AFB
7F34F49A8D2431F85EAC2DE02979757C481C5483347F032275204AF932E64768
CBBFA707E45840A95D85657AF6C1857B65CE89B1099101D576CCE172A1FD7BB4
D37FD5F2B7767010E444F0903D5317BCC2D1C064DE57F0E2FA190124E7A0E2B6
79B35F74C11D5B91A4BEF0B4A98E1D73DF78D774066820FA72138CBBB73DFD22
CFA3B7851965C2507C5AC1D79AFBE0B93ABEE69B6FF7582A75DA2B1E2A0D19F2
026DEEB2614750ECE1E59505CE8DB3580ECAB707463C3CCC041EF6BA4F41948F
54EB6533AF6E4E25806C752AA57F3B0A0A053A21AD8AF7438E6C967E2A8B7FDB
41BEB02B402354EF116BBAFFFDE5BF2C57A47C6AC03BDB4EBFF6BCED06E205C6
4BC04F7DA81F44E59BE3B17EA0689E32944B6E1EED736D870EB45D55E5347C9E
19C205030F0E63F073497D2DF89E85862F141BF80639ED32115BD959E4921F60
A7F6D36488F2A1D678395FF1A2453278B81D6D21D3F55F83889197963255B2F0
525AC9869EEDE8242A2162EE04B693A07D0B1235FF635ADB902695AF7E138904
66BBEC0DD5AB40917C75AF5F6FA8306BE521D7B3F6A707FA6FA2B74439FE320F
9461C9DB0198D0FBE18D10D6778C59779DAA9C31B2C00F92D241F560C79871B5
EB879BA4C821100907BAB1C51314AF38158B3FD8D86AE3135BEB94222CD19B79
A154D099E8E4B5F336755B1886B52C8F7737BB01682160408A2AF0E42DCD24AF
ED208FC340DF3691F6278588DF8C1AB2B8B5A99501C669A9A2F12CBC0B2C5018
82B792EFB7703001C48456A2D1EF1CDF3E961B6FA531E2D7CA59B465CF6CE7D4
5C1B9EC3C405624948FE0B0B62BD381BC279CD09ECDC4A152E5194ECD5C2EC3C
C5B78BD7587D0D1822B54A5707D0513D9C401AB2035D7AD3A8E61658BC10969D
A4013B370175611B3A3B3BB02CC9F5C39AF05915D3B135DDD527ADE8319F84CA
0DB8EAFDCA8F149B2A52BA62090EF1DC7305DFB046D8929C2208D8EB1F9982E6
1100682CB238801B16AF7622EE9D085ED2490A45FB4A5D84B41B96CCCCE58EAC
1E100C04FE7CF37A2635964F89719F91E135193ED78FE3A3900B8708A4A60779
A82F9269139C49B8BA68DADB844C258778C8A9F2B63272C45C21F465A3990B97
5DF2A47C55325B44566529AF8F3C4F2342603828D6DD29B6DAE5A05466D3107B
6FEE9C66EC4AD05FBDBBDB7CB0E8C14E9021A78CC1575AC6091949EAE6887EB1
2231B792207C56A0FB94C620E0C31BA0E4AE670E17C55979C5A50E8BED2B3D06
C4DFCD5A2D37639CF178389DBA7DFA6896B3214D868526A6CDFE263365AAAB1A
4714C70266415EEDEC02CD687354D38C7E67D965F8AD200BA3F17A8148C131DD
A8130781516605B5F0F293C7C2F20939A8A131B239F08FF74ECF3C4BDC4FF298
308729560EEA8DAE06FE8EAE377B6D55F268D61C1BC63BF18B36BFBD92BC87DA
B7FCEC5A12D22A57806788FEB5F6FCEE84B6CB6F12ECA2E76DC175AE5D5E277C
8A866368B4917C35AB851C043E3ACC9D6DF4389F9EB27DA3B6C68526DE3D3482
ADCAFAC81A719F21A1B97770AB7D49ED683E0FFEE159C0C92D45CD125BD0DDF7
23D56EE953A490C725282DAC2C2F591DB7F7281C98BCEA67D4A6F82104175B64
ECC8556D74604DA1E2A0FBF1DF7D35E5DC1D2DE0A340C27484F93DC0838C7682
B65D4556B2AA8E8A5C4752C29433CBD1BC4C934F8A54BE4770460EC3633AD218
FBECE728C8F9E8ACC89B852116E2EA064FAAE2E412543BC7F46F9074FC29CD27
45AFCA0CC4EFB02B8C4D9F45DA6A75C8E7B4F94CC5BCE481D8FE4AE3CE873C74
6F27779673E3846B1C27A85BAA4D0EF73E50AE6E809B7C54958ED8821877D610
56310D563C7C1CE3DFC1AEB179FC60E15C290360E788FE4B953A07FAE70BDB5B
DEA97CFC7D681EFB229B34A4F4FB66748517DC4BE23F08BA167579539C1B707B
C3BA4F14869F657172593D43A008EC06806574E345711CFA4A8A8C63DE3E4AD9
A5026B8B4CE4CE34AB1888BE9289547458028E44D040C700CC795B7C0A4E55D0
5E967D4C2C2F5534D6B49F593F0A1B6CA50024F1DB6FB258D388EF4AEA3ABF3F
C060982AAD04438242446390FFD220C005FA310E3AF719590A864844DD8328D1
F16DA4C74D60C62EF3A1A6F1C148F030B5A824E0A48DD1E1932906E1955B5113
A91D812D60565D96F756FB8A783344A1047E786FD8EE93D8AAF49DE95D3176D5
8B2E6E05E9EF13EBAF0EF9BB334DF95CD0AF4E30348AA342796DF3F017A05A4B
21D66FF0FCF4C4E80AD5FCA7B897C49AA80F68650F1662319FAF0EFD635AA1E1
44EB240E53D4D0DBC748270D8A90765AA4ECFDB5EBF4839513B4A7E96FE168D4
41314B346BE7A556864F517BCFE3705B98B0D31524DE414BE87649B5155FD4A6
225EAA5F07E75014F8C978E61ACE10295B1F35DC5F79B6D0A363033929A897EF
F63B140A0506685908B1BBC4607E04B71DEB42805D0BAC9F39A99359E52BC92C
0C779C54259857DAEB6E7750B4E63782EB2FA5EACC95ECA68CB986A0C9BF43B6
5CE9A6CB35BC82653B5F866786531502E2CE5CC75F727BBF954F99C02A390904
0AF44C22606207709D01FBC32E4EFBD7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (mywriteup.dvi)
@start /Fa 134[44 44 44 44 44 44 44 44 44 44 44 44 44
44 44 44 44 44 44 44 44 44 44 44 44 1[44 4[44 1[44 44
44 2[44 2[44 4[44 1[44 2[44 1[44 44 1[44 6[44 44 44 44
44 44 44 44 44 44 44 44 44 44 45[{}52 83.022 /CMTT10
rf /Fb 140[53 55 3[75 7[41 61 1[60 16[100 82[{}7 119.552
/CMBX12 rf /Fc 192[45 63[{}1 83.022 /CMBX10 rf /Fd 135[39
55 38 45 28 34 35 1[42 42 47 68 21 2[25 42 38 1[38 42
38 15[47 2[56 64 2[52 64 6[63 2[62 6[25 58[{}26 83.022
/CMTI10 rf /Fe 135[70 2[73 51 1[51 1[73 66 73 111 36
2[36 2[40 58 3[66 9[137 16[86 90 69[{}16 143.462 /CMR17
rf /Ff 133[37 44 44 60 44 46 32 33 33 44 46 42 46 69
23 44 1[23 46 42 25 37 46 37 46 42 3[23 42 23 2[62 85
62 62 60 46 61 1[57 65 62 76 52 1[43 30 62 65 54 57 63
60 59 62 7[42 42 42 42 42 42 42 42 42 42 42 23 28 23
65 1[32 32 23 1[69 2[42 20[46 46 48 11[{}73 83.022 /CMR10
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 411 Final Exam) /Subject (CS 411 Final Exam) /Creator (LaTeX with hyperref package) /Author (David Merrick) /Keywords (cs411 ``operating systems'') /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray Black 0 TeXcolorgray -300 -360
a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 -300 -360 a -300 -360 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 -300 -360 a -300 -360 a
SDict begin H.S end
 -300
-360 a -300 -360 a
SDict begin 12 H.A end
 -300 -360 a -300 -360 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 -300 -360
a 83 x Ff(Da)n(vid)27 b(Merric)n(k)-300 -57 y(CS)h(411)-300
162 y(4)f(June,)h(2013)p 0 TeXcolorgray 0 TeXcolorgray
1256 451 a Fe(W)-11 b(riteup)44 b(for)e(Final)h(Exam)-134
715 y Ff(The)33 b(Android)h(op)r(erating)e(system)h(is)g(built)h(on)g
(top)f(of)g(a)g(Lin)n(ux)g(foundation.)54 b(W)-7 b(e)34
b(ha)n(v)n(e)e(sp)r(en)n(t)i(the)g(semester)e(studying)i(in-depth)-300
815 y(the)28 b(w)n(a)n(ys)d(in)i(whic)n(h)h(the)f(Lin)n(ux)g(k)n(ernel)
f(sc)n(hedules)h(pro)r(cesses,)e(sc)n(hedules)i(I/O,)f(handles)h
(memory)f(allo)r(cation,)h(encryption,)f(and)h(ho)n(w)g(the)-300
915 y(k)n(ernel)e(in)n(teracts)f(with)j(devices)e(through)g(driv)n
(ers.)34 b(I)26 b(will)g(b)r(e)g(comparing)e(and)h(con)n(trasting)f
(the)i(implemen)n(tation)g(w)n(e)f(used)h(for)f(class)g(with)-300
1014 y(the)j(Android)f(op)r(erating)g(system)g(in)h(terms)f(of)h(pro)r
(cess)e(sc)n(heduling)h(and)h(I/O)f(sc)n(heduling.)-134
1234 y Fd(Overview:)61 b Ff(The)36 b(Android)g(k)n(ernel)g(is)g(a)g(mo)
r(di\014ed)h(v)n(ersion)e(of)h(Lin)n(ux.)63 b(Ov)n(er)35
b(the)i(course)e(of)h(dev)n(elopmen)n(t,)i(some)e(c)n(hanges)f(w)n(ere)
-300 1333 y(made.)k(The)29 b(n)n(um)n(b)r(er)f(of)h(c)n(hanges)e(is)h
(relativ)n(ely)g(small,)g(ho)n(w)n(ev)n(er.)38 b(There)28
b(ha)n(v)n(e)f(b)r(een)i(appro)n(ximately)e(250)g(patc)n(hes)h(that)g
(tak)n(e)g(up)h(ab)r(out)-300 1433 y(3)f(megab)n(ytes)g(of)g
(di\013erences)h(o)n(v)n(er)d(25,000)h(lines)h(of)h(co)r(de.)40
b(Some)28 b(of)h(this)g(co)r(de)f(is)h(used)f(to)h(implemen)n(t)g(a)g
(\015ash)f(\014lesystem,)h(and)f(some)g(of)-300 1533
y(it)k(is)g(to)f(patc)n(h)h(the)g(net)n(w)n(ork)e(securit)n(y)-7
b(.)49 b([)p Fc(?)p Ff(].)g(Android)32 b(is)f(based)g(on)h(Lin)n(ux)f
(2.6.32.)48 b(It)32 b(has)f(some)g(p)r(o)n(w)n(er-sa)n(ving)e(features)
i(built)h(in)g(and)-300 1632 y(excludes)27 b(man)n(y)g(libraries,)f
(shells,)h(editors,)f(and)i(programming)d(framew)n(orks)g(that)i(ship)h
(with)g(most)f(distributions)g(of)g(Lin)n(ux.)37 b(On)27
b(top)g(of)-300 1732 y(the)33 b(k)n(ernel)e(runs)g(Dalvik,)j(whic)n(h)e
(comprises)f(the)h(Ja)n(v)-5 b(a)31 b(virtual)g(mac)n(hine)h(and)g(man)
n(y)g(basic)f(run)n(time)h(essen)n(tials.)50 b(Most)32
b(Android)f(apps)-300 1832 y(run)c(inside)h(this)g(VM.)g([)p
Fc(?)p Ff(])-300 2051 y Fd(Pr)l(o)l(c)l(ess)i(Sche)l(duling)g(in)g(A)n
(ndr)l(oid)-134 2271 y(Overview:)58 b Ff(A)36 b(sc)n(heduler)e(is)h
(the)h(algorithm)e(for)g(sharing)g(the)i(CPU)f(b)r(et)n(w)n(een)g(m)n
(ultiple)g(pro)r(cesses)f(in)i(an)e(op)r(erating)g(system.)60
b(A)-300 2370 y(p)r(olicy)29 b(is)h(the)g(b)r(eha)n(vior)e(of)i(the)f
(sc)n(heduler)g(that)h(determines)f(what)h(runs)f(when.)43
b(Changes)29 b(in)g(p)r(olicy)h(can)f(result)g(in)h(op)r(erating)f
(systems)-300 2470 y(that)d(are)e(optimized)i(for)f(sp)r(eci\014c)h
(tasks)e(\(suc)n(h)i(as)f(user)f(resp)r(onsiv)n(eness\).)35
b(Therefore,)25 b(this)g(is)h(a)f(critical)g(asp)r(ect)g(of)h(an)f(op)r
(erating)f(system.)-300 2570 y([)p Fc(?)p Ff(])k(pg)f(43.)-300
2789 y(In)j(the)g(k)n(ernel)e(w)n(e)h(w)n(ere)g(w)n(orking)f(with,)i
(the)g(default)g(sc)n(heduler)f(w)n(as)f(the)i(Completely)f(F)-7
b(air)29 b(Sc)n(heduler)g(\(CFS\).)i(The)e(idea)g(b)r(ehind)i(CFS)-300
2889 y(is)g(to)g(mo)r(del)h(sc)n(heduling)e(as)h(if)h(the)f(system)g
(had)g(an)g(ideal)g(pro)r(cessor)e(that)j(could)f(m)n(ultitask)g(p)r
(erfectly)-7 b(.)48 b(In)32 b(this)f(kind)h(of)f(system,)h(eac)n(h)-300
2989 y(runnable)27 b(pro)r(cess)f(n)h(w)n(ould)g(receiv)n(e)f(1/n)g(of)
h(the)h(CPU)f(time.)37 b(In)27 b(this)h(w)n(a)n(y)-7
b(,)26 b(CFS)h(assigns)f(eac)n(h)g(pro)r(cess)g(a)h(prop)r(ortion)f(of)
h(the)h(CPU.)f(F)-7 b(or)-300 3088 y(example,)33 b(in)g(pre-CFS)f(UNIX)
i(systems,)f(if)g(t)n(w)n(o)f(pro)r(cesses)f(w)n(ere)h(to)g(run,)i(one)
e(w)n(ould)g(b)r(e)h(run)f(righ)n(t)g(after)g(the)h(other)f(and)h(eac)n
(h)f(w)n(ould)-300 3188 y(receiv)n(e)j(100\045)f(of)i(the)g(CPU)f(p)r
(o)n(w)n(er.)61 b(In)35 b(CFS,)i(the)f(t)n(w)n(o)f(pro)r(cesses)f(w)n
(ould)h(run)h(sim)n(ultaneously)f(at)g(50\045)g(of)h(the)g(CPU)g(p)r(o)
n(w)n(er.)60 b(CFS)-300 3287 y(p)r(erforms)24 b(this)h(b)n(y)f(running)
g(pro)r(cesses)g(round-robin)f(st)n(yle)h(for)g(v)n(ery)f(small)i
(timeslices,)g(so)f(that)h(in)g(a)f(giv)n(en)g(p)r(erio)r(d)g(of)h
(time)g(it)g(will)g(app)r(ear)-300 3387 y(as)i(though)g(man)n(y)g(pro)r
(cesses)f(are)h(running)g(in)h(parallel.)36 b([)p Fc(?)p
Ff(])28 b(pg.)36 b(48-50)-300 3607 y(Real-time)i(sc)n(heduling)h(means)
f(to)g(sc)n(hedule)h(pro)r(cesses)e(within)i(timing)g(deadlines.)70
b(The)39 b(Lin)n(ux)f(sc)n(heduler)g(pro)n(vides)f(soft)i(real-time)
-300 3706 y(b)r(eha)n(vior,)26 b(meaning)g(that)h(it)g(tries)g(to)f(sc)
n(hedule)h(pro)r(cesses)e(within)i(timing)h(deadlines)e(but)h(do)r
(esn't)g(mak)n(e)f(guaran)n(tees)f(to)i(alw)n(a)n(ys)d(ac)n(hiev)n(e)
-300 3806 y(this.)37 b(Lin)n(ux)26 b(pro)n(vides)f(t)n(w)n(o)g
(real-time)h(sc)n(heduling)g(p)r(olicies,)g(FIF)n(O)g(\(SCHED)p
2231 3806 25 4 v 31 w(FIF)n(O\))g(and)g(round-robin)f(\(SCHED)p
3457 3806 V 31 w(RR\).)i(I)f(will)h(b)r(e)f(using)-300
3906 y(SCHED)p -7 3906 V 30 w(RR)31 b(and)f(round-robin)f(in)n(terc)n
(hangeably)g(in)h(this)h(writeup,)g(lik)n(ewise)f(for)g(SCHED)p
2722 3906 V 30 w(FIF)n(O)g(and)h(FIF)n(O.)f(Both)g(round-robin)f(and)
-300 4005 y(FIF)n(O)34 b(mak)n(e)f(use)g(of)h(runqueues,)h(whic)n(h)f
(are)e(essen)n(tially)h(queues)h(con)n(taining)f(pro)r(cess)f
(descriptors)h(for)g(runnable)g(pro)r(cesses.)54 b(Round-)-300
4105 y(robin)27 b(sc)n(heduling)f(cycles)h(through)f(pro)r(cesses,)g
(running)h(eac)n(h)g(for)f(a)h(pre-sp)r(eci\014ed)g(amoun)n(t)f(of)i
(time)f(kno)n(wn)g(as)f(a)h(timeslice.)37 b(On)27 b(a)g(more)-300
4204 y(tec)n(hnical)35 b(lev)n(el,)i(this)f(means)f(placing)g(the)g
(pro)r(cess)g(descriptor)f(at)h(the)h(end)g(of)f(the)h(runqueue)f
(after)g(its)h(timeslice,)h(then)f(running)f(all)-300
4304 y(subsequen)n(t)f(tasks)f(un)n(til)i(it)g(reac)n(hes)e(the)h(end)h
(of)f(the)h(queue,)h(at)e(whic)n(h)g(time)h(it)g(will)f(start)g(the)h
(cycle)f(again.)55 b(FIF)n(O)34 b(\(First)h(In,)h(First)-300
4404 y(Out\))30 b(sc)n(heduling)f(runs)h(eac)n(h)f(SCHED)p
981 4404 V 30 w(FIF)n(O)g(pro)r(cess)g(of)g(the)h(same)g(priorit)n(y)e
(un)n(til)i(it)g(is)g(\014nished,)h(then)f(runs)f(the)h(next)g(pro)r
(cess)f(in)h(the)-300 4503 y(runqueue.)35 b(It)23 b(do)r(es)g(this)g
(in)h(order)d(of)i(when)g(pro)r(cesses)f(w)n(ere)g(placed)h(in)g(the)g
(runqueue.)35 b(On)23 b(a)g(tec)n(hnical)g(lev)n(el,)g(FIF)n(O)g(sc)n
(heduling)f(b)r(eha)n(v)n(es)-300 4603 y(almost)27 b(iden)n(tically)g
(to)h(round-robin)e(sc)n(heduling)h(but)h(with)g(in\014nite)h
(timeslices.)36 b([)p Fc(?)p Ff(])-300 4823 y(Real-time)30
b(sc)n(heduling)g(in)g(the)h(Lin)n(ux)f(k)n(ernel)g(w)n(e)f(w)n(ere)h
(w)n(orking)e(with)j(prioritizing)e(pro)r(cesses.)44
b(Pro)r(cesses)28 b(with)j(a)f(higher)f(priorit)n(y)g(run)-300
4922 y(b)r(efore)k(pro)r(cesses)e(with)i(a)g(lo)n(w)n(er)e(priorit)n(y)
-7 b(,)33 b(and)f(pro)r(cesses)g(of)h(the)g(same)f(priorit)n(y)g(run)g
(one)h(righ)n(t)f(after)g(the)h(other,)h(round-robin)d(st)n(yle.)-300
5022 y(Our)j(Lin)n(ux)h(k)n(ernel)f(used)h(t)n(w)n(o)f(di\013eren)n(t)h
(priorit)n(y)f(ranking)g(systems.)58 b(One)35 b(system)g(rank)n(ed)e
(pro)r(cesses)h(based)g(on)h(their)g(\\nice)g(v)-5 b(alue.")-300
5121 y(This)28 b(v)-5 b(alue)29 b(ranged)e(from)h(-19)f(to)h(20)g(with)
h(0)f(as)g(the)g(default.)40 b(A)29 b(larger)d(nice)j(v)-5
b(alue)28 b(corresp)r(onds)f(to)h(a)g(lo)n(w)n(er)f(priorit)n(y)-7
b(.)38 b(Meaning)28 b(that)g(a)-300 5221 y(pro)r(cess)c(is)h(b)r(eing)g
(\\nice")g(to)g(other)f(higher-priorit)n(y)f(pro)r(cesses)h(b)n(y)g
(yielding)h(con)n(trol)f(of)h(the)h(CPU.)f(The)g(second)g(priorit)n(y)e
(ranking)h(system)-300 5321 y(in)30 b(Lin)n(ux)g(is)g(the)g(real-time)g
(priorit)n(y)-7 b(.)43 b(These)29 b(n)n(um)n(b)r(ers)h(range)f(from)g
(0-99.)43 b(Unlik)n(e)30 b(nice)g(v)-5 b(alues,)30 b(higher)f(priorit)n
(y)g(v)-5 b(alues)30 b(corresp)r(ond)e(to)-300 5420 y(higher)f(priorit)
n(y)-7 b(.)36 b([)p Fc(?)p Ff(])-300 5640 y(In)d(Android,)h(b)n(y)e
(default,)j(applications)c(run)i(as)f(pro)r(cesses)f(in)i(a)f(single)h
(thread)f(of)g(execution.)52 b(By)33 b(default,)h(ev)n(ery)e(comp)r
(onen)n(t)g(of)h(the)p 0 TeXcolorgray 1929 5889 a(1)p
0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray 0 TeXcolorgray 291 x Ff(application)31
b(is)h(run)f(in)h(the)g(same)f(pro)r(cess.)48 b(Ho)n(w)n(ev)n(er,)31
b(di\013eren)n(t)g(comp)r(onen)n(ts)h(of)f(an)h(application)f(can)g(b)r
(e)h(run)f(as)g(separate)g(pro)r(cesses,)-300 -177 y(and)h(extra)f
(threads)g(for)h(eac)n(h)f(pro)r(cess)g(can)g(b)r(e)i(created)e(b)n(y)g
(the)i(dev)n(elop)r(er's)e(sp)r(eci\014cations.)49 b(This)32
b(is)g(all)f(sp)r(eci\014ed)i(at)f(run)n(time)f(in)i(the)-300
-78 y(manifest)e(\014le)g(for)f(eac)n(h)g(application.)46
b(Only)31 b(a)f(certain)g(amoun)n(t)h(of)f(memory)g(is)h(able)g(to)f(b)
r(e)i(allo)r(cated)e(for)g(all)g(pro)r(cesses,)h(so)f(the)h(k)n(ernel)
-300 22 y(ma)n(y)e(decide)h(to)g(put)h(a)e(pro)r(cess)g(to)h(sleep)g
(when)g(memory)f(is)h(required)f(for)h(others.)43 b(The)30
b(k)n(ernel)f(c)n(ho)r(oses)g(whic)n(h)h(applications)f(to)h(put)g(to)
-300 122 y(sleep)h(based)f(on)h(an)f(algorithm)g(that)h(estimates)f
(their)h(relativ)n(e)f(imp)r(ortance)g(to)h(the)g(user.)46
b(A)31 b(pro)r(cess)f(whose)g(activities)h(are)f(visible)g(on)-300
221 y(the)h(screen,)g(for)g(example,)g(tak)n(es)f(a)h(higher)f(priorit)
n(y)f(than)i(one)g(whose)f(activities)h(are)f(not)h(visible.)46
b([)p Fc(?)q Ff(].)h(When)31 b(t)n(w)n(o)f(applications)g(ha)n(v)n(e)
-300 321 y(the)e(same)f(priorit)n(y)-7 b(,)26 b(the)i(pro)r(cess)f
(that)h(has)f(b)r(een)h(at)f(a)g(lo)n(w)n(er)f(priorit)n(y)h(longest)g
(will)g(b)r(e)h(killed)g(\014rst.)37 b([)p Fc(?)p Ff(])-300
540 y(Android)29 b(has)f(separate)f(pro)r(cess)h(groups)f(for)h(bac)n
(kground)f(and)i(foreground)e(pro)r(cesses.)39 b(Android)28
b(uses)h(a)f(n)n(um)n(b)r(er)g(of)h(priorities)f(so)g(that)-300
640 y(bac)n(kground)d(pro)r(cesses)g(do)h(not)h(in)n(terrupt)f
(foreground)f(ones.)36 b(User)26 b(in)n(terface)g(threads)g(run)g(at)g
(default)h(priorit)n(y)-7 b(.)36 b(Applications)26 b(that)h(are)-300
740 y(mo)n(v)n(ed)j(to)g(the)h(bac)n(kground)e(ha)n(v)n(e)g(all)h
(their)h(threads)f(forced)g(in)n(to)g(bac)n(kground)f(pro)r(cess)g
(priorit)n(y)-7 b(.)45 b(Bac)n(kground)28 b(pro)r(cesses)h(in)i
(Android)-300 839 y(are)i(not)h(allo)n(w)n(ed)e(to)i(tak)n(e)f(up)h
(more)f(than)g(10\045)h(of)f(the)h(CPU)g(time)g(needed)g(b)n(y)g
(foreground)e(threads.)54 b(This)34 b(is)g(implemen)n(ted)g(using)f(a)
-300 939 y(Lin)n(ux)27 b(algorithm)g(called)g(cgroups.)35
b([)p Fc(?)q Ff(])-300 1159 y(The)30 b(goal)e(b)r(ehind)i(the)g
(Android)g(sc)n(heduling)f(p)r(olicy)h(is)f(resp)r(onsiv)n(eness)f(to)h
(the)h(user.)43 b(Android,)30 b(lik)n(e)f(the)h(Lin)n(ux)f(foundation)h
(it)g(is)f(built)-300 1258 y(on,)j(uses)e(time)h(slices)g(for)f(sc)n
(heduling)h(pro)r(cesses.)45 b(Pro)r(cesses)29 b(can)h(ha)n(v)n(e)g(a)g
(dynamic)h(priorit)n(y)f(from)g(19)g(to)h(-20,)g(v)n(ery)e(high)i(to)g
(v)n(ery)f(lo)n(w,)-300 1358 y(resp)r(ectiv)n(ely)-7
b(.)48 b(Higher)31 b(priorit)n(y)f(pro)r(cesses)g(will)i(get)f(more)g
(CPU)g(time)h(when)g(needed.)49 b(A)n(t)32 b(startup,)g(Service)f(pro)r
(cesses)f(are)g(run)i(in)g(the)-300 1457 y(bac)n(kground)26
b(pro)r(cess)g(group)h(unless)g(this)h(has)f(b)r(een)h(sp)r(eci\014ed)g
(otherwise.)36 b(Bac)n(kground)25 b(threads)i(are)f(giv)n(en)h(a)g
(priorit)n(y)g(lev)n(el)g(of)g(10.)36 b([)p Fc(?)p Ff(])-300
1852 y Fb(References)-300 1934 y
SDict begin H.S end
 -300 1934 a -300 1934
a
SDict begin 12 H.A end
 -300 1934 a -300 1934 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end
 -300 1934 a -300 1939 a
SDict begin H.S end
 -300
1939 a -300 1939 a
SDict begin 12 H.A end
 -300 1939 a -300 1939 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Bovet) cvn H.B /DEST pdfmark end
 -300 1939
a 0 TeXcolorgray 133 x Ff([1])p 0 TeXcolorgray 41 w(Daniel)28
b(Bo)n(v)n(et.)35 b(Understanding)28 b(the)g(lin)n(ux)f(k)n(ernel.)p
0 TeXcolorgray 1548 2090 a
SDict begin H.S end
 1548 2090 a 0 TeXcolorgray
-18 x Fa(http://oreilly.c)o(om/)o(ca)o(ta)o(log)o(/l)o(inu)o(xk)o(er)o
(nel)o(/c)o(hap)o(te)o(r/c)o(h1)o(0.)o(htm)o(l)p 0 TeXcolorgray
3989 2014 a
SDict begin H.R end
 3989 2014 a 3989 2072 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://oreilly.com/catalog/linuxkernel/chapter/ch10.html) >> /Subtype /Link H.B /ANN pdfmark end
 3989 2072 a 0 TeXcolorgray
Ff(.)-300 2126 y
SDict begin H.S end
 -300 2126 a -300 2126 a
SDict begin 12 H.A end
 -300 2126 a
-300 2126 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Bray) cvn H.B /DEST pdfmark end
 -300 2126 a 0 TeXcolorgray 112 x Ff([2])p
0 TeXcolorgray 41 w(Tim)h(Bra)n(y)-7 b(.)35 b(What)28
b(android)f(is.)p 0 TeXcolorgray 890 2256 a
SDict begin H.S end
 890 2256
a 0 TeXcolorgray -18 x Fa(http://www.tbra)o(y.o)o(rg)o(/o)o(ngo)o(in)o
(g/W)o(he)o(n/)o(201)o(x/)o(201)o(0/)o(11/)o(14)o(/W)o(hat)o(-)t(An)o
(dr)o(oi)o(d-)t(I)o(s)p 0 TeXcolorgray 3731 2180 a
SDict begin H.R end
 3731
2180 a 3731 2238 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://www.tbray.org/ongoing/When/201x/2010/11/14/What-Android-Is) >> /Subtype /Link H.B /ANN pdfmark end
 3731 2238 a 0 TeXcolorgray Ff(.)-300
2292 y
SDict begin H.S end
 -300 2292 a -300 2292 a
SDict begin 12 H.A end
 -300 2292 a -300 2292
a
SDict begin [ /View [/XYZ H.V] /Dest (cite.features) cvn H.B /DEST pdfmark end
 -300 2292 a 0 TeXcolorgray 112 x Ff([3])p 0 TeXcolorgray
41 w(eLin)n(ux.org.)35 b(Android)28 b(k)n(ernel)e(features.)p
0 TeXcolorgray 1188 2422 a
SDict begin H.S end
 1188 2422 a 0 TeXcolorgray
-18 x Fa(http://elinux.o)o(rg)o(/An)o(dr)o(oid)o(_K)o(ern)o(el)o(_F)o
(eat)o(ur)o(es)p 0 TeXcolorgray 2975 2346 a
SDict begin H.R end
 2975 2346
a 2975 2404 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://elinux.org/Android_Kernel_Features) >> /Subtype /Link H.B /ANN pdfmark end
 2975 2404 a 0 TeXcolorgray Ff(.)-300 2458
y
SDict begin H.S end
 -300 2458 a -300 2458 a
SDict begin 12 H.A end
 -300 2458 a -300 2458 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.gomo) cvn H.B /DEST pdfmark end
 -300
2458 a 0 TeXcolorgray 112 x Ff([4])p 0 TeXcolorgray 41
w(gomo.)36 b(Sc)n(heduling)27 b(in)h(android.)p 0 TeXcolorgray
934 2588 a
SDict begin H.S end
 934 2588 a 0 TeXcolorgray -18 x Fa(https://github.c)o(om)o
(/ke)o(es)o(j/g)o(om)o(o/)o(wik)o(i/)o(And)o(ro)o(id)o(Sch)o(ed)o(uli)o
(ng)p 0 TeXcolorgray 3200 2512 a
SDict begin H.R end
 3200 2512 a 3200 2570
a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (https://github.com/keesj/gomo/wiki/AndroidScheduling) >> /Subtype /Link H.B /ANN pdfmark end
 3200 2570 a 0 TeXcolorgray Ff(.)-300 2624 y
SDict begin H.S end
 -300 2624
a -300 2624 a
SDict begin 12 H.A end
 -300 2624 a -300 2624 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.AndroidDev1) cvn H.B /DEST pdfmark end
 -300 2624 a 0 TeXcolorgray
112 x Ff([5])p 0 TeXcolorgray 41 w(Android)18 b(Dev)n(elop)r(er)g
(Guide.)k(Pro)r(cesses)16 b(and)j(threads.)p 0 TeXcolorgray
1613 2754 a
SDict begin H.S end
 1613 2754 a 0 TeXcolorgray -18 x Fa(http://develope)o(r.a)o
(nd)o(ro)o(id.)o(co)o(m/g)o(ui)o(de/)o(co)o(mp)o(one)o(nt)o(s/p)o(ro)o
(ce)o(sse)o(s-)s(and)o(-)t(th)o(re)o(ads)o(.h)o(tm)o(l)p
0 TeXcolorgray 4759 2678 a
SDict begin H.R end
 4759 2678 a 4759 2736 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://developer.android.com/guide/components/processes-and-threads.html) >> /Subtype /Link H.B /ANN pdfmark end
 4759
2736 a 0 TeXcolorgray Ff(.)-300 2790 y
SDict begin H.S end
 -300 2790 a -300
2790 a
SDict begin 12 H.A end
 -300 2790 a -300 2790 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Hackborn) cvn H.B /DEST pdfmark end
 -300 2790 a 0 TeXcolorgray
112 x Ff([6])p 0 TeXcolorgray 41 w(Dianne)g(Hac)n(kb)r(orn.)h(Go)r
(ogle+)d(p)r(ost,)k(dec)d(9)g(2011.)p 0 TeXcolorgray
1443 2920 a
SDict begin H.S end
 1443 2920 a 0 TeXcolorgray -18 x Fa(https://plus.goo)o(gl)o
(e.c)o(om)o(/u)o(/0/)o(10)o(505)o(19)o(857)o(38)o(28)o(026)o(18)o(32/)o
(po)o(st)o(s/X)o(AZ)o(4Ce)o(VP)o(6DC)p 0 TeXcolorgray
4363 2844 a
SDict begin H.R end
 4363 2844 a 4363 2902 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (https://plus.google.com/u/0/105051985738280261832/posts/XAZ4CeVP6DC) >> /Subtype /Link H.B /ANN pdfmark end
 4363 2902 a 0 TeXcolorgray
Ff(.)-300 2956 y
SDict begin H.S end
 -300 2956 a -300 2956 a
SDict begin 12 H.A end
 -300 2956 a
-300 2956 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Love) cvn H.B /DEST pdfmark end
 -300 2956 a 0 TeXcolorgray 112 x Ff([7])p
0 TeXcolorgray 41 w(Rob)r(ert)28 b(Lo)n(v)n(e.)35 b Fd(Linux)29
b(Kernel)h(Development)p Ff(.)37 b(P)n(earson)25 b(Education,)i(Inc.,)h
(third)g(edition,)g(2010.)-300 3122 y
SDict begin H.S end
 -300 3122 a -300
3122 a
SDict begin 12 H.A end
 -300 3122 a -300 3122 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.SO1) cvn H.B /DEST pdfmark end
 -300 3122 a 0 TeXcolorgray
112 x Ff([8])p 0 TeXcolorgray 41 w(Stac)n(kOv)n(er\015o)n(w.)19
b(Android)f(pro)r(cess)f(sc)n(heduling.)p 0 TeXcolorgray
1411 3252 a
SDict begin H.S end
 1411 3252 a 0 TeXcolorgray -18 x Fa(http://stackove)o(rfl)o
(ow)o(.co)o(m/)o(qu)o(est)o(io)o(ns/)o(79)o(310)o(32)o(/a)o(ndr)o(oi)o
(d-)t(p)o(ro)o(ces)o(s-)s(sch)o(ed)o(uli)o(ng)p 0 TeXcolorgray
4426 3176 a
SDict begin H.R end
 4426 3176 a 4426 3234 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://stackoverflow.com/questions/7931032/android-process-scheduling) >> /Subtype /Link H.B /ANN pdfmark end
 4426 3234 a 0 TeXcolorgray
Ff(.)p 0 TeXcolorgray 1929 5889 a(2)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
