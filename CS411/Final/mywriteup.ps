%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: mywriteup.dvi
%%CreationDate: Mon Jun 10 18:25:29 2013
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR10 CMR17 CMTI10 CMBX10 CMBX12 CMTT10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter mywriteup.dvi -o
%+ mywriteup.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.06.10:1825
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMTT10
%!PS-AdobeFont-1.1: CMTT10 1.00B
%%CreationDate: 1992 Apr 26 10:42:42
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 73 /I put
dup 75 /K put
dup 80 /P put
dup 83 /S put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 90 /Z put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-4 -235 731 800}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D19
38DD5C4467F9DD8C5D1A2000B3A6BF2F25629BAEC199AE8BD4BA6ED9BBF7DABF
D0E153BAB1C17900D4FCE209622ACD19E7C74C2807D0397357ED07AB460D5204
EB3A45B7AC4D106B7303AD8348853032A745F417943F9B4FED652B835AA49727
A8B4117AFF1D4BCE831EB510B6851796D0BE6982B76620CB3CE0C22CACDD4593
F244C14EEC0E5A7C4AC42392F81C01BC4257FE12AF33F4BFEA9108FF11CF9714
4DD6EC70A2C4C1E4F328A1EB25E43525FB1E16C07E28CC359DF61F426B7D41EA
6A0C84DD63275395A503AAE908E1C82D389FD12A21E86999799E7F24A994472E
A10EAE77096709BE0D11AAD24A30D96E15A51D720AFB3B10D2E0AC8DC1A1204B
E8725E00D7E3A96F9978BC19377034D93D080C4391E579C34FF9FC2379CB119F
1E5BBEA91AE20F343C6420BE1E2BD0636B04FCCC0BEE0DC2D56D66F06DB22438
452822CBEAF03EE9EAA8398F276EC0D92A7FB978C17805DB2F4A7DFBA56FD6AF
8670EB364F01DE8FCAFBAF657D68C3A03112915736CEABAA8BA5C0AC25288369
5D49BD891FABEFE8699A0AE3ED85B48ACB22229E15623399C93DE7D935734ADA
DA7A1462C111D44AD53EA35B57E5D0B5FC0B481820E43222DB8EFCD5D30E15F9
BA304FA879392EE0BCC0E1A61E74B3A1FC3A3D170218D7244580C7AA0DC65D19
741FA5FE6F8CBF60250ACC27454BBF0897CA4B909C83A56672958752ED4B5E79
E18660764F155E86F09EFA9F7685F2F5027EC85A775287B30E2069DE4E4D5712
E7D033481A53A2702BA7542C71062173039030CF28D8B9C63B5596A9B42B33E7
D922944A38713383D3648A4AF160A3B0C8F3379BA4372BE2E7EA49AABA75AEEE
C5DDE1D8BF68483C3D21271280ABB91D54CC819680322EAB72E1250A760BC8DC
FF798F2ABFC4F3539392985C4CB324B00072295FC160818BB0355FDC4F12E39B
984826450553E3D271F03D8DC2D12A92A4D32034FD16DA13B876D88C8C097384
46D8D7E41CA1A8979F9B07EC3337E70CBBE3A377235B04C79BBBDB66CE1C1A41
89DAB7CE91F2FC0CAF6DDAD09992D56F72299068192610EE3DE5DB7CF6366B4C
D74F414484DCCDBA449BFAADA39D0F27574E604E31CB513B18E3821A33076151
C2BCB6E957C77A0AECA48C587ABB5E8C7624D56B32F80BBCFDC874AAD6EA5119
C9B06886F08CC7DE5400E0F52B07483FD4BAF26C1556CA27B259FF3DDF71131F
DFC05D8B14C28F2073C460B5011B76D84F7917E919E50FEF563B5DEBC5CE6923
ADB72392C98D04EC033C9F923DBBAA571FFCBE6538892DCEEE4724CF52CE85F8
A8C30BC2D5148CAA77CF2E2BFA2FAAD4B981D3DE3CD424E81DA209444867A5E1
A79AFFF3A3B35B8AE302978DCCCE0F6B7200448BA82B27A17E05FF196927CDDA
C41E848CC7B7B382DC892AE1633636101B9850322E9BB74528D00EFD536F54A9
EBB45F6CD1CE2DD7FE7613B1A5B4D662985C8CA4F3378FB7D526FD464FCF60F6
DD32CC20062F8467073CB46CBAFE8EE8437F47D2A1F30E4B945A650D98F44548
DE7AC03BE1330453FE634D60CD0E76658C1C11F300407491C542505F3BD5D3C4
7C95237B1160795B8D9CA3B9F73A3F4E29D67333CEF0F3A0E5017E65B9BA8E77
0E174F86E975736DC50A51AAC93463C96DB365C8A3A8F2BF8A7B066B36071D68
9AB52CB9BBC0CB9679211A2738821A8489436ADCE3F902C3D1323B23F814C641
997D32720C35A2E634F500D6F809F6A11F170F48243A86115E451D3EDA8110E8
0A4DD2F9F94074C521F470856C7E5E8EA0985EED020B5E214EF180DF7E097E47
D26E7AB75BC1DA1778FB92A8CC9217CF91A5C24D8CEF041DDDDD898D2A235220
A1212B1FF522DA5436BDEE45CB15511716E90243DE312219D57568C5AC02F65F
9FDA69BC33E5A210E31D3CC5E760B8219895A2243D0BF3A3A20C3AEF6F715C88
E0AF25AE99A453CC0AE66A6A6A8862CB140EF8D6FC488D228854BA44BA864556
5942108C92B87AC3F9E2AE9EF4FC4E32AFF7EEA4D9D4CBF15389A459C699D632
E9631F85C88FB312AA8C05A7FA1118E6624ADD58ACD485FA1D5C17196322A70E
330F440B260A4C395D61D7CB924360CEB83E356358D0D12B0590907DF25D3A3B
DB256A7C2657BED1D405A7A56A6D5FAD65A30911D0E6D8A622CBFEFDAAF98ED8
1441C29DCE5504E6B52E7F165FFD0A8CDEA093736AB3B3305BD19795290CF776
7AB7EAAE84C60B62AF6B9D3ED728F0E954C61B1C2E59985144D4C32C1C61148F
87CF0277FC6F3F8CC57F11B044C8258EB07023270240A5B9AF8D66BF5540EB6B
A41AA401318A8A03E1BBF7E214FE5D06869EF727AE61D2D613504D91BD0714AB
89AFF48BE094133E42FD708CB09802B3A60CA2C2422498339F48E73BAB6E3C38
8797170D877940D0289723639C77227A0708F1E9F495F20E6C40C4A95AC370B0
4A0A511C46018225F23D506D20D3FD768495C21E22E47F7C2ABF2CCCD73A2E89
8448543FCFFA03F5398A27E19013C34BD2D79F087C4CBD47393CF51FFEC7D3B9
F1D018E18CEE5C39C61DBE6A9DCF1C4B0B345C78384EC2293108202B17683B5D
9332F93C878B6DDDB576DFD901061678C96760903341FA8CB94A78E7E034A46C
BF61C152BAC3909170A83AB311EF3EB1FB6BB835BD0CC4B7463215E6BF2E7B36
1401D6DC71040A680D68F0A6AB4EB7F4794E300F17BF06A890E3AF6A5573B572
CC51B0C81D4FCCE6ED3BEDA16DB17F45E031F7CDB1C8C00B70148400F5B94DFE
1424AB44CB78CA3AED21F842A30E0A4F3FFAEF2259378F78719FC717B07F5E31
E5E357541197FACCF108A3C95D3459D4C11D7FE47C044E11B3654FF96B7B96C1
332FB562CD24874EB89D099FA013E556849003324CFC3DA5746419FBBE57F18F
8893939F997DF9C0423FC7C392446D256983A27B1D70E872D82A7823D2B1903D
61A78EA157B5900ECEE7DE7A360E0E54870FC145974BC9566FF5F4BB6523E160
0296258F58AA61D1458BB1D1B425664A05A468B7BB9013D78E651C9F79276B31
7539CEEA7A639BEB34D0F182F98F0F3E6ED0B2948DD707B41466C448087BEFD9
B1FFAE85DF1DD01CA4778D524F60E101A5BAC7071D4F286428DE71774129755A
86DF2AC7CDF01204222FF9772574EE9631091DEE17366EFC7BB04F9383BA661E
F23A42EEAF71AEA864A3078765AACBD1348751B2423F7665F4F0ED7144190D8C
B3949D4AFD6EDD50FAD4938F13F9F1E0FFF200FD17EBB71AB6D55EDEFB34C436
C697C71A6167898D849ABEC8DDAE229178320303CA00B841D7D06ED4C4F8FD41
34A836E628BB551BC7A0E21F88021837138F6388DB939049D68A64AE5C02369D
3C7E449D7E4089E3C5CFF45C146F9535AEBD6A15A0D8014D851EA988FE1CBFD6
40AD215F356EE206B7B19AA79DF1F393540AAB8687773F57A8063B3EAD4059E8
4588DA9B450B3177F2148A5DBC61933225FFF3001CCC2BB072B220CE7BC3FCE9
E2658041AC0BD2D60262FE4584C2AE1351412A1212D95F278CF85071193BF2D7
35C6B5DB09E46C4A975AEADE6DB69C36BC40556EA300C64223F7DD598A28BD68
534EBC0106C0ADDF76BBBBF1B85D539860167FCA8B656ED496775BABD36C132E
C1520162AA20F2C4A283D97AFE871E0EFA9E551E5A0A324C73DD3F4791A39223
DFAA2B0AE86C2E1AEC7551D4EEA15C18F4C076B2F315DB14BE9F1A3F1E7C018E
66EF4CE7D3816B90C3F7E6EC2068A8D5400557E3B58E02082A01010C4DBCD674
B150560332C76930436FC3A8C396C5CB31CD62EA2E10A7CCCD4465BA4894BAD0
47D980E8FCFA3F1D53F2DDC19F079E15A539178A0AC12AE72AA85008EFD9A96C
1AD41EF905E70210C880DC2A36724DA132EF9D35460CA326BAAD6BA6DFCE0633
7B19F62B586E8BA822C3581A27A3BD62B170E0D32F69D8EAE9CB65B686D64811
0C014173E886C2A19A8BA4AFA813A7A849F27E94F6A8081C15DDCA511E034EAD
1F84BFF6198F6A4BA7C46FC4AF89B235A41DF2E4EB72683DF21425C31E287B82
E914A816553F6F0480F1872B2A3145B7E99A21FB70CE2766E901BFED6409E108
362C36886CF780A0E24A3D01D7D9E823E9109C581E4E687E243CCC13C50DC329
1EC64CEADA582B35E4E7A8CD299A4D4AE8205DD25F440F7E2AA7A8A70B0916E2
DC782C2CBB753A8396290E93866DCBAC51F7735C98BD8B39ECC3360BBA92CFB6
F0116BE6D2E66101BB6A7B547F0DF0D67235B85005239458CFCF3362CA087D0A
4F9893E3B7C7E2828EB27F84FA1CA6AF8B4A727F9B63492DA8EDF982F2E6DB11
EABF6282F0E84248D4508F60D0A67D1373E773E5FD4222485D9DE325D67291BC
148F2B1C3A162E1D584C1D003093845CBD02349CAC93B764D1A6BF8E8A9993B5
4F4AB9992F5207914D28C0C6F78C1EE0F4E8E98BB8D04CC09B06E92390B89BBA
0C31DCF6A276415F9548B723875A52E6142BF54540D470EB9CDABE286AE26957
0EB330996A415BDFBD3A159ADC709F533C3893D09204285A3EFA728BDDFC9ACA
1A8D94095077C82AEFCD9672186A7F807ADFB746256F5D0E80C21A5BA29DA874
5ACF25CBC5DDF71768823A984D1095A555E2FCB0EC354C32527982BE106DFB23
5329782554B0C330DB5BF332E1D5137F17AEE56AB27957B38FB6366875A72505
59122EEF6F834346CBC1C7418A6C6AF5490B950BBA0AB981BFC1F9A694A744DD
EE44F204EBF8F8C5A59B3B2DA874746BB41D99FA5E144130A0BC7C6EBC46DDFD
00C465A0A980E8A6229DA4825CDEFEB46B72FFD344204D7B0BABB09549451526
745673B12FE10B11A61D52C8903EE918F6E79A0622D76B0D94F098FD475ED20B
70B9B26024EE70B5392909D5443105999624560D8A700FF11E7C880A0605CC36
68946C305EB048C90D21D24B5596F44968272E5DB48296699E311C563A0FD870
B51294E3780D5D4921C0C0593CAD14F203268DC984EA253F1A16A5E22B4F82F4
0F5C2EDCC6DB843BD91DE973CDB61EFE28F8302F86F2439C5BD6CEC982C5D906
56995B58FAE9EFCB5C1E97906303F5AD9ED7DF8A570990B711BF3A58A0A80824
C01F4F122B020AA8D8E4D67B9B330E2162E7C2469EAC737C41CBAE12769017CE
A7AF90B0B55AE8281C59E2F7BB16233D07A6061337F5A6C2BD210BD8E387975F
9E7DD24945437E5A45FB1F1450EC7D49274F27289EEF3322C802A5A897F991B3
F05FF373EF24C4943C1AF90DBBF9CD3F2A2D329750E5094523CB3C63180C28F9
D5F228DBFC8187D1AC4124506BC9DA5379C6E79BD6B6A234D9E3C4596FA6D93C
CFD08ADFA5B087B88A5AF0B48979E6E12AFE0983E9A56DD60DD15E77A9CCE403
913B6B038F5B2A95C0B6549F25417AC365BD9EB9CE190A6B6D6968398898200E
D0D93D9E7A3E6A091111CFB1FB36066609E811B5C42BF7B78A26ED1217C71E6E
6A5D9A397A716AA12C6324E882DECDD869E3B4B73B318ECA243E256E72944A51
874FFC694A4C5F0E8284C4B0CEC1A182240001218E4CFF815D94BA64832B9872
79372F0B556C2B496FCAB05795474C98227525F7B61D3810F7E8670014B3FA35
01AD22A69FDABF8E7F35F7814C7238D991B428391134771BEAE920D284297034
17CD5E6124D859EFB9D5E87C820976AB1EC3243DF90AACE1AA82EFEE44B0CB09
074DBE32A6FC256BDFF4D12CB1995593775253D13D88045850F515804EF8A563
0BA3B52574B11823D28B69839FAA75E6AC93EE29DDDFC37435F1802D0AADAD32
A509F2029C8ADE7974012D35488828CE476F14B0FAE129DCFC852D2E2B8615A2
2AF6C47CBACD4082377BA7AB2D3070F38703988A0F79D0ECDB76018D1C0417E5
2EE7E5FD856B98E48AE906A85F3CC23DBDE3DF65C1EB3ACCEB99825CF7D4DF52
5818281873D2025EDFD6438CBB7C87A56FA3F193E017718033CED7650E02A840
426AEA89FA3033F3848FB9701482064939D45930A133478C49E015ED5D896723
6B91286C665C75B4CEB68DCCA5B25371EBFC9C0DA7646D878F6E14931C600F5F
54F859D36E1854F694ACCE6309F0216B9E26FA0B59540240952C1834FD97D26D
E40251380385307B109902E8D3641EDEBA98A106D2BD8BCDACE4E3315453D8B0
C43854B38532EF3A1CD8894D0CE8F0FEFA963C770ADA75BFE3D66BE5BF96E837
A61584F8235B0189D714E5D4A37BE88E0538B40892872A57593F74623BA8A5C6
E7F2337BCD1DD50D8C8219C0EF0A176EAF3802E25A50D2EAEB5F42B527359508
410E868CB02B2D9F00D670DA938A719B533ACBBCBC02FC18853E1B0D561547E7
F8C6386A2E9C0335DF0BF28EE5425092CCF4B17C9E2453910B3E7A3E40D61437
034657DC1155020EACB113E4A3A05672CD53A94BDE9213365A3892C9A77507F4
F03D22318ABF997AE16D63A1BBF467708BE79F150F03C17E90A5045F1AC15B5C
F5A3DF3800CB9FCC34E9408CC0548A0425DD38F97C3D03A88B203EAA2BB0A41F
62DE001B5F81EB637872BB57E69F6458059AABA804AFF58E4EEB1285DEB592D6
85F2816C57F45F64FF7D7A8BA38DAC5214452243829BDC69AE719C6B55594EC0
E92AF1B06C305EE14E204B6EC27FDF38ECBF2AB1601FFA885CA6B7604EA82610
F372DB1C2354E84CC6D382A00C57BA26D585A00F96A890A57A72180CCE0B51F4
936D3B378FA1CC7E3B35E7FB03AB4A33E178A6293C92D8EBEE68656ADC810A46
728FB504A376B8EDC0AF88FDAE02C09B6C7F6EC6EF3A763CB876CE292B70A739
B6BB9F8220BEB3EFD54DADDC2764BF10176C5B9E50D193E1CAB6FF699A4A5E2C
84AE0C661A83E54863DA21511FEBFEE0AD186DC1F21FD322A2FE1A18CB014E0E
A2AE0F45C30744910C493D2B4106C472DDFBF63ABC61A06A26EF462B8F137763
3CA68860FACF0D91CC9AF41600E46661A7EA22868719DCB827408F59ECEA9ED8
08F9865AF7D04E6678845CB9877E7E750B3B3C980EF752B793EC140ED5A2D901
402DCCAAEDF85C002F18605E1790B04E3A9A506F6538A37F76A2BCAA83AEC49B
F37F519FF0CAD88EFA9CDECB32D074E22A9DBB2D865EB10824206A4D987EBFCE
11073C02649978DD9D62729C94C50CF77D6E82E9DCB043CF704F7E0F258F0F23
8002937141EF5E9CC02A65F34265B6B6392D8AE53316A845B9F5B197E73D68FC
7C4C68463B348318B7CD50F3E969787E30C03459D5400A39DCB90BA1AC844405
D71A187DA54473ACC108DD8AB51F877A8E091128518D8E53CBADE2AEDCAFC049
378B8E0A67F68DD954529E5B3D8E86F05DF1F9740F94EFA5642715633D8C583D
A35E51D29D3456DAE47CB4EEC6D274A8003D2943B664A130FC911B62EAA62C46
55F05DBFE5CB9BF5886C8D1AE353770A7C5CDBEA8608E47744729182087CE48A
0139E73C8988503456DCD0F395E6AE7B2483289C456DA2F9DEB062E8CC03BFB7
E90B30A9FB2816C2D17F99A3451D42B0178000FA98E95151EC2D56F8184A22C2
022ED74FB73BADC5C64E19C4D24C522BA0E34F21EAE5B6F9272EE461FDCF6D75
3826C587B359168C0E74EDFE921A22391A57CFFD97E19D2525CACD6BB5E02B7F
F536E561F88EACA12EBD891337C8287EB195E271657877AECECB3E4716C50D3F
A9F6724987EF8E6133759A731A60B9E9C0E7C0F16D22CD54861C650639973B50
0070D6D01873E175909AE4B043C47690BA4CB294C62766E0D0F8D13A79C5EB95
DACC78297BFF67B99FD1AEC6B86148755C3D088CF2DC77DC565149D7B1F76422
02C2996F3BDDC491A1F26C8A17515834DD74F5B15914AAF540B46E7C5396587A
EF899AFEBA85A42CB5E6093966A8697BDFEFF0ED2CAFED3435F580E9F730479B
B3D1933DA0D8352E7E4E69C7FB16AD3456A9867AE0B32D956B36E1B36AA44D5B
4FB0E570D13EB3C81556774EC347CA454CDF67DAF3E94BC73116CF4FACD10F16
BE3D20CEABE8153F13337F6676578B29DFA365549CC63F974B2CBDEA772F8D50
7301ACBE3C8FEFD99231FE23E1ED2225C037014835B876FE2107A0A5ABD5EE24
E3260B65A20D3E65227904C59630194F5C226284323F494B5CEABD986B66DBEE
6C2ADAA1C385BA18A95BC97F316B5EAA1E465EC6DA1C27E095D8C0142B12E3B5
212D00C3017E8471C8C6FE907C42E5D067F833B9ECBD5195601EB90AC43BB435
932B46882D81CE027A10E09FB51EDB4881EEBF6745E04693B6B38CACF303B9FD
F8656E286DD48446D696A121093EE7BBE90B5271F153B2ECDC563060CDC8EDFE
325CF81470715E4E4E041A064182746151952C97AED5E02131CDC4F15EA41242
F18F82FDC43540B4394C035FE07F0E024E9311584F209B3DF2710C49629F45DE
0F38B240DEFE83354E102DBF21F388F5A879C4B882E154E01F8BA0034D9D5082
7CC1C251A97C52A2A6991325448A4DE6F6AFE3AE92B685BFD7FB8D79A941E738
7E110602E0CE311E62EF55C12A52B127CA051D613D746D7DC0F1790919DD1DD4
E6514458827C157D33AC48F2C7B5C345CA4BC011172E76648F674321ABCF18E0
86903F9579FB525AB54E81C85EC187F4CAF26799E4596C5F6E6ADF9FB9EB39C6
8747A364017723B232D946B1218BF65DB70BF7FE4076FFE1936C4B5FDDF320EB
BE6559C377C767A97BF5142CBDFD20EB23A8C8F8262B0458D0AF9C75434D755E
6BF705B50B047C3D6151D5F66F697EF743F8CF017B2919EE88FC763F6E9C9A1C
75B269D148C60BAE7B3A84A58B89C05601C039AE1467A2002CC463EF468A9818
2ABBE546C2A2B6B9DA766B2C639C01969452CDF87C3093AB8A780207BD4890DE
094E01EFAFBE10F1818E67F8A00D10B5A362CD559CB1CC18C4130C64423AD84C
2E30165F5370A85F949B269352EC1BF4CC1FFA948A0C202280AFF1C88C92CC8A
DCB62ED4A9B5FF0DDCB2CA6A5D68E54D12226CFFBDD32FEA9B544E47DDCBB6B9
DC3F511E645C35262522483EDEAC61A1647AC033E7283DBEB33CA46D2F1375E2
35C486B4ABFA8B6EB3C07F2211D5F51A3E32ED8F5FC20F0D317B6E06E6C338E6
3C54FF4A76429A9DC09C8660BA2DBE4AE111D7216703F7ECAC22C3ED645F97E9
BD0475BAE45096C46E2B302E87134026DDB145B9D87791E52CCE4A5DBF98197E
1B50A8C9DC89669133384A38B2814C193AA3D350B7185085310FC3F01D640D81
FF1F8F2B8CA0A189E7458275AE7BC2DFF1622E508C68B3E0F8D7412B00148AB0
FCD3A52789019EF56194C9A70910B3651087423FB79CD36BC1C1DD18390269CC
7139571BC0E541083B00DBC07D4D613F5B2C5ED6A4D98E9B7258E1E666B71BF6
E2CB611E111DD891161C4F71E4C758243B1EC2746716B5C262BF38E70D6E4D69
66ED80A739397DE16382D77CD92D81FECEE5DB3660117F573B07B79BE841C9FB
9B8B37556A90C6FEFCF6A307981B000A8C94F930C8E02857419273D89BABE285
242138B7FCD5255D0B6B271D414443C187DDCD3F8434457FB734BBA38DD1EBDC
2649F693C302E6C8878BD06CEB8339BFD12AB97799A29B91667354A61BE37AF2
57A0D68E86ED207C50EFD511A454E84CC6D3BEC13B5D6175E9B3AF47E35BBF2B
B8E64FE209A3FC8BC6D5ED3A16086018FC47C515F3ECF00658CDD8776CA81236
EEB7A05DE179F9E943DED125004F9E77E1CA778353FC8F6AA6E9BB45A5EE9208
9D4875C276EE2874C33B393520322983216B7784A33BBB9CC6A592291A18BB43
24557894700C1CF949E30A32DE238ACE2C837E23A7E4E1A4C655FE9673E034FD
B42152FF8AB5991E59135C8CF4ACEDEB6D5A4C49F42FF9B99F0D5F0C8DA7048F
B9EBCB67CCB66F945AFE184064FC7477D3DFD99BBFA9FED4D242C93E6711C704
C3730375DCD1951BE26305A39D2FB6CC1A44CAC36D4BB60767A733E2CEA54934
9DC58296D97E6D27F1C107B8F70F6B4ED60340A2158C895B09706DA615E53D67
6CAA243E7E179F7878596C6415B7B7F25042D87B0AA855B49031EB810A2E4E74
04A48FFABF4BEB5D7920397B2863BA853F6886C96942C92FF880C3C269D4DC8D
72539C9181031103D21F380BCF2CC067292976ED0B61DD561BA729B23ABBDDA9
4B370193C815EA3B586D9A403E4A007259CB6D5E157A23099DF162E90B254EB3
50C66DB7049CFE8FEAFD63F5011361BE229F3512E4B790C94B13639539253476
F694440B2A9975463DB96783CBC530B04D8619834E337E7FAEE6B88402E3A0AD
CB98D82695D4186596971DA83F74C74BD5D3239436A2542AD80A82E72349BD87
B795CE4C21B34A9B83E123D20A359EA190E3B02B7C30B2420AAE48782DA15215
B81149C60D53DF01EE3EEE2ADA9B5AB05DF5E5E3FF33F2E68525FEC3FEA8B623
FF016CD5F2AB9C8AF3C80F885455EBEF724034C09404188C9623B0FFD3B09AEC
9EF84B280BE288240EF5987839E6A4A19D4FCE12261DD3AAE275F0A84FF05B77
D1445B637464F9117D035AB71D284264D83AA92439BEACC17D2E9D3B126C5FBB
2DE3822B3860DB2BB84632BD526E55A755E4D4EA07121CB0233B11E3636E488B
1FF63BBE4E57F7E4FB5338BE1D665D32F72B3C44E5F41C87667C42007D59DA29
1D71E4C792723274683D60259E93C54F3AC5761309DD34D5CE84B9DD70E1EC4F
AA1D6A1E98751A845C81288BFF82E7018204E145285F0CFD2784546AB9841E9D
89900E5102D94401D888FEB43F3B6A5A348088649AE3960C85396490779677A3
D75B98878187889EDBEE6A4CB02927EDA39FC9484DC3DFA29097F272A80356C3
2E38CCDC748FDDB321F00F42E0B77AA476C78CE09A6CA3881B97BED79F989CDD
ABD92FBED7B2579A3E2D8597473E65F75D7A176F2FE8381B07C754C8879CEF4E
C1AF8984A66A738D708082D16783EF503DE08AE54EB8C1CE712ADF6AF00F287F
D410857DAABC7D0B34AFD38E10CF3FF933636D75DC481DFF427D1FB291B8DD46
CB9A0E1627CCDFBF99594515433052BA35B212F2C4D9E277552DACA8E82532AB
CF6635A9B2A463F3F2FC2A44CF60D7CB69F14030866EDAFED5E33686F7237AB1
B78F530B55328069B4EBE3377A91A25A1B9CFA0E54B2464E45F38EC6EBF2D090
C3B68E040C2B3F543DC7AA539C990EAC8C4E0EAFE33470633EA91468862F826D
731F369D933BE449FDED95501BF154625309D5E68BB89E8FC66560A0AA7C7013
7805CB33A1C7F7325BC16B6E4449F7B4E654EC0AACD894078C814E36733E7855
59F1D280035050B2BA05DF201D1668CB3C3C4D1908D42E13F4A26208F9A819E1
37CB68F99793D840009B86069B1474373B628B93ED13C8660E039FDC7C9B7CF1
1BAD17C06EA35384073D27F09F2EC81A64631254E85223A4E60FEFDC0CC3A2C2
63F512977DBF340E62603EB9BDAB96EA84A0C8451DF3F6A395EB5C2361A6FBBB
1749AD17E98E7FDC6E230A188A833CBBB3252B5D0665EE533D77E9AABD33E1A3
B5A10F5BF7144A01A099A5B481AD781131C05503E0E629CD17F2738108EA3405
4E0F0343487F6BA7ACC643D91DEC6F45AF1C9409CFA2A9EEDE3240677808A5C5
357011289719C498E82B00A92B167625EC9CE8D8F577E8ECAC87D8EA73926847
53A2DDDC5EB0B2352C3AF4BFE9111AF52C4DF37671543669758F72BFDADA4F48
430818EEA3888EC397B57DA91A0CB3C7FD290E087C1649195AFF8127B651A009
A0477C01F28DD00DD11C7D3117E1A7B33015C0D9A8154A015EC4E586A82268EB
57A00F23D58233D018CEABA63EACE12F584CADEC927D3F19D3ACB7495E0996CE
B94D57A4980FD7217A76D879E9112ABB496A543ED88129B3DCABC5A83B7AB2D9
8007DE5785D8B80E979ECF4092861227B9D44FC35747F37BF8F26426E2531FA3
C63A7EB819432797439855AFE6B820A522EA846A2CB57E23CBFB10B07AD1AB27
868573A3D30618CF0FBD729305124DCAE48C6BCC9AB1648D12EA8B9CB6CD2158
D08194D22F545C4B6DEC3CF3A684CFEFBE4687E6C8FF930723A102A36CC90FFD
5AA331D2054AD702FC53C3DB4790202B8BE12F04F038CFAC2F52891F0916E717
9D6CFF46BE6A29009FB563EFE77E9DD5E1CAEA990DFDAE99394879A1E9BE1D81
53111DB3B8E680C264CD87BC1D085CE7CBE723DC2BE67E2CC607C6FAA33043E8
BCE6A94628AEE7C32A5378978ABDF7078E4BAFBBD86693F085DB9A2980B5A3BF
2225B60FEED5AA5FC39AD5CDEE44D678DDF5E3E641829B67D8A39650C1E80848
7CE1E128ED54755BCB2654EB5CE81FEAA3A371F09DDCEA6965C5844B1D617EA5
8EF506E737C69CDAA1646E237BC700D65DBF725DF3A14120A00007631DFB9BF4
74DC3782FD7E91E87E2F341C42A8D57E6859C066E622D417FA7B6940AE75B7A6
CE3F8B176E8255C8C8108FE47A3B0F099B0737494181F29C343B24B60D3AAF97
462718A09DF217D35B7CE7D88BF111736B1AC9BA0D81CBE2A08DB8F87CD975E5
056AC1537DA07570D9D15DEB507F5F589927639C1202C3A561A2445D91E4518F
EF6CE4E419356DC09BD22644B1FE2325413F962F62C6B3EA4DA00D5C19387832
DA640F4EC993B941EDC2A0BB5734A7637652B8DB9CFCA59B5C009EC9E0E41A1C
06A01B8D26F276131128809AFCB14C336CA6F28D68FAC3A11EA1877F80356958
550BE5942D30EC921AAB7FFAC50E91B72E4B1EE208D759B7E9E628CE0B367D35
8A0031DAE4DEFD71A776168EC2BC372E1319AF7161F827B7096CBFEAFC58599E
24EAA58AADF7B680FA7539A6ADEE6E8E57423B9E14E433A9BA39435CDD779408
DA692DB7DB9EA660A3D6262F6885AA952501D006DAE0C19E75AA70651036DFBD
C41B892DC25141AB29F7DEEC3F443D916DBA3F5434DA43FC01EEE1B50AA2E410
A572471E0DA3714408D05D0B88ED448A052F43CDDC06F8CE63E23EFD614C3776
D35E81ED27A2ED62AD92343FDC6891E989343A537876E8BF5D71B67D89BAF657
93DF74804808A628F54A92D2B84E9B9515D52EB420C7D8AFA65BC47597226EC0
F89D7B4130EBDA2EB91D18D91465AD65F4057D4A8F175DF2948B8327467CD26D
A55A31FCEA740EAA90425DA15D6530E85AF2DA41B7D7E1DF1A5D3E19F7AB06E9
0A91599E8382A91C88BDAC0DC61EEA4461F130895F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 66 /B put
dup 69 /E put
dup 71 /G put
dup 73 /I put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
35F847A5F1235B1FEF8D03A4B4E87ADBF23F1528D666F2D136BF9F809C71C933
2EA4B17A31BE9E07EE8910DEE03BC21A59B55D9BDA14B2A5ADCCF735A78E2ABD
AE868E2B060DE2D87B29CA493B7F9208F6DE4E194A3740E7AF1FDE238E7F64C6
9C47334D6FBCF5BC57C393E15B73D7A87037E7E913E24FF1B35D7AD5797D2D39
D56D2C933105B8B8C5F5C0765ED4091BF3C908F54CE906525A100C587FAA44A2
F19656987859657CEC9901B279B004152A52A4F3C5EBA4458BD2A716ED8E33D9
307E0AC67F70A4F507B8CD9250CD60635C48E9A202F4E9B172C646EB43691325
985633072BBB563C61FE9B0D638A6DD48B65FFEB7C88EE0A8542F093C5166DFC
38DAE540397EDA3A273019B4E290ECA9392FF96E9A71381B0EDB6700AD718DFB
7D2F84E39FB35ED139B21F8DB6DE499A5D8204F6E21961EA7E840BF214FC7649
EBBEC4F63D4C9C1FDE9A754D82882F8F262C72C1F74AA1312EC50E9AD1803E7D
D268B7AB115BECF0BC6B19294BF0968F30F890CFA7076D7795968FCB1665F105
9E0EA4CE96A667983EC30D724CB976B66D6A43AF6CC76DCDADD04CA713F47477
091C4AB371D77420ABC33F3D237E4DD35F3863CEB73D0D2512BB2792BFFDD131
23BA85E2E885CF8D79FCED552AC373611696632220A926DABF22188A68949317
11B1D2F1D26E0188731046360C01D9B1177842D56ED25AE602AF94920D5C85F7
D60C71C190E8FF88741969DF96C8FFA118E80E636F9AC653EC67DC58BB70B691
93B7721E4CBFB506534F2EA1AFD781E17BAAA7B54E48AF3F7FBA2022A914F739
11027511A54E429EAF6B687E73D0F4BBC74F7DDF823CEB33EE4DDEBCEA32AB0E
3A809A2A927FD5A436FB950E205296396C12DF1DC2A7DCFFFCFE29124D67FF7C
07B89A6613BF20926230F8CFCF45081B2A694545AF461726A5A4183AA1A3708B
99B7D01BD7171F4440109B2A33B065DF8683EB8B83A15DD0D49B5480F0F18FEB
F038DC9D166291039056C3BB93A8078E7160EC3CAE3D6483E79CADFE8A3F18D9
21E7A69CF8F0B88F478921636CC5DB48068147F5A7B4402D74D031A4B15082CE
18914FF4BE7FD7FBABAFF3C2607680B267F0D13FE2A9C24EAF13785488D8EA6A
46C882ED384C0ADFF52F210793B9BD4F7D377528635186156B356623FB5250DE
C38FB9006C059BE3B729450D60DE23B7F42EECB64A95BF0B24616A977FAA5EA4
A8007702C5F4F182950980B3DC081E8E8B6BAD54E0A903EEC1E52231788154BC
B5FA99CC6F53D5EF0C58A7BD780F64A8FDA2D2B1D2118BC247ACBB471A305C58
1E034DCC64A4C38941096D504FEF0991B15A8F7E8812B35934F86A8ADBF4D333
496E1B2AF87A18120F11F0F11212C2AD8D5A60DD8F0432544905669BD717AE59
56D23E5664797A7D52F302691F02F129AFF66C903F0BE78D394E31B0B8ADC0AE
E6E24FAFCEFB98E78D225A1E626353B9FFB4F121E2F6DE36A99E5CEF0B3398B1
2CEE1A5F6F6912C77A762330F0F4CD4F17AF97CAF341A1C3022AF186A6414DBA
77ABF823C76D4AC491C4D02B3054D1B1DC8B4C13223C59AA255B779A1230393F
7050FF8EF88323BF095F3BDD19F94122B021DB38683625A147759BD4382ABD07
C829BA50DFF3A10CFFD7AD8F0E914BECEFBBBE8F259D85A40D0E830925C75303
768226B33CC63C7292ABCD8CEAB66D8B6154E0B37B119CFA0A72458C3D2EE099
38B6A29232CFBE0B340A09CFA0AFD2B74F90769825205BD8CC0151234674D42A
7E1462F16BF1F92559CFED671A4617BF31FCF307053AFDF194D4F54FBFA96653
896D4B9AE3B77CC531CCA9DD94B61889AC15B119C2D96F13101D4F698D6E4741
D019444C75F77EC0B3A8C566EB86910A97152FDCD12233E11704E035220336FC
80451972EBDF6E025BBECD684F081FA7EA403DAC54439C7FBB7392B1E4AB64CE
980BD4F9F121F6E28C5437DD7865E5A3ECE84851701B41392D7C6B26C3511925
C7DE87DF953A3FA2921D42BAE4CC23403781D9841B26DBFDDCD7979609971C29
B5B57CC4CB27E402B42C96E1CDC4B8B803B8600DBFD3AA700B16DDD5895FB39D
6F04F08D9E3DAA8AB310AD33A2AD4301B80EE5412FB70F3F8E75C22C95CF1721
1DB9479C9FA4F55731C6EE875DE67A345B72C42478F23B09ED8469996A07700F
16DD90610B0332ED42AD29B73568E3CFE4ADC6300E2D4755519A6AB698358052
F289360325EE3414E9CDD80CE3449CBFA4077C6C7AE05B6A04F06F493F772AD0
316EA118B5D0D1628EB22A7114BDD7611211C96DCBE093B87A7B990C265EC221
DC585968EB349DFDC031BDC03A6ED90D6C589518B38CFF44361B503C1D8CE906
EC68D7FED3757A8A9388D66A22657E99E1335EFA9B926AE7C56281BD5CFB7A95
7876F764B51C7C483165274BCE0FE59EA42E22F76F2ADFFA400DF3A12EA59BA3
C959DDC9B54F5FC595A238AC98A25F46F800B16A2BE0B726B2C29506F5B94661
08E850750393513DEC933DC6234EE62D27DF41B0DB9774B130F74CEA6103588D
0937827A3F8CAC6E901BB6EF6E4F206BE50964BDA25A66E54E5D286434936864
1B6F63958B31CABABA916602920F73FB16384FF75241A4B626A870F545C28C04
EBE8ADE9F538C5FB848F582815F3DC0DEC97D8399B4530F8C7AA212625B68203
32F58E3EBA8F8C91BB8A6C5AF5DEB3F72B2AD26EE1EA1C10C7DBB4CBF20CBD51
525D42940E22657AF266350389D082C94BB42815C763FB285E69E3323FB5B634
DD157985E82225D632391F5ABB4E89C24E24AEA63966FDF4D3EF2B9B6D54947F
F66F519D44E11DB1E3F7605021DEDA17371D41E6E404C0D45D1F99D0DE7A3828
C2E59E96F8C9423F7E3F82609C55BF03F88F035412B2A0C58044DB6E87EBD32E
2D2F08125CFB3BD1B8AEB0DA5B8E62F6B26DECD61C329D4FFDD5058BE0AC4178
73914185897755E5564862A439F07EA23F1DEA423D99A51D4B6C15FD6CA5CB67
96EDA7569EC5D7F19DDD66B5C86900DC575015C096306E17DF6FFAA527E9868B
18218311406A5DD53741D669A186E799FA616F8FD183A01021056681F321DA0F
8AE3E85D45824C06B1F10442E04D5F200257E162200A38673EF5497562E2B5AE
B153B6E4B9F42A31D6D24220DE8B7A55F514584ACFC8B69AACCECE32CB12ED94
E28BA882E7D1D06DDE8AC54C2E7C349F779418D83DA43FCC732D0D95D45E9E69
A5B6F7D57FC21D9B8865457CDC54AFE0448CF41C56C991E864DD223ECD2FFDAE
96B9C96FFEF1ED94AF1437205E064C43B4363AE361830BA15D0CCEC266BCAC99
EE5FA374EC2C135E7F84E4BB4A45D7D5687C1FC14C82AEF5D50ACC9F9FF31FA9
EFB77DA150B145F2CA726A87794E3E7404754B245C6C3CCC99F974F89AE4C4C0
4568871D8D5469FD5C4460091D8D3DB7908161A7D787B8FD4116DEB2B9C90BB5
3D38EAEBBD10C139F59C3068BBAE436042A9535E9FEF15394E48312E5216188E
01D64CF9126AE45F6117E45E46A90A3F8DCFBEEEDBD455C01434E9E869C91EA4
5F116F80970D33CC8EDC242E6F976695DB33429D6AE07CA7066830B035E2BD4B
DAD64DA9C03215EFFFB27FE09A33690163D649075582DF0B9E7BD6273525A51F
0A15A1F49CFB3BEB442F6EA46B3182961ADA83535DC81D9ECE859755C171C2AE
459B036492915D7ED6912D15DDC6E9427569DA44698D811D7FD1BD3B62FFAA24
FE83E0E46424BB64973FE443440AD50D796419245F4AEEB206652B1305A8A7F6
38CFF582FBC84928801591D44B3FB03CDE738F77171B931B152C2BA275CF7843
A5FB6DFFC48F6A878234C66AB9320907D9DBC3780559178A72C5B0DA5B0CBE7A
A4EF360F752900BCED7647558ABF37AA67341AAADE335B44761A6428998671B1
7AA550A699FE369BA39D991821C141D0A485E37CA2E298DE6C64C5CA7A68E297
B83E56E273308C408EDD9B66DA227B17EB9786AE4E04D59D84C0D6DE69E9DD9E
B65FED7C5D85A8D091FC1DAFCE47EBBF53D2AE4F9B027E0A2869A67D62EFDD1F
0B112C094D820A645300451B400C94258F255181B98A120747717D4D21D10A15
FE19216E8861F42905BAB8C23EAEF6940938716D66AD9E936B599666A9764658
B210B9224046FC0B915A605A6488103D700AA7FC3020B607FC41D34E50316868
8C1C7C8C882F752B33043C847D7E7EF16FABB25C20E232DD4BC53F10A825C08A
ECC8F23AF4B179B5FCB2E220EB77E3F6AB0ADF5F5E19A66DD1CB9C01853F80AB
185D2573DEDEA68190B8E20E747B528712608118981C25EE644BD8F85BA0B58A
28CA0A8E317159B1FDEC70291F8C16AF048506EFC8465B80F3E6137207090952
08B3A1D1DA319560CD9E12F2B686EC595F88A805A8667BF186F468743E37C5F1
2BDA6097EF4FE28B6D25BC407AC501760636CEE257C07823097EC46EFFAF7860
9B27E280EE00EDAA08B03E8EB4725E72DB7386034B23E38D25CCFF755E4811DA
816E378A13D9943DA1C6EA76D1F083E27827789F851E6CFA8492CFCE01233E93
5ECEE506D7A3A11704A0DEB36DC9327C3F826B672685338A38E6A1B3E2A9862A
46261139783B6B118E3245FE1E1AF260EAD71EC581FC9B43848BECDA4E167B3E
7C413CD46A8792E38C74CAB7542B60EE9226D615CC7B49ADF39A7435CA071262
782509582670F93451BA305D2807982AF76D81087FBBF6ADF753133504365BD7
3FB3AE482F2E488498A1FE071AD4DC46835CA62FE3E739FF566F1A640FBE3707
0B5826C331F8417D3ECEA0570523442F26B3C51169761735042FB0B39DF9503E
E4DBB35795118BFBFDA187AB78D43BE58C88D22C76842A04538EC7E1FBE98F5A
D90E6C320897A577CB86997B067C64A41C6A1990AF7448FFAA9DE379D2D50270
75A72C38C60BEDE4451755925C3A7FBE0076C0213DF468E91ED770C7B0F93637
5D7FC76161BA81DA69A6B41850F2EEBA5A84B2FBF17A40871C326583E0384B3E
904E8AB029D508E451B1EAC23344A83F8A9FF2AA89458AFA9EBF26D430A5EE24
EA416DBCC5C79F9DC1CE68344A5D538C1D97D323A616C686481E112EDFF41409
D4D31A0C84B256FF5704C19AD656011A0DEA22C54BEFC8E8EC8035CF3125172C
1140546D7835A1BE82634B567B169251E8746B59AFD4DC781159F4D14E606E5D
3F715C6FEE4C4C31CDD6221C74C91EA88CEA6200731D0E54F9D3FD519AC4A230
C79579E6763237072198741CDC3B96AD6E83A5C9BC886881ED4A0A669556CB0B
DBFFC5072B3B919DCEDF15D5D23BB872F401344A3E2676291FDCE6CFD8394F8F
DF83476490DD5A8898905BB738022104F272FA6E9AD51902F90EE9AD24A673FE
CF1741AC8A0BEB1CEE47118325DFB7958DE12FBD487EE25F23DEC9C596776BCB
574800B650D6BFF9B09A78B85842AFEB4A1DBAA7C11F9012D49F5FB501DFB871
4A346E60600DA5C1D99592C52CC4100453905607A044A70216D9A21FA99398D6
08023AA2E2BFBA91BD4CE2B5DFB1A79F3BB71504737180B32D08F754268DB27F
D0A954145F63B2A2052BDBA1591C8FE87E72FADB40094A57AECD40A9B4CD09D4
9A1FD9BD0A28618FA0E2A36BBC84A22DA5C0A270E10464F6130D82ED95834590
8E16D7A239CFBA59C49326BB1B922C2A01D80529AAE1FED9DEC06B531C74A29C
A4EF90FAE6AC0E33DA71A4B8F7A0F33CB757909055DA0B7598E99A945977A22F
305FD3C97D430AD8A703A96869D1DDC752C29FA9E423EA92ACD27D326C65A13C
A4570A72FBFF8EA900B702E61CD9AB350EA35E32E4D02EF2466B6D10A3D53E86
05A2D8472AFC46895FFF361DE0ED5E0ED4725C5E9FCED734108D80C28BF6E900
2430DF8FB5F0F53E6FD88A6AFD0E045E40E2861D57B4D98459E6A11202037914
B0898DC8FD19BF3AF22AE719594C1A30371FFA8C2B47AC624430B5E59D8AA390
E5443CDF2545A933C9CD5065668E4217258F17E48DE907250C6C956BFB005183
98F075059F4DB0AE566BEF5FEDE45F60D56BBA866D7F430B3CAD85549AB334B7
D10BAAA763FF3AB3F49A644A18D967693DAC4CBF92CA473FFD3403F3FB21BC0C
EF41E2DDE5CC6EB2B1E5439EC6B61CA07A606C4F144310B853F2348C01193AA7
037121F1275E71700B6E46608AD71FFC2CD68DD57455CE1526329534F49347EB
5B6A4200BAC78498A9EC5CC96CBD103BB701C148FB7408D700FCCBEC52E5F154
2E3E8B57316658A5257E6DF02B5AC3A29465BD0DEC30CADCCA45B1256573CD3E
5B96A9567AF65EA74CDFD2E9514E8CA1DF0CFA888A1C8C016E1BDEC0575EAD4D
09E5307904A82BB682C3A6CA93E6A9BAD17AA999C069634A18AA51C46CC26F3D
09B82DCE3EC430946CC976A15F75D2F9EC0D3419D3ED5965E706A93B8D714694
62631E748157359C12A8B1BAB95990DA82CD1FA2D25B0955
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 63 /question put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA620E40822E15C2AB
8BF88EF4FF68D9C81564F0AC5495C426E3ED091CF4AEAD7696C3B00A0D6FB6CE
60547AD516EC9CC7B904D6617F81D2AC5086C30E40057B3C8854C4893D3B1D82
2D61C4414046FFBFDCD7AD22EE19016B50905C92287F9946F2DBA4CB1B18E118
FD01CB5EB39E77C77A4BE276258F7EF35269272729704F2A26BDE6159C77034B
5492340010118D673DD5EA0631B6540528D4A4986A8E41BB4707BB401A60BBA3
AB0F3BBDAF9A8D2B7C9B68FEF69743EFEC10C0612F197B80D0CEE66CCA02D9FB
8FA38CFB6344B8100B885794E7ECE8AA6D8107B2EF81BA826373623EF112BA50
178236AF89E23EC9CDCBEB79A9078259A18EE28303F01C50FFC1FBB2287BEDEE
F3A8EE002D31853749218195F8BAB4220538B74193DE9D34638E95B89173917A
8FA78F2BB1A510443026A45473761BF9BD48E56C6C5F58F3E1F28C44EA7CD103
CE694A234E3E4FAC00C7B7457368EEADA99D68BCFB4D94645F2B3A9CFBFD4F6C
C4507329F36C896FD3F8C1F578F5E9A55769444CDBA6DDDD04845CC137EDD73B
77D3ED47D897530E0916D85268032FD2B04169FDB8EF6729440B54B80A058984
80A335C168FFAE4E5D9F1EA6C657C9FC28F04A9B62D94C0E4721F1FD4B402604
7F83F2DE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /colon put
dup 68 /D put
dup 75 /K put
dup 76 /L put
dup 79 /O put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C43C8942435D0AAA3D9055FF808F2C3C887A3C469BBD98F026D0A59E26BA9F9
C2144CFE49A9AD892D4D31764F0AE3A10644AE3966B0A790684B14D11FA49785
EC5565D2B2E584CBFD85125F3FAC133338DE35361943DCE9AF05FCF2840CE512
998D42CBEC52B57B79DD63F00985881E8463396ADA47189A94DDF951A78866F0
B8A3D9197E39335277EF2294308DA70065D910943A34F7D5F2090FB4AA42ED70
CBA469A9F64B95A6FBA4BC89DBC93765E3AE4723162DF3F9D6BDE77DD5870ADE
C8900D6346957B84C3CE8CF47DE0552AD09E4838FB0F10F99C1389CFC4686DEB
31DEE2B4F08790D16F3041F9EFC88D77D02D39EC1157D538C0B41C1685D632EA
CDC90C78A145838224866EA5C1299D942039DFF06157BA1886575C8115796C72
19F735AF881485DAC6D989490ADE623FD53D3DCABB2ABAEF03EE07C10DDF06EA
99B3174459E7BF82AD59FD366E775F2BDAA584B63EA0CB7C9786C3BE9F3808FC
75BBF201A290AA218F726809BA1644C7BFCB667D8A6123F3B3A1CF2A4175CB28
D96A02EFFF699204BCA272D8AA67F684D5532AD30B1D774EE23FBB29604CC4E9
9DEDC101CB9F8347925BE84C68A71D9CBB5B29FA5428ACEC0390E4F87F541F33
5DD14285423C08D55969D8CBC4B1F847591A738E62D314E57C0CE790F74EB7DA
471127DA8F5A870DB94667B84905E4A53D1722643EC0EE33A4151704B6D1920A
57F5A39F6F9B20CDE0E205AE42AD9B8230350E926603E2208425FC0D43C52EC4
2540FEE3C255B3E6BAFB62522A8D06A2106C42C2E209BD0DBBBD8BC41D378837
F65BC114B286B6332E48B387D981D73B7795008350B05839DF0160C44BA903BA
36DFAC7505E12C9A192258428A96238263350FC78A2F5D1DEF7017DF93D84A44
C674BCA032CA8CA22C977CBB527BAE67D1295834C9D02630BE150B0ADB545FD6
C2323D4A79E5980BF74EFA3B2E14D95DC921FDC2037D29863954DD3C26E348D2
07DE9B0EFFAA0B93C1E6C847BE2B0123B6D3759B25790E90E9F3CE4B0500843E
E4F6F7A227D1E463849CE7CAAA901B5C4FA9DA2E837D8381AFD4759AA5A0DAF2
60461DA4AD67296BC912E46BF6AC54EA46DF906EC92F5DB27BC14EF6447111D6
7A6FD6AEAA0AE014D4C420040152B58E49BC5C55094E470C6872D79DAD273C3F
E2C434B1C34F4CE89641B4AB2A78F6DE2937E6FD524984C5F284F268E3B1E258
D84915BFE62F0F63D287374EAEB3748253A5FD50BBC878667535C2B14D5D89E4
8030D6217CD4BEB8998326002B7A3BDFE2E7F97AD701B65460EB457BB7147C03
F5B14F1BFCAC55AB12B513BAAB1C95BD7CEA5F2C1F54BBB3DD94779781F2544D
8E144E3258954B12FC00C1638BDE5BD3C8FC10F2485F283E33A8C7BABDF1D45F
3B7A762E0774B94A95DE1A9AE148930CA5407AA21BD85BF3E74D8DB11E32AA2E
5EFF952BE34EACF3B3F40D26999A26A975939116EAF2E38BCA286EE46431E5A2
41C3D940F5E9581E6F97A3846AA47731BB6AC92951E9E730A0E0D706DD9C2D1F
8B4AD7040BA20BDCEC85191C3DE6592FE9DD6638EE743519ABEA17F8C0C26F68
3D06DB800BBA28B73748E63743897966AE7E6119E84834659666896E0D4EA6AA
CA5BB509C86E0D75A51C0803878E89C7A8BEEC98938EB8E556CD93659D12E13D
FA7D50BD8D1260F496F7FA8B126EE39544E552009C93DE1352967A834AB5B380
8A2FE5FA3955DD0F18C790351300AE3236D999343753AA5120F796ED713BE802
C85DC6EEBA3F29601A03223EA6C178E3E76BF741F896C3A48EB485A5F907095E
FDB00CFC3634DDD0FA451D503CA1E9D660BC15A3708E84B8B581A939702F57A0
ED6EC8C1035C535BD2CFA7FF8D3133525E9C31B8FC2390CFEB19FC459E00DB52
37F0E259772C6140B5E1591D1CD97D7FB2511986666916CAC43408E5FC7AB0CF
3D5A0C4F9BFAC80997B13C975C35D5ABA3F92A2A5C3A5E31CDAAD54C83BCC2BF
65A886C541175258D8B10CC68F72554A3C8C9EC2723255750D908D7070AE255F
94FC069ACFE2629C2FA5933CD66B9C290257A0DAB3EE65FC98ED08DB154C5FD6
709057192F658DC3723DFBACC6C631AC8F21FF925FC817B4CECAA122F3EF7FF8
5369784334C12A037B9067F05E14FD847B2CB01FFB19F394E6C9E93A74584A6F
D4148F4623A785D11745973B66D982FBFAAB484EBE8649E41CCB0A254BC91331
8F8E9A8B70F8094D259628B675FDC934F1262DBCF775137DDED55D205AE63E98
C3D03B8FF037AC25431C5EE953FD70108570816A2BFF702632BCCE0D782CE79D
8DA065DC48B1991BD6205EAE66503D32410DB6B405B562D8D99A46025501231A
9C685FDF42490F74FB38BC0DB1A4291E0EEE8C398A49217940B3718EE0B80642
836233CC6E95EE78D7C4A440917978CE478AB43DD4FE873251E037147AE1AB09
659B85341334B8ECA98F69A976D85A639D1291A7BA1946801D4E3C95DC862067
04A21FE1F60B3A777D95782CFC5422E9A1D02EBFF49D8028D1FB27E8C50354A1
A8DE7B73BC4A199DE98DCC47735C2F6EA1418A85A138231889C1C208766163DB
611E06BCD56FAB25238BCFCA74BEBA7C97ED458B0A21A63DC1D93EB416F569B0
976AD13614F2E601A5ED8062A69F76A03A02408BFF3647AFC45B1EDCF45EB501
59D8D90C212201B2123D253BF894BDEC36A063CD631C7C5E7DBEC09E95904915
F6AB583B5FB96319936EB09E5A4100C556953CD6EB6F7D173CEB2DE22EB96268
B069F097AA4A1A722BEBD4983C1588C756366EC7068A5B0026FC3FBC6C335B0F
C8FB65F1DACA1E980095AE9D45DEE1BD446E4B7D7692AA39F2035263D5FD559A
12B16D4F567B324EE76A8C19B9D313111379BBCE08587033C84AA66EE776B04E
874D7DE221DCD4B6CE4C6F0FF83C5798E0E239FF2B69A851F6E00ABDB13513AE
C7CB322BFCE48B50E8BF5612888C329B496A2E1B462A54D5CA04C51032B014EA
94812B321D853FA09B56054B62BA2252BADECC5200327497767DEA677FAD2422
FD96B4C12B5660AF02DA114A07A19779A986847E05FB0FF01AE6741837A268E4
4BB117E794F69BCFF8EB50B8372239B7695303B41D136738DC5CD5868FE61F4E
A4A6B2A74D52DFA919A544CF8DFDE94C06F08F626AE018342769539DE3E66722
C9E6BCACDC6A357C344A7453F42392CB49E2C207218AA49AE8A176B249276A02
D9A30C7E9F36D8530E15C5DC656245CE8A11EF6AFC2FA0DA2E5053C495BEC27B
794096B3C1E2007096F86A2BD6AF014E00152458E02E3A29262BB928E44163C0
DE520D22A9297921F7B7E5AB8C52E2D21AB5B93FC962773594668EF3DBB0603E
FBFFFA8E0C07863A53E3D0AE8AD690756AC59E95E1C0F200718B48261904DE24
1F22DEBF8A9BF3E6EDA862D8CF17416AFC0A9EEF4DB8D2C828D992635133D00A
AF5E2D766E82FF2B129F98CEE087600C18BD9F746C805A230744D150762177E2
3B02CB341174E0D2F80FFBB83880982C66FFF6709767F5CB44D13B58A6AB98C3
398942E6C94D2154C772CC70C169DC4456F52BE6BEAC97855782B702935240AD
04F723F9EB0BB14896B5A3A9ECACCFB6F8539F386E9F3F20844E16DA09C50810
5231B57EB0DFEA70F974E48D0471EE424A5ED2228C70FE3166A2BFF4F518A678
61D83D893A34A84D5BBCE76B37903823EF2FC79DA51F8EBADF150C765D0345A8
823D4FF844C02AD13DC63A6B53201D5C0DA8F6244AC9CF1FC323F6A0AE19A4C2
FEEE7105CA11F8D9CF50FA8FA32F6E11EFC7159B9CEA1F6B459C64277A9A9371
3EC7A0043C35FE686CD43409F5C890D6E4716165FCFB3EF99BC448216A395DAC
1534A03D105CA0758B55383CEA7769B995D2C265FEB19040CA106267CA0CB998
39E22446EF83A60FD2902AFAB816FD59D75E307D40AA0424A30A46EFDB29ACC2
878F73D4EF5D2DAFE8A850A205DE390597D86BE5FAA82DAFBCD9D39D814238FB
33587FFC944ECA47A73A2768018C441C1F68903BC0AB16AD9A2F4DDF57865AD3
95931AF73CEC5B0F9DBE403E5259C870E832BCC72C4D8B6380FC6A0D8F5B0B32
51CFDC7BEEFBF13A1EF6DF74A1CFAA615414DB44F0C29973EEF9318B5A5A8148
028BCC21AC20FDFC9BA7E08547AA1CE6C3F0CD9CB54B4FC0D4C5364D5645E7F9
6A012D0152C82882387F0F69919883A65EFEA16A3E72B4C0AE594B4E65305F2D
0D0EEFA5D6ADFE6CC674A7D83EEA43801D46CF31225B76577CCD1E0B82736DC7
29A51895FDC2EA9D1BB53F1CD480CC3A3D415265F8E597482FBC9DC985A179C3
1C0655E0B329C31147AECF383A7930D8CD5BF153B67377AAA90C8E5721887682
64D408666AC9ABC8D75A50FD6766B4F5077094EF1CB073FE383BB1048FA63847
71A92D2097D74ACC99E26F4C27A781D25F62C6BFD2A1E60AD90E6437DCFD7EA6
8FB228FB7870B282300F5F87B9259DC0A1C5AA56C06343F9DA2792539447C3D2
385B53B862A004263CC1E3978108A98CDFBD86F682680C8D19FEA9A360660E67
1A0B6B1F2DF2F5A68BC6754A08DD5EDE9E6F232549957D59F07240DC0704A4E0
9FC576297B231E1992C347852E08D72FCE752B9C27440ECDB21B83CF1EA586FB
B3457BF33136941E0AF2ED0BFCBFF28DF24E18402D1A57868D9E08DB223FE8E1
1D3566F4090EC797F928B67DAAC30B1DBA618101125809F7E82B715E96F0454D
A5C732E6C490C4C200E276B341CEE73240A42E6E38564E0ACFB3872043A44894
5E33CF382E347887DDCB975A009135558E4C447615F8F2DC7E6272067039B78E
85C5FEC9AF6E6BB74510315878AEBCB166D201BE54C21C657EC3C734133EF658
D35F4BACAEBB4C4B996633254D33681F843FEB06DFDCEC4129AEF70DECE5E57E
211F652F774C2EC5A84726AC78C0880351CF1EA6285F1666EE892061DFCB43BF
B7672C7360CF6895FFB07C3DBD96A4E4B18D6C6CCB00389041B81866E62FB0CA
0EDAF499652CBEE4E199229AA40FC38D4B1958457F82EDB523412D276B526ABA
79D7DFB90A9F263F7B74D7712D83950289A67223D50C37E1575AA463D91ED841
9537B37ADF19B909CC390A27BFDA1D2180B42019742480C7B7E7AC01ED9318CC
FDE4BE5042E17FF3D4F883A12610C1719062145B78A33119C73193BD0C0C49BF
C2101EF5CF6F800BF28F8AE2FB18932408C5B2A536251FAB665B857AE6E01670
3FED8CB3F11A2450389FC4698F93BDEACA23294F8B1BCDEAB2313D90F211B095
58E7FEA7B39C48CC86A111AA595D6D0037926119861833CD727F134B08ECC1B3
3E18AF442AFFF3799948B50FAE103E10F162236D68887C728BA68B70DD5EF5B6
3CE52085BCF8A22306F749BAB851C1E5478A08C57000910757E8AF925DCA5D3D
AF81FDCA7ABA565926D5A40779A8849EE119B164C4C64B2773E2FEEA0D4CF58D
88715CB3308CE5E39063F967C24FF421A4D7349410C15B1BFDCBF41F7EB65E09
93C8A086084BEB682820ECC4F64C7E55560DB1A192308A85597BC20303078B44
F45F18F1702E3ADB5937C2516C71E5B8EB66CF286DF7C52CBC08C6162B0F1945
8B6A1F37AA4740E65894E189349CDB558DDC8F993921EDA1BEF0AEA781EAD6AB
3CD6B8E141C23F57FA625936763791EBA261E8271250263BE8D58431A97FF51D
1D299FE714320FB8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 69 /E put
dup 70 /F put
dup 87 /W put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
/FontBBox{-33 -250 945 749}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089
7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461
1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760
207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B41A77EA47F9
681F5618B8703DE456E33A911005AA8BAC68AD30ED18BC9210073F8D09A5E6DF
A6A8EC7B5854CEC92EEBDFF2804CB222CD798B2C12A25FD91C572FBFD56E05D1
E733310E3D9D742EC10D6249318B4723CF308D873A895EF1DD5705B161D802A5
90AE24A4664E5C2957C047E384997B6B1139B812602018D5D4284330978710AE
77603FBC72FD7D2079472D43AF770B33E00C001BB9F8FBC2B2D6CD345D2DDC85
A898835C8C129A94FC47323C98756C2F186E54A25F5F8582321C27682C39658B
59AC6AE16BAE603BCBBB3D923AFC239E54230996A81D2C08A8EBBBF1229C70ED
205F6B5F957CA0086F3A55092F6EE7BECFBA1A7C7D1D5463534180845A414F11
DD70E277F211F596DD4BB077E53D6D21A09A2E20A6A72AA71CF23F3C4A840490
624169DA7457239AC49F1787A214872DD57FCE2CC8282E33AE8FC771E0E07E8A
73A892650D4DD7C0D538B3A4734C066F2543183F2355B307472923FEE62AB55E
51C290B12DF5A6BB7B4A38A235EDEFF95A3DF320849E00520BAA8B9E7C0B1B7C
5E9EF2D83E7544BA2EA57D67C60D48737BB2D2A9A2F87DF3DFB3DF178A79CE48
611DD772CD62BCEDDB43DAD311954F9204B165D8AF9504E6B204A26C0C61E12D
DF852FECD64D6AE45AF620E568728EA92070867AEB289CD8CE5A9EF1800F05E4
5CD098FBD4FE746C7AC8D959E8C2F94A276570B042F3265A31C0011DC1364C86
57446196BB9FAD1A9FC486A999293315CCD780FA8E7FF98A77B91BAE5BF63F50
ED059EFB7BAF9EE4338EFBA7DA32D03A0C792DA4CAFC6D212D2CE8B3289656C2
4A42529F41F6C402517E860997694179C4FA1385F7E9CC8DA9FCF4928520A533
DDDCC5048AF61F6A424B1764A18BE345585F789AD785C4FF67EA2F74D9E60228
443171FABAF38B5C57335245DA681E79873ABA01C6094C36B5A43D067CA03DAF
E0BEFA48228CF12ABB06CB65134440BCC48431C21AF9AF2881BC5325B7923BBC
DC384AEF8860B1164BF1C5B587E868B490C2FCCFC33430076A7DF03A010C21BA
68EF464BE5D692DDFD6074A7F7126BC8FF5E0954D9B18984896A40F99CF89848
952BF2031243FCDDF05F8080E375C3B17A19CC42A7263CEDFE151982C4845ADF
B7CAB4DBF1E96474743E245A26A2921A31659439CDCA452D454A4F0340A2F6AE
FADE20434A8986F8FC269E0275B7D2DCD99AB18D2343914B507345DCCD94305B
1AE6AFD9CD115F5569E307E1ADDEE2A708D5B7908986F8E6CBBC8117D67C1F89
B1CCEC115313FE16BA0237EAA0EE1E83EABFC0FBF68511FC441B4986E5DFA175
F941801C3CD9EDB1EAC15C35F8D1276BCE339B1A2B3830A4C0EC604785A20166
2CC6D930DAD1BD7D6CAFB5C33F34C5213CF06BEB9FCE2E51FDA3362D0F383FCF
705F2FB15F622616AFAF24602F198D6FEAD61CE5FAA618ACC4DA2BF0DD4FE0BA
8707DBE9D8770F4833DAFC2F1934F653F5B4A2277AF741C109905BABC85F6FF2
DE46F2EFFBD2032FC3881390D4F016E4D857CBA6422584B58592FF15BE3F136C
5FC567DFA23F29DAE4DC595FD7D7D37F297727522FE817208846671417DE30E2
54B7C125312832340D97D9B4A636EC5087B4631B33012C5E222C8AE050F71B32
D87C29FEB608FABFE3223A5E37EABB417E6C5028FEFF0CB0BF5E1DB3B02AEEC3
83E1016C6CC5C2056AA81622EAF8C5EE9C0570B74693C11631C30EDAD293B1F6
BEAE51B02EF69960E25ECE203074205ACF39A1EBD2FCBC52058863C5511E2F1E
08CE1E701CB9E31C728699F5FB0291B6CD6238C5D2D09D269A05466D6592BA41
8B1BCB69BBB82665EB954222BDAA82335CBD5704BCE4B51355C0034C031EC948
E1673AB15FD82E364EF7F3174AD63A72B07211FD32A7645BDC1870B0C5B561E5
EA43EA5FB368C5DB88E88C4DCB9BA90273F52757FA433B4897CA4ED890F19B7D
FC26C63E17300E05CDC7D192AD35C4355C0CD91970F023727882E0E0BC9EB24A
10C756205DFB927FDC6CB0A47114D36DAFB70AF363C742ED7E1825B54CEC33B6
7E43E5AD90822F878A092FDF3C3031518062E5F3C354629E59BEC26567BBD032
98FCEA9B66D1CF4AF961335AC75961D8AD08C386515A84C4AEA307E64DF3A7FB
CFE8258A0C77D8AA2BBF9B51E08A6B3A941CEA38D3C1F54C0566BEE839C98959
AEAE002CA4F47F8E6C9E4A2379EC8712160CC4CB22114F4812716075E656D5AD
C70A439E59D2BF3D6CAC4B5BA10A3CB5FC0327BF1C7ABE0292D4FB85A5236C75
1CE6D8CAFA5E0B1E69D40E0C9A8F6E765347BD86316E2B90161B6FAC68D87631
FE81FA687C64C3F316BAD947A6EE07D4958921B10CB153699E36E15002283C2B
47E663D3F27B78B8FCB742FD815149756E1304780C35B9D48D914F8A9D2AB7F1
106552C25F4F84EC84F24A203FC6CEDBC60CF1A37FAA024845CA5A8F5F73426A
6306AE4A6A869E92C707FC598D5DC32B1C04DE76E89ADB4A7DAC598AC155F50D
19730558AD4A3CBB75A5CB7344DDCB5EEAAC25744BA3932833459391CC06CB48
269ED18297C2ABBC13866212372554C3F7EBA570671F4038BB91A83A51C9C754
3ECA714C625E9FD1A3DE5A7981FCC4523F126DC9598EC71CDEB496B6929D4ABF
5C2740CD92FD7AA51BF13CC5D1C1B9F30BC8911BC14F76B778103593A3BEE79B
33BBAB87209B3427093260A56FAD9DD2CAD645AB277EF0665E396CB941D6DE6F
EEE7502AF4A62EB6FBD8AF3749333B992281C03D2E05EF21142C081682A8D89A
25F79247AD5D784D0DB1BD25CD30AEB2C1AC4DF79D4E12A3BE9C4225A6C2B598
047D8442C2277E3FB67E28BD9B258E8EE71178D3FE830288A4BEB67B5B5C1414
026FFBAAD71D496C2E7927341371BE9E6DAFB4B7D64C91E27BC129A8A63B55CA
2B205D95879C2E2C8032B0E3B9704BF6D3D42B349C04866D8933053C1EDC69F0
6D157D320F7F28BE07944E7D493DDFEEE1905B944B668ED9F8F7DD7A8779C34A
A47F5C436D7CAEA5A22897C5C701D1F8AA50263CFE7F9D4D1E3643BACD0B4E8D
098A56A1F7B07F98B4E77B87755D33F062B9ECA07410DD5A3E988E80D4300C77
CFCE2F4A647D489DC9811316075C4DFA25DF4AC956D764DB19A4999B22CAE76B
62C7C9996470F66B6CF5FE6F9D2CA0E2D9BA624D17B946A1D42ADDE60E425851
252F083983BEEFDD89E8FC5E60414ABC1B514D07CF80DBA0A52009CCE73F2F56
035782907C967EBAD44B11E61D91EA36C5449968B54BDC3A0E23FA1D53EB80F0
6E9C0A98477C1F1BB15B8A8A9DDE385C4D7281FC78A7C73D655D2AD6A078AEAE
F9E0D25E1ADA8CD1B0E5C56B541300D0426387C82BCF93B58AEC959A49809C33
35695A7D7C8A617251DB3BB214D725C382932A84427E07400D811AE62D005F66
80F35688522024224F756E3F64FDA0F23B6363696CEA90F29DF19CC66EA77579
18BE598EBE4CBAAF5C4F17601D0C96E10BD7E4CD5E367D3E78CDFA7CFA25452E
A93BA1F0B1485CACA0E76AB4A89D1F452FB44D31A0EF7BA427D1A23A75AA83C1
4222B1E5C35701D2E53BB8D30519EEEEB09DF8DC92FC1CD35E538D53F1A88248
49E0B4F65706264BA1F92EECA804C6E9ECB67987402D439C119D5B52E4EC9AD3
E0F900583FEA9727EE3A79C4CD119BCC755ABC1E3D56BC93DD71CA512FBFB9E8
B79C817F9C008B1EF60D248DE1DA521B84DBB5B5DA9980C960A06E11CC039CCF
BE15D151D160F81B8A081E16182D85D747A1DD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 34 /quotedblright put
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F90A32C4175B6BFB279
024EAE1B04D721A6C54FD62484F8949B2CE9B87D9CEE04DFF82BF14931B3CA03
AA5F701B6F80BBCDF2C427C40A51597F0B1BFA25EDD7CE0EAF2EC676BF0059B7
15DD5462BA30DE78A08DD533DC0E8D85F9DAFC5FD842F417265427E0F1B71834
D2BF6EFAC3CCC40D3EF3B2E2080F148441BA45E366C4D6E1518CA79D0F8BAC9E
8E96C013C5983D132995F24CBAA56D109CDC788C8290329263E27D61167108BE
F6F7E34D9763B8488961B06606C887EBD661360490D1C27000A57DDBEF704857
0E8F5EF47A6BC9FE32D665F96B1BD1053C2B9B13978232C5BAA292BFB5002ECB
270123C4328F876AF7B3D5608AF8DE787840AA36F761E1D3039E5884ADE4D847
748C9A06E3A59A3A501BABCA7B001FD0E905C3AA4F2C5C322A2EE36FB2990635
BD9E564481BC260120FDEABAD5B6492CF06B198DC662742EB735619779C22D65
AF2E30C0607862ACE3FAECD6767F1F3004976BA3516C0F46748DF6D2537228D4
262931785C56FD63F5F32713B6EC173DE79A0DADBA75077D02979206D6558AC9
3EE38F05514FC2240E7DF391D5B24A168FE1E21335D3CD85C8342D30A798FFA9
B26D912799D11555CED849422395DCEBAA7D01D4CD352FF15B42BE9AE6B0AE63
0F1501B44C42131F2778926C837B57EC105EBF7CD5C69266084ADE5D996FC784
2404AEC20DE77682832C41BB87F744ACAC587C24213162AF50CE2E6C405ACF46
CD728FC4A480218EBDF7B90241CFD5332BEB906AEB09E183852F75023665142E
30676EC352C6C8D2DC240BB656586846812277FC08AFAC9D06014DA816C9CC0F
CB573CA3543CE5B2F28BFE2362900E6EE1EC19D15E18AF55E680CE8559531532
34B697125876EE7A86A3C5455D8EC3EE6A08DEDED9FB4C8D7AF60172F0814FBB
80F5A0BD1C7A2F731D9E7C22434DE576F75E453E5B69BCF57DDD5AFF532383DF
462F9EF6A15CACE72CD2486B1A488595CDE61641369CCCEEBB157CC1A986CF2E
8B9F6589B716FA30C8E726437A9641475FFB05E07C033DD835DCBA8054761906
1BE0462A868EFE4D26A5A40F3E8725D9918E43751582C22E1F60B0CB8B67A7CC
58520EDA39A7800201D082EAC3BCA795366E82D4F1450043BC1272DDA2894789
9389184B2B89ECBF4DA7D03E674BCF858A46BB2BBCE19D37D57758FD7A733277
CB235F4129DC1CB390AACD30CB3C341A79952846B0AD9E0A8444FBCFED337020
AD6EE527C6372649EBD88078434013EBE9D3E5E1A36971A5B9ED64A676C57372
53FB5D2AE26CD38781193D77943D0D5FEB2991117CA0C72D305E912994756899
701A16F0122A886D3AD63FF12715E7A1E9D0697AD1B8FEAD854A3D1225539E0F
AAFD6181BDE2BFD16B2125A1577850F1EF7EE4A3428CD8724A795302E4C1479D
4F6504B68A7826C54E71F387D50970B6839664B8ACB442DE1D31028500CF5311
6DE5FB14F48FC73DE579BAD62F6FDD81AC63940827440C227E0736F704E817D0
E8834F78DFB15B31B2A496095484AD204712A9AE06B21453759DE149E8FA141C
5A0DD35EFBF90394B8A36141859ED465C604DC6DE5FBD4846FC9988111EA63E7
9D677AD54A7FA485AF2FF5E08990267B75AA4492FF36325E6DC1CA6160D44ACA
2C9073E289C42E81D07489D1CA76D765E25D6C79CEC1FBB379D033079367C06C
236722DFDF22CCC99E7B22936820C104E6D3ECE164F29E1A0034DCFE3C73D5AC
604F81930DF2925A68264A3D833B7E6771125ABE71AAA0EF14FDE5C3EF8413A3
DE583257035A6054ECFC90ECF97B3BCDB91AEA45C792F97DB7333727AD453303
F4D8DECD36A199F42B5CEA18E6E01CD67969DD5065200EC082898ADE6C9197EC
F748EF40490935B1C6B3C0DE225C7F11BA3F8AFEC562DD25DAE20BDEE8E07338
96FD44AE3767D1B90E6A433120DD09B0697195EF3AF3A083570D38C31177A16A
B4F58AF018B19C9B789997F47225218B16E53AA1188CF397934D0AFA874B4FCA
BFD9A2BA86DF19CB964C9A99B295CE713F492112B2EBBF4EB70FFB8B162A56F2
5C441E81724A76B4BAE3AFC6F4352A3EFF9EFCB9160EBE15AE06E6F1E153B87E
9C325DC0EDA37F51646E7120B56AD8A9A037227B92A0D6572C29C080545D0907
18CC5260A9B79349E0BF9495A16F2BF1388633BC3B62F637618FB0E0C54DE8E8
60777C4DC5F1FDCE7C52B811B6ABCF3DFFA62B32EFD0A3A2BB544FA5EE3B5E9E
9224D8417C01B0410ADAC92FB0A295740B061338A8B28C9B61EFDF5C78EA6F65
64C1C7C1A382988BE144AE5B544C12659CD3B93BB447A4A584BA626D751A743A
A8FF3A9EF90E03B32F74CAE71DEAA4E244C06415439896464A6ACA9CC7D0FF79
8F2ACB72C938DE760CA30255EFBA3781C91951A8F7F2942F454CFC391900246F
6D6B95F50506BA7466BACA483A9AC5E253F35AE27DB8BFFE2AE18201A45C0E3B
30763F82560DADC15704575984C5E8F51B8A3B9B732CB2A157118DE8369DB957
2A203E95ACE5320D28FA8FA8970FCF6A425F54386799F39A7F9123261EAA0C5A
D7A6900A8D6C9931A1CBA7AEBE2F15608F991FCE0C28F09CA625BA2E633837C6
BBDCC2126FE99D67645CA11666AD2FADDFF25B201FBEF4E658C24867C037E88F
8C46C8C533C3EC0E612CEF9BB44C199A274D9D6397542FE10BBE167E16713FFD
A5C4A04BD5F53B8C0DFDE270C221F590C56D7CA059AB20FB5FCBF75B67774222
FB1FCC268186A33B918C203F11CEDF901A19DD78167DD8622225A195F9DC118F
C57FA9BC47A24C92DC86AF6CBA2104578E8A18F15F89934C889343E0B340E601
2F97E103E4D35FDFD19F3D770BCF6F1D2AF7AE04B966170853620BFB13E2E916
0812D80418D11CC8D061E3DD8E4A1E305C3DD15A7D4C907DABD5221B17DCEED8
C6B1307B53674BE590750A719F0DB4DB6C046790EF4B447A00A2201230B1DE4F
9659F387F1AE7CB2476D7094DE90B34050546A48C3DBCE5D32CE0C5685EB35D1
0E25604D5F432810E4CB0B78D9BCA778F3E4A361C94B71B2165DDED23F012FAB
7FFBF383AA77DECBBAC4AB806D40D9A251589C34DD4DA0CE3A7558CD6DEECDEF
79F15747583EEAA30EDF013F8E76E4EDE3086B2FDA0579E9E90918620C436B59
9C67C754CFBC6ED12A1746FA636C5CFB86AC244F6851FD253EAFB4823A5A4A72
85FAB32DD87835804BBF98E0682B03D5D8A1C6614D63FBAAC23B8482FDC349DE
E174068BBAB0E22954A437CE36BAEFC43940DF9A9CE9BA165A4D60FEC5E195A4
F31323D25561E2E5059A46BD09E546202356448D346A679927964D4B96DC0A80
98903D0E5B5A121847083D47D8901E2B939242E236339491C0D39874DB54027A
CBC5BAAF60E644DC4D59708062B567C129C5AA0B73AF9079987CE8B84AD11205
6A360C0274ADB59378318D087055FA03D6874FC0B258E05C3800F10C7A9BD1C1
58FD181FEA67216EAEE22FD4489F9C8AAF917DB0B1A1B2AA0CDDF0C894D7CA7A
0967EC5391A4C49CA8C1DDDD2D3C5EFBE44B46C709D0255B6A4AD980B7CF3E4C
D90A7A3BE8708167A00FB5F144244B9812C2DC11E4D487EB7664050F8F36DC2F
A5A2601DB68AE511A6858B9A0C7ADD48EFF42E2D299DB534204A4757682BB351
E6668034221F641C081F7CD77332527D678BE3BB62F9782835BC751F9D84620F
B3E50A373F79A8DE5FE0B89D4F5F9220F31884BF6E7F2F305C1E6B341A9FDC58
9E568F92F12154A04843AF322154072D8931B0E383CE239DB809017E388282BB
10C8A54D99435CE79B5329CF5514B3DB342B169108F267F1C34349271794C9D6
CF8E12859341F8E9E78E8D1CBC48A1A66D7B88AD553C2F6F2D7170C991108470
384C71964469624850338229550A19503E2A5A40166AB132F2990D8A82D999A7
0D9297F9F0AB5810B8B1FA125DD414778D74B0455E8E2A26E2FE39AB6080CEAC
184700FCDCBA772FF006D68E67C0946EB78AD0BD62158E6BC4CDFEFE88419ABB
439EC9B7A8505E2E0645E294550CA5BE44892787395ED1E6B31135BE62E651BA
8860DB4375185918CF3082585B661DE545B1B1B6EA4E862522A1A96A28BCD70E
4CDD416DB643ED54EB07493E01A74A5099653AA4FD3F76227B912584C4DC2B0D
FC9DC5C37CCEA6914533FB793771D6EF500282DB1703ADDE3736E4DDBD4E2EBA
90FA3A437369171DB267138A5660772D99622AF9356EA4553A51A41D39AA0297
28AAA243B83FD2574AC644895F207E85C44C5FBDD3027BCA924A3D6A1E526AAA
662A666964C91E47F7BCE0D289F26B6DF778990A436467D034F1802D76F38C5D
F9CD21972CC690C8F5549377BFD4325B4AA1B36E9535B5EEA3B7D47B43505139
E6A01C711ADEC463045330732AEBBD4180BEE8CF55F953571D93F6CFEE2DC5ED
B9DFE7882F5F3D52359E986855F55E7F3A8C9112E725B9CBC313D6493F83695A
3F6F41F1842C78D7B49BD06F922C7DCC01DA713286A40281202DA4560918454F
66AB2B99CB0917C39B10D4009FC921A0F49855628620CD3F0963509D0474624A
394030F0745DFCC7101948D77CBE5682865753BE25477F0FA4D26310B543D116
AA235D69514DA194C7D7FFFFC46F2B78F9FA5D38F90574258484DFC822B75CE8
75C4F6CB5B98A7A38F120ECB627E8F341C202A07F6B97D7C09E8C617B4280BB6
20BBCEEF177412638E12D2773375A48257556925957AFF181CEEE5C923AE6EDF
E0C763BF65D05325F2C96EBE6E793C376B8058834C890EDFC600172ACD975C41
82231E6BF14ACAC0C6D23ADDC0217D89260512D7182A541F25F838A12FBB92F9
BA5C9D69D7023CAE6006E2B9E6A026269E4640283213DA1B9416E4AC5D1F6ABB
BEC1FE06A26A76A2DF444E644F1A245BAE3FDE54CABB0C7927683483634A91C8
461295B16AB3C5275415ED8CF5D2BA82D08B4A38549099D2F8517926F0B8233E
53E7F379E8837FB09E61C37D42AFD7AE0F86FC190254FD191FDED439477BA5D0
C973A68BD3F1831F5FE1F8C6960E35D4332977612251FE964A6A58BDC07E70A1
A149002F32E9DD24AA50A1776F340DB64621132A21AC465BBDE292A1021E006B
F89611C02A5F22044E68E478FF3BCF6821AD6BF428A24779DBAA2B706DAFEFA6
02C06F55BDC8EEEBCB40FA2FE32AB122EF1832C7CC9B1941C9EB618832B2E027
05BD45DF8938C9E8C8F91664677B51349E19E2A78DBCCD5EB109EAD90B5B34BB
B55ADEF54891DA453DEC79266918612C629E5192F3D8DD4D013CC914BE5543E2
C333BA5F77E33CEDDB6667303D7A0AC928C819407B5D7E80AD8A12B361505CC4
370FED59686DF9FB7BAEFF9F8E0F34EED5D6D2B01E3530CF5E2E512E161EC412
17E6820C781F941DFBBEB5E794B93C7ED3811B5E845D49FE47AFD2F7BB7C435C
21B2CD48A59AAF18E78020F9A09639886CBAFB38374251D2193B8BA43BC9509B
EC6F67D9AFAECAECAA5B23933FA86DFE96701487505EF23407CB3BD5A6A6E65B
F42CA6B58C488BC0F98CF2F4F52830ED153E0A79C1DA2B8BAEA7E543398AAFB9
BEB6F80DA8C4BDAD77341B8CDCBC845A1FFC8A182F741B6E87D27826651C816D
974A568E11E0CCDD5A8FA5A613BFF00C118A0C896BC73558B7561C4515030453
C9FCE0FA25E04D8C999A2C7C51741C70A13DF9B605010D7E60F19708D5922548
5903BD476C2B7FCC36D5ABF3FB5F25C1A3DD7159E46B0592ED44D1970E356FD7
B8DF3EA6D6F93A37184FDBAF8312C65CB81245A2EB4A55462645B2E6BD249A9A
9D0E0F2546F3659B5617F0DBD0FFB13D77AC9FCC2A0D482E5B31A47546BFDB04
C84B7DA1BA7344FC0426D51AF588DF70C54CFEE12A5A1E733A79B1D538C54A68
89ABE30723CD4112AC210DE4937E71769284A69E15A3A84F62F6E4A3007B9EF1
C1E81354958A0481D68F681F1E09CF12BBEEA93A5651AF9C9C2B334A69172F91
8E332C5E96C6FCDF8EF7DBB56081EA263991680071BB3F9E7F2985C05F1FE839
CB2A40BE9C4B393E53015C6E356F46FB644CFECB305E3F51E7F276FCEAD7CEAF
650D714C18244A8AAC8E308E1A3C4BFBAD73C95E72947927231FE8F0F642B6E8
83AE63D65580C1D63D06A27F3F163ABB1D1D07CFF898E9B10649946E1A7B2D70
05FFA6AA8B8011E3B5E40E6DD7CBB042BD5FF537F9D1B4BEBEF277AA7CA2036A
221820B32D4882768A70D8A49F6455C11137A460EE6A2CD11400E3A760875C16
FB8AC9B1CE1E5FE2C9F0B2A76CA8F02478D2C4EA22A14BC966F63988BBC0974F
F24303390A2AF8573D88064CD759FC215FFEAF07531586A03BB116373C1AD872
77AF5DAE105B4C17764FB0FC28646D7C8228FF6C126B5FEF1462266248A5D6C1
FBCAFA2AEA1445A886F8714810BAD1C537639FFB54FAD076223A1048E6D31809
B2FA38445D68A7E11D43BAB466CFA44718050568F50B01DAF073A623C0FB98EF
A0B663A0E19ED041B596A3B020F4DA23F83F274E5D8B4EBA2EFDFC3390145C38
FC0E3BE1EB507EB2A17490A0F70F5DDAA6EE869ED34233E5C54AC2B3AADCC7CD
4A3B6D0B3AFBF83ACD7D2D2F217371A8F871F3237EA4D82209B94122A51AA2DA
FE368C7718951BB0ACEA831D8A834AE0B6D4D56E2439A5B7A1491DCD49B9A6E4
7AD6586F4369B0E5065A4FD1070246199686FA4BECDC9B2085F478BFDA2CF958
D09D3991AFBF2716DE3A87E6A79AFF0E221B9E3B5B433D2A3DAC80C854A4CCCA
F4EAFC9BA524FF58BC707256895DFEBBA46DFCB5CBBC227A225B0FF4FC228721
E81C3AB8F69C98E112476649A4CAE91403C0EF5FA9A16CC05AFC6AA5DC6F6915
C2137A52949C8608BC507070642B29950493C24D353198B3186A46C0C79D45D1
CB7D3FE32BBA8D74FF4E9593B57EF25CD071D43964F331D4768C51ECD3925B84
C0350F9A846452837C9C05C4D56829242CF6EFE611F2E95FDB615CBE1A23C15C
40B00FB6CDA18A491B22F7370C3F6030D65985EEA6D6E3A88487AB3C93DEEAB3
1E8CD5D93985063F17B0F5FE126DF04698FCF7966B46949F41027028A4C08B25
165D4434C3F5B701CB796CD95898644ACA957B0C846F5B057E359380B105DD69
E5D40EDE624E71E1D6885DECABEFB440F3C85A304219CEE2DD1384BE3A4563F7
B9BCF822E46954FEB69FF9AAFC1BB8794D2FF77D6DB589827E12506CAA3BE622
1F51C50F4DFD6406D93E8CDF0DD7389F1A5F4B40BC4D471B2C78E728C44CF7F2
85C70CB30D9A3C875A2650BC0346049D5ACCCD7928F359C57CEA79E06469D957
15763654D44FEF5CF0940E97B4CCF474B9D58F37D5BFDB8375E7FC30F59FD9E0
DC9ADD0319D440971AECE20413F0AC5AC9066F7DDE0E65C709EC52950C1FC7D8
4B8FD0D409B0850C63D2A921F68EFAD80988542726CBA0718A7F16A529EEDC2D
5189C2D469E7587D7B2D76A541C936C74417FFCBEE4CA91EC4EBA45D59079B44
EFFFCE340D7CCB2A1455F83EC68F0990BB535E2BE4170B963D8B7B6C79137CDB
A39A08893D028FFD927E9DA74BCEB648D89F1343880F0A38B7FA1D260862C924
62FCC106335CD5E2B69F1EAFCB426C46B8F2743E238AE8AD4D11DE6342C236BD
C22D50DB1275CD22668F734586FB2ED95FDD01483B053C92C3742E28B2A90DF6
68F97C52B76311F9F25AE2B525999FCCF1605569B160A7E86AF3CCBF8EA1692E
CBD428391BC3339CC615E296B4FDBDF3566B9B506DB821621EE976EFE248ED4D
B14DB350130E5E88FE608186A07200C97FE238D125A3B5E8EC9698425224E57D
DE140470758854007AFD00EBEF8A3253286DCDDAA35AE71E02A20D0389C56875
F8570F4FC3545DF05A39AB6FB33A212DDDD5DC1098DD9C495A7F97EED7C3FD0D
8E44FA717517882714A481788859147B7737636B35DE0DAA5F009C32F60265BD
79CFDDED3FC1263B4F1DD59A5341A1733364FE5206B7A4F6C4B12AF1ABF51DF9
CC4BA10EAE804A929983B5D5E61B5B11F50295A2EB8ADA180302F89E66DE50FA
055607BF34284057C06E39AAFEB0877A4AA077738B35D30789952C344588F267
2170E4206200A0DA1AF94AF48E11C1136E3D1CF809CD6493A6BA6B8D0FD10A23
3244C534B663F6AF280072EC3EA39845639901C82F6B1B482471C2C47A768ABC
FA3E2FB2591C9567C59CA93572686337F20A29D2699516C6FC3DF6681A47C555
E5F7F8D62819B6326A7636E8701659ACE661B4479D4803C92C34CD5D034B00B0
0A0B2FD56A182399B5C2D362E2DC0E302A4616E80B69770D9B68294B991B2CC6
B30869B647D1F6D668DF0B9960D099EA19FDBD8F83D587015867438A6D46A6C4
696F87097F49FFC1D289855430B68BE80395983EA41B10FB770A08E7FAA666D4
4B1253E482377B106B9CB3E7543AD0C7DCE050039C98DA39D9CC82E7583AF28B
DA5B0C27B24D6C72E597BFB14FE70DC53FC6477687FAC1604305F790834280D2
3AB93561E87F656B4CCF7D678AD96CF7A621DFB2EB5440615476506EBBE1B959
DD9E2FCD17131F73A0DFC6E480E3700E817311708244A3E2BF399A61C232489F
3552EBA3F4D6EAA8E225A04673E27B8CE6808C403CE8941ADA9208A047BD8FDF
1388B9F8F03CE743D61020336CD857DA0F299B38BB474E035FBD3AE4F656E6C1
507ED92B36E279B658020A9D4622724FFFE50699183A8889219263F463C60B63
8F1B2CFAAB91ACAD6B403D1F81A24A0AA45066E0FA7F1A85B8EB3F71FFB24A7E
6F60365DE01ADD79213D6FADA52694FCB0BB5C3C27B4122A837970CC8248F7FA
8ED9AC42941F5827D80FEB8C8E9BF3DD7DF727D1C0232E7EBBE65B19ADDFADA1
C5A4785B6EDCDBCD5E35920071F52CEA83F587CF6A49576C41885E06A4F947C4
30FDA2C9211D7DD017CD921C54706ED149C2A9727F9574EF43CA619E898005FC
3691E1E1A6FB534EBB8F2FFCDCCC98AF2CD5B5B4698F36E7EACC40F3281A3140
C6F6A30A77E39486F2941E37AB1C670A865AA43B6E9F6C7B1DD5AA5B1562565B
256C71EFFFA70D9C3C0087C09DB3014FB495B86FE074B09195EBAFB93EA4B682
FDCBC83143D4CDCEDFF7362ED8FB656701B90AB5F1BA0183ADD4E0FA618BAA11
99E192B6A3A33A53B2FD19182F182D1D66D09F115A0CF960DC9ADE0770F9F39E
5B635B3E122E62AA0F8B691BFE298F4470993304DA9314FFA8A4A14B61154AF5
5ED9814755B71FA8F05EA7CE965936B05982957E3FBC3348F16C52C2946AD61B
C2F67F014CD33EE8C0792C44B3DCC0834F166B099E0CB0FFF90125CC7BB83928
E196865D6F73BBED68A9A5E420A297F7BF6CB7E338108689B0996FBCDFCCAAE2
9E33331F032FB5BAE4125E957C7E375577E84DC9A591F6500DB23DF70BA15AB8
21485E3B48D24C4D8903E20BC00DDCBF6D91375C99590E06857919B7F6DD4821
ACC627368843882EE76257E1D80D104F6852BF8B48519E16322F4970ABF256EF
6ECBBAE2453BF94F5942135F98A40424B36F0F8EEF46D6418C2CB4E6C7F7E257
A358053380D87028C24DFC5A47774A4BDBF27FA62332B63B5064294A795AD539
499D2A2A403255647B5B7733B76CFDBDB8D5D6A2AAF2E6F2AACF21559B814B5D
F049987BB6B67DCD3A02BE6511899AEB023356042BF493371D4A9757A1266214
9262E3C06C2A9DA92AD134E0E0E8E3C895DCDF7DA90A6D9AB0C693FD0DE63141
FB0A38D0F3F44204A4214E92A76D726B38B075CB21C2B1FCDF48C5FD41CCB9BE
1C87097EB137865624E20E0ABEFE580BD7A2EED309B07C65D05DBB25BAEE462B
D7E974313AFD6CE729AA0177BBF83F7C1CC7DBC6309BC287831918176B140E39
88A8A3A338484297158FD42B059B548CC92C54B6C73089E6480F7C0CEB2D8AB6
08F1AE2EC4101425393BB0420F3039A4D96A7083BF7A4A00FA83E9021922072F
29F99A7DFA2B5889F338D8E980191B2E3CB839D2DF198D69EEF3B957B312903D
CC2DA59BE5F2D4F9079728350A875C5F8E38675D8479F3D5FAE6026C6769B4A1
6BCFDB4C628EA6432268C1EF6D5ABB5D90CAADD25717F8AA0A2464A31B86869D
DC9B8BFC615FA0287D27A7CA1653266FCC73B31A06F1F3B15E68E7D5A0DD916F
DDC53FD271DA07AB283C1991F00D623506BF2DFBD69A1F2ECD58C2271D9286EB
626F515B5676FBFC78EFF0C7EC46FF95B8EB92F3647EE1DB38DBCB7416F9BF81
9E43ACB92EED40782B52BFCA1D438AFE285F6A70BDE56899F0D9E7461AEFB58F
B12BEDA1874FDC154D95639E167658A645AD10A64478BEF6F156AA2DCD6254C0
BD1C06A4F41787B5E8534099C052701607B4B71917FA9A9123BF0A6A749DF606
AA2EED16F2E322EFC7A6A55E41B7845B0177DA1A08E926E2162347941609565F
A83F5816D8D58934A9A2D4C2EB6A93A9B2BB71C13B381C854474CDED2266DCFD
AE624F06A97855E2A163665361C82F3B76D148134764D835234DDBDEECE0270E
0BA9CC91524E0A72A52BBE074DE01840D2D5C3EE5797F84E29858A2C7D5E90FA
0463EA91C8BD3150D158F63BF2BC86341D988742680396B0F4EBB50EFF2C9428
FB6B65E5395CB47F78093D6E8DE19F1304115AE8637BF9FC5B0EF45D79F41ABA
FA3C0B8939783C427D7EF06886033E9BF390385D35A80467F573A11C9219D9F8
DB77EA1E7558084D96197222AB0D985CFBB241C05631D76C63FDA32BDCF7214D
17980372077515E633E7F08DA00C37A6A0C85FB9CB484737D5698F2C34DA0BD2
9468A8A6FF1282AEE017F05D005266EF85CCBB632E99BC95774AE08CD4A34E3A
096570F45DC19DB18ACD6974201768C17F616D8ADBB2B444034CC7AA6FCE5F9D
6B5FEB06236B0615FC6DD713E12FC74CB146F7A253E0B59B3461EB63BA94A913
F764FC185E79BC563369777FDB7404E2B7F966774297969F403F6D268F9AEF35
D340409774E9AC86A413A06B508EF39FF75D489495BB0E37E5599563F3E8BF8E
E91647EAF4B8B9A644871B59E209C02012562E18254206AC8CFC4E772C95CFAA
19D4A7A3FABD4549EAAA8F2950BD160467AC18DD3163FA87CF000194BBA6AD33
40DB25D8312FC350ED5610F0AA12380A38F32956E7B91BEC38CE365CE71AD00D
64A3D07B0B5FD7898F405B78486C7E054B4AAA33A4594DAD16E88B52157E65F0
3B2056B7D6232E0B9E0B44DC559B9DE4197967F78DA9ACA460D7718DAF1B36DA
E1190E1283E56FF071D1F7580DDB9D72261CC8B165CDBF302CDEF183A23F15A4
903C6BA28DF51EC0600961CE39BC86B1DD8CCA6E5A069845B195DBEA6BB1042F
56F07CCFC636E6487B762EB0A11489FCF999C27C0733517285235B35B661052D
D0BE6C4243851C2E0D6E20C6E263A86358ABA52DE352C45C8F6CCD184B9220DE
5E87DD9190DC699B54EE92FB7A1B829E812DEF92F4C1111F98B54B0714672C9C
A7359E442903C53CE3C262C28855941C7698455969E0DB40A1618CCC2205936B
306515A10B360DA30798635FB9100BFA9161A0EAECDA9595619DE97112CD7F2E
8F3BCD5E7AF9BA004CD648F954F0A7C377BE017F187D254F1A10E4B3C6D180B0
5FBE4A794C2CC351FC8A90C07CA3AEBDB196B52D20501622547EC655FE975D50
533619EBDF535297FCD349F2D67E32325792C9192CCB799A780F82AC20D94F08
2DC379D19ADBFED28DB76F9D3804A923EE4E21F0A5B8160569DB565CDBD610A5
2937842DCCFC9E0073F8DCB56512DFB3147ECEBEFF3479F1494661C44C4E7EB6
D9A2E6ECDD797EEFDD5B2DBE62F6D492030B26BEC63B8629797625F86CB35020
4EA9E7B607078D9D31C81BEAE0B25F7D209849090DF57A7B6063A57DF411A058
EE448B892B08EF4848405A306D99B1635AE4C5EC4218C407068CEE13E43E6AB0
CC0126B5C238C3CC3308B509D279DB980FF9DE817CBA0069C12AC73CF97CA495
BE0CCD2C4F438F0D44225B0718FE29728BF7DFD075E78F266D0C2DCA5157AD7E
4E131EDF31B5C3D64FEE0A8202808120A6E95DFB8052AB9039F18DF9D23969BC
0EB40E2FDD840AAC7CED35850FFD2F7E4AD5B3EC3918993CC973E75741508849
48C1C619F75DC9EE84E1E6491149964640EA30051BE53681ED068138A98DC84B
AE1DF6AFA9621E8C95570258339A90CDCA520938E2C2AE1249D5E987B89CA3C8
10161BE703D38FE4BF182511DC318F60B70AFB31014C9B833DDA693CA5F5082A
1859EA7B5267B21251EF55791579C34D6E9FE7B2BF5938281B814D9E957DE219
B8937B1E1FB481D7E78C6493A61C472B1E3AF64EBC75D79D2BC20B671F8AA617
CEA8CD982F1F26CD803611B0D9CDCFCED19378298E9B3F368374A8DE9E108B29
78C1C49356D2B21B87948F3A1A9FC49CEB92E7283F8CB6B6B21075E3BA680420
57030CA9AE301F81E0FC9EE3A8F598FED46CC0BE1959B461F31D7C07A12F72F6
E23C208D33AEA781DFB8B5042096E863792E1843FE02629740A76D75BD9D81E6
6EE45FBDAC6BFEF0B19816822200892A6A160C59A29BE6F39DA97D73FF74EBD8
B95D3538E9DA713BEC74714A03B0B9BCA24D7399F100BDC304161FDD719803AF
5A26A6C12DC90D303FC1F7C12DC0B6C49C658972F4F7D929B7E6395BB51B2AA5
40E3E494674FE0D9EBA897A26C757AC6EC2B33204CC2487F1703A8E2E8A40DEC
FD6881D172C828913868367503E587A875C605B2B87D382493BA153E3CC4C7AA
273F5000EF5113BC9292335C727DC1CF0E0E4DB31695E2D9896A3FA24C2D728F
DEC9925BE2AC9DCEB49AFCAA7F3B64370393A665CB20105ADC99F1B669A8098F
AF50F98DAFEE9A3709B91503FDD9DC951E795B0A341F78BE6EB8D69EB7B57A56
D9684A34E25DB94411D0EC4F815E78ABFE810A2431D7B2EF141CD90D48772004
AE2F263931DAF40980296959F4850010F37A4FC4BFFD218FFCD0348A12C2C0F7
7EF927B9B1F56BE72B7E5AADC3C0D47FE5B5845EA9CE07041BCB4FCB813C4A2D
D306B515D7BF483E5D33F7977D1072946C80EDCEEBE13580343F964968A39BE8
B5A06D5A2A25D2D201ABA77CBBD36475CF1F85B49EE148A3807016B2C179212B
0C6D8E50E9864F8AE10B3D8F7639C73D59A012585566B410DECE4120E35F7010
A9270A2B40C1866A73B23C8AE81142BA259AD4C3DEAB89397C38405FDCD1E99B
E7B2A3540CAC8C079D6747ACA65500BDA9E971FC899B2988631337429552CBE6
FA1EC50090FDFBE527ABDB432ED02A460CFD6C2E02BE083A6C5B1AF5CC87CCB9
231DAD24EAC8F87E6E8647D61D20AAB57C6E27D5A17D8564D3312A9404AA60C6
4F99A7B032B54B8A435E5C33E6FCD8A19EB659ECAA0D8061A6FFBE04F0115F78
2FB075E3160584A8EF978219B0604B31F9765573A049F802FECA78DF8AE58646
4AC02F20D2CCAD064F5A2C4EEED13EE7CD845213C2952D82F4E7A636B1835663
447B786F753304CD778AB0A52AF0463277BB15DC699A20A3F45BA335E4FEC23F
59D25360D8D48C310C4E7AE60CBC71875B276366D9ECA85E3BE94908EA1D8F4A
FF3A9DBEEC967ACF2B5221C3DFAD267DF22D1BD771AF1C8BCC921F0EF650439F
45F235CA6447D738C08443F00C2DB7F58B57290FE9B66C04AB1CA0C215C390BB
168CCB0F80143DE413E3C6CE22D81D22115D477891F216B5A9E8B54FD5ACA09C
67A8E3F56F20C68B10862AB50BFDCF57C79EB24980FCF8F2DA35DF40F732E90C
7D72BC71F4EF211707B2D25C427108DEF8350E1540506C342A349D68679FD63C
51A1CEBCF4456726E65497D8566C4BFAD66082E8A3CF5A2E12888A098A756D67
DC45D80777A3E89B0A613EF59CB3FDF2E2B87DB2A96CE1C450E6619DA4157D6F
5CCC9F5E257170CFB95A9EF32C06B567EE5AD32D5DDFD8D163466B31A1B26699
5D69C30221327589D558431D9E84C346F241D8B640E5688D225986B6D856CD30
0D8F97E6A71CD394F5C9FA9F625D24680B787F0F9FE3B9F29DF1E9C632C70FDB
21FB70095C69D6CFB7C0F4D1105D64DB60D4E89E706F6231FD3ED71610B41412
5490E757F1CD6BE482698FCC053F6D80DEE5608A1EF6A07EA5A560123398A1E7
5D8D91220FC3599EE98988CADFADD13983031C900C2A31B59CFAA53B3B9F449C
52D8B41FED29FC9FE6665AE451F691A804939C5878179959D96A6E2FC483C3D4
F6EE9E3CC2E97679133A2482155883D5DDC6D72D939407D102D8B7A77DEBC8F5
AF54B42EC178B07D9E7480CC67C13346A90A085B5520CC6D2E5F4ED3BDE53AC2
860D62E3FC66573BB409C050626F84B4453DDC9CFB4F67CA0C41AFA5E710B497
49BD85B6E400E3AB6AB02EE0501F1602EF13F5CEDF83DD3B5D42182A414F04F8
948516640E9418F3B9E325B9D3DDE862975C359B119FE9AC12EF0A786B01E957
8123FD5343CAB065497FE9F5EBD20968B700A02A648EBCC0F695492611E2849C
5C970D125FA0F463925E0A318BDB472CE01068FA76E30D830B5B23C223ED513B
0150311EA064D9E783FB1C56F04BD2744088BB1C981FDB29176B1D4D37107100
671FF0A508A0D57BF1AF5FD3DEF76005347D2CAE4F6FD4AEE2D807D3E87EEA63
49964E11893B180661E91A8DDAD190366EBC9A1B77C29F95BB74A1415AB26AE3
1437465B9F4A0EB95ABD2D20C4DEFBEB53F7C88023DE84B88D518DA656371D8A
33FDCF34FC9A1ECF46D13FE24FAC4A6E0332CBF12F2E166AB5FD1DEE2600D403
29057CBA7DC9AE62AE48C896123672D0BF107318D87B8CA9B4910E6C9192903C
4F9A7536F38EF215AF04FC83AD6A710D5D74AD05AD704CBA2CADE1249326F398
9D5135662E8B74CB78A85634EDADD5DED680B7B1EAC5586A886034366F24215D
BB50185E83D4ABB47E3F317BCE393D253BCE02A86107B7974CC27D4DB7F65039
6A0A7E7DA27E8CDF8FEE7903D86132485DA936798091C91F2B61AE4661C2C6E0
71451C075FB8DE771F7FBDE306650BC70563B1AEEE87AFDE0D854B5FAACB1652
6DD98851CE0C699BE01AC2B92AC1E5F72DF3AABDCCE4BE0C1174E9D1C7D81A06
955C08F834F3E33251E8DC557810638DA68DA4CAD81F64FD95ECEDB4E5A6BE8E
D1FCA3FEEE5B540D4294A14D07A9166FB06EE9D0DC01A4C830E96584600F53D3
A157F76C7BEAF64649AA2ABE185E6EE32F161147E1E8B678C316CBD9C62F70B7
EA55025A00A9496BE768D3019E24BB97F3942236D70984461B3AE29244CDE2AA
435EB3A802C6CA83B61CDD72E9C254683F9D81FCB6E4CBF703251C3C692AC490
2D37165B3F62B721CD6B7806142A9E4865A798F867901122F45643F1A7049469
7486217CC688796D16B5363033B83F1631DD099828BA0B881A5A5D52231B8E65
A7ADD151428D23564DB8247424B3B8E1CC861B81624C2F4D2D7208ACB25DF2DC
FEABEA2FA52B5D014C04B6EB5703906446E925449C0E48FF02A502377C3F0CCF
86703B1F9238F854014963843C3C7F093F2A63EFE3CA306E4C3DD515C39BCF69
2F8C00C2359F7ABD7317BFBA6B42689B6A1CD7F823135297234D3AE07F1FDF6A
DB42E910FBB06B7C246D47921A110DE896E8AD730623C0C9769176988E1C21AA
D374E2950BFE10A026B42EA6EA9D9A3C30DD9C2FC283FC55452A89CFA6D994C0
2064E1326B74126A24FC116EB71DEE5198B4E1CBB51168000D3A50F3692B5C7E
2458490980A15245FF0A78C2F4B436E2595893A68E232D3129E2BA7CB4D30D98
E0B4870A7FD44997AAE952048787A64A38BD6FB671AC28106EDDF3DE784CC7F6
528FF901471CB23529565C9B630989BEDF1969285C5E150B2C20350548FA44FB
041EFB4D0585E98398CFE055E16397B99A6FCACAE88D5DD81D083100CAD50276
75B93CDB0ADEE18177FDE253FB3477DD8584E6713C8904F8012D18B37F7696AD
BA09708BB503269C6AE100BD79C7123471176034C81B4A07C57E5E6225450798
78313D7F1891E1F2B2F6FC52193AAC6D86D54894E89B4CAE9897D436A7D30566
6170C7D2CB9B42431D6082708B23E756BB241E352FE8650BA007306C25BA505A
E6CA368179170E0B4A2DB29BB5FF1520D42D1499DC5E73E15D4CC19E6EC2EE92
90A6041A262E86020B00D605CA64D8978EC9D925306BC09AE928F46DFBC866F7
9E680DA81AE7A76D2F0866A0E680053D865BB46CAC839A102686E0CA012FDFC4
4D95260EC341AEECD93851CF3659A0236F34892FB6649FEC0EEA61ECC8C7B029
61F5874A2E1D2DF9863C5470F60532882D5997ED9DD7D6BDC5D7AF8DE2B508F3
29DF122494824C66EAA58F458CD1182F4CD69C804DD1D061C6122A2975E3A2B7
D671E20627984B627E548AF230F5C5C5744777CD74188ED720D78B110241DB69
96F2AED1CABAB715D9CE44F202893B55052D458ED3FCDF80BB629E87C974CA43
DE4DEA00F172230C6C500099C4C30CE8EB22F92C37A97AAA3A7E71422C88937F
068ED5CCF7911D9E5887C91AF401D07FA5EE90EBF5D1B69764CB22700C015156
5A8D1FDAF46A237919908FAC032FF34B41F6F14CCF23A5123BF3F6523A17FFD9
164BDA792A57C72B75F1D43C454CF3582000EE3425857B909F3E587FABFA289E
EEB39E1FEC68462A6C928334916F4DBC186840198F8480B1FA170D77CCB6E3DF
E6A93D6A4DF3C03A8E8FCEA177B99B302E4DFA4854886447B8A871D048CE677F
FEB65746BE5EC2BD8B4C345095248B141E96164A97E88D10A3FBBFA53D562EBD
7539C4A66F5D9F8A78AA2368C1004F0D738F5B421721515388480510E4BCD20B
06A25A2805D1FF0CFC4623E5F9C18B4B907F12A4DF33B5AC139EBB2E5C770662
48FE2386FBD4AC7960ED1AFD81662EDEF2F8CF9FD38B5C9D53EB5970361840AC
25951AF4CCE00A5697798338BCEF05F2E373F4590810AEEF37958710412A44CC
2094DDA91F0E50700BE1AB5A9DBFD6D86E4F21FCDB12848E9F917ACD28888A6B
702837DB338A179846CF80E06E1780AC82FDA8252FFE3570F076577EECC012E3
C4B7F3DD05E41D4B6F2C62329E01ED0D43ECCAC1307C92ACC55162C33E7B91D5
8495AF5EB26169B3FE45AB1A84A75142A7B0F32B6AAB77CEB04C4D9835464FBC
11CA6455848A82040FF040B99B4DE91BBBC250B827392625B8EA9FC7E72FD0D2
CC605720A672138EB57A6DFBACA4763F0E0496983E8878B05F9387EAE3AD4177
E273A98FBD835AB3F5B9042749A28B0D3BA1F964EF38A88CAA44B5FDB2AF6A82
A288C3B4CCB09DD28A95F9A6D8EEF08C1380A66B1FE693BE9EAF249BA733FF34
6C2E59403D2F27EF1D4E4A74C32EA83130C319B6433A42F13E9DADE66B20A26B
6BC121EB9CD7F73E209F0874C16BE1092364D74B022BFF1AA65086B8E7378546
386B48E871443D57825BD582783F6EE7296C96327BF18D8A8FFB699DFDCE0CB8
9D12E5E14A6CD5777388ED655CDC15BEE841DA21228D43BE8F7FFC5A0AE6FC48
13FF1BD5C29411E25C9C5911A2F85BED08D215CBA4CA9D6329D24D6E944DAAB3
19F9EC4324D40EE4E1BA49B7B77AAE118891DD19DF9D88EC2A84F86E1CF6D87E
BE7ACEF59690D1B264004FF9909ACEB5944A4492E3DB3568C88C8C5A654F9A55
A862346D4289114EB43B008E4A0B6C64E2C097ECD0C4109B2F5C62E27329DBFA
481FE63F8440EADBCD063E087BBB42A4A329811A800AC5E0D38E074FDFFDF2A8
D4EEE1ACFD0397885D5BC6E08D3AF8393FA6C1474EA9B518FD385331A8D752C0
71B0F4E05E43923FBD25A68D28DB99D337281B41627137CA4AF2457E61A6B057
38D13DF3314933B3774AC4F261A427157235E1CA0D1BC75E536904763E232489
5E0028A43CD00FB4818F2FAE0FE8DF608AF9117C5235C9E375E1B42FA117BE13
4B927417BEF467CCBC2637554FB2024962A73ED514E1DDF502EAC6AD097BCD72
E95F2C26F08E39D0D59C72360C3C080F1146E42C89382878B4B37F07F4A8936E
7DA0B496DB4D9B6D8450826DD117E5E0FC0404EA6022A72E47C3171EF1A7969A
8687AF2ABFC02EC9179535E05D7F207A2C4C09399ECB3F6D45BAC9F0BF4F9BAD
BDA5A12E02DD6B633A8A3CEFD9EF1DAFBEB44C921DB99CE64F3CA1E2378DFD31
C4392A4FE777B1AAF8651C643368DC42C73B4CFC3831E57CA82EC4490CA2F73A
65031DE333A65F9EE04F05B51CADEF088D6ABCC1702A314B09627A5BA9A994B5
19D21B5228386B68488718CCB6EC99B16DF54F5FF2146E461233A1A3CA56A6C6
C4ED949581963C2D3D5A4EEE86935866B3CA4C262481F1A67C151E0616CFEF29
1305961273CE02850642EA0E1CA4D123C0842671C5F0044312EB373B54B5E4AC
FC09FC88C61F613F7174D9F2BB7556736A231151F8873E7A8878D77DA4815F27
1BB3C2228C08E557CDF5C765CF188F7D76C8325099F8885B3AFBA2A0E2F2D2CB
FFC8703C180E69E8212A669A4CE22FC97737C60F749BD122AE45513896340C1C
1B4E6510CB7E42F1D2C8B7C3136FE4D321F6BD76833F36DF1C3AC26A86CE61AC
8B7A9DC4EEFE6B2346527673F7A34F7CB7CF17F380A4F5A84E7963EC742D90C9
E8D3225EE05557B3021EF2D88084AE72A784003C545EA51C39A764FF119B54DE
8BE19A41B5BC61924BA500D64751652F6EF1F7F2BAEA31D245EDCC47AEDCB7D6
4D8797B76BA92BC408BE8B0C19C3858AED7965AE6530796293C5BE35604B05C0
B984A9605873BE308D1BCE111E51BC8F38C2DDF68CE7A6142479730C87E30C8F
FED44FF803D69DE081BF9C983F8F944A25139BAF9CDDD375B86CAAEEBCDC002A
31835D591D148A04947405656C2D532E1EBB4DA77C354E53C4E09A8AD16455FB
42EFB23563F8D74C3B37C3008008FB4688DB1FDFD9C193650C7A0E8BCA5C114F
54B086E1EA41D16A67487DEBDBC93EF0DCCDFF82D3E60B0C69B67DD35DD042A2
1C1C58D7BFE87CB7B792F584FC18835FEE7912CB8B88830C655E8C2F5346C510
C390A7F7D31AA35E967483ECF0FFB89306D1B5EAAF26746710E486E26F19A843
E6192C5A0958C5B1A9018A02A18B183D861D18B637DEA8B5108332962420A310
E49CA5F126C2C7A7605499858FE0C4F83BF6D3034825D27CA85C5EE5A7541CA5
0ABB9C059B4EDC822A16CE6F07BBA4FE2133D7FBD1ADB71B6E9659E49A7E422B
476022FBE9E10C4F0B607677F7A256697F2746C697243CA5A8751157703651E1
71458843F61132D4C23D84CBB8E3CC174DFE47E72410296E35E9AF9366B6EEC1
C01E3C7AD01F75E201960AEDC99C00FD0979F23F44746DFFC2D0C75512F2A6D9
4A01E71EFC3B225FA2CCB93DD737E299B6C15FDE85EBAF01F0DDABA0BA75877B
094856FE6BABAC485241DD2B12E033FDB421D204B391075C9FEACFEDEC56E055
97E2847C0D50696F8CF54D89B8119A15D8EE734F9E793A9C22D60CBB1B4C13D0
0F3F8EA81CD25AC184B0213A117ED15D9CF3A1B84919DA47E9103302122E92DF
CD93AF2FCD863F9115338B6FB4BF9C2F43C125C6DAF34E6B6A6F505D459BC9E1
D815F009DEBB85115D29537ADDF839488334307020B5DA917C5B88835DF2623F
7A992016F939BE0FD3358595CFEE7DF426EC047CC2344A43809D8FD258DC0AF0
907C6914612C6C81C86000CAFA9EDB4F221A9993EA11681CF4DD167B715D60C2
4BE737BD5ABE30D28E4BB499ADFC01516495
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (mywriteup.dvi)
@start /Fa 134[44 44 44 44 44 44 44 44 44 44 44 44 44
44 44 44 44 44 44 44 44 44 44 44 44 1[44 4[44 1[44 44
44 2[44 2[44 4[44 1[44 2[44 1[44 44 1[44 1[44 1[44 2[44
44 44 44 44 44 44 44 44 44 44 44 44 44 45[{}54 83.022
/CMTT10 rf /Fb 137[71 75 52 53 55 1[75 67 75 1[37 71
1[37 75 67 41 61 75 60 1[65 13[75 100 1[92 101 5[50 1[106
1[88 2[96 14[67 67 67 1[67 47[{}30 119.552 /CMBX12 rf
/Fc 192[45 63[{}1 83.022 /CMBX10 rf /Fd 135[39 55 38
45 28 1[35 1[42 42 47 68 21 2[25 3[38 21[64 2[52 64 6[63
9[25 58[{}18 83.022 /CMTI10 rf /Fe 135[70 2[73 51 1[51
1[73 66 73 111 36 2[36 2[40 58 3[66 9[137 16[86 90 69[{}16
143.462 /CMR17 rf /Ff 133[37 44 44 60 44 46 32 33 33
44 46 42 46 69 23 44 25 23 46 42 25 37 46 37 46 42 3[23
42 23 2[62 85 62 62 60 46 61 65 57 65 62 76 52 65 43
30 62 65 54 57 63 60 59 62 1[39 4[23 42 42 42 42 42 42
42 42 42 42 42 23 28 23 65 1[32 32 23 1[69 2[42 20[46
46 48 11[{}78 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 411 Final Exam) /Subject (CS 411 Final Exam) /Creator (LaTeX with hyperref package) /Author (David Merrick) /Keywords (cs411 ``operating systems'') /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray Black 0 TeXcolorgray -300 -360
a
SDict begin [ /Count -0 /Dest (section.1) cvn /Title (Process Scheduling) /OUT pdfmark end
 -300 -360 a -300 -360 a
SDict begin [ /Count -0 /Dest (section.2) cvn /Title (Block I/O Scheduling) /OUT pdfmark end
 -300 -360 a -300 -360 a
SDict begin [ /Count -0 /Dest (section.3) cvn /Title (Group Evaluation) /OUT pdfmark end
 -300
-360 a -300 -360 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 -300 -360 a -300 -360 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 -300 -360
a -300 -360 a
SDict begin H.S end
 -300 -360 a -300 -360 a
SDict begin 12 H.A end
 -300 -360 a -300
-360 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 -300 -360 a 83 x Ff(Da)n(vid)27 b(Merric)n(k)-300
-57 y(CS)h(411)-300 162 y(4)f(June,)h(2013)p 0 TeXcolorgray
0 TeXcolorgray 1256 489 a Fe(W)-11 b(riteup)44 b(for)e(Final)h(Exam)
-134 792 y Ff(The)33 b(Android)h(op)r(erating)e(system)h(is)g(built)h
(on)g(top)f(of)g(a)g(Lin)n(ux)g(foundation.)54 b(W)-7
b(e)34 b(ha)n(v)n(e)e(sp)r(en)n(t)i(the)g(semester)e(studying)i
(in-depth)-300 892 y(the)28 b(w)n(a)n(ys)d(in)i(whic)n(h)h(the)f(Lin)n
(ux)g(k)n(ernel)f(sc)n(hedules)h(pro)r(cesses,)e(sc)n(hedules)i(I/O,)f
(handles)h(memory)f(allo)r(cation,)h(encryption,)f(and)h(ho)n(w)g(the)
-300 991 y(k)n(ernel)e(in)n(teracts)f(with)j(devices)e(through)g(driv)n
(ers.)34 b(I)26 b(will)g(b)r(e)g(comparing)e(and)h(con)n(trasting)f
(the)i(implemen)n(tation)g(w)n(e)f(used)h(for)f(class)g(with)-300
1091 y(the)j(Android)f(op)r(erating)g(system)g(in)h(terms)f(of)h(pro)r
(cess)e(sc)n(heduling)h(and)h(I/O)f(sc)n(heduling.)-300
1311 y Fd(Overview:)-134 1530 y Ff(The)35 b(Android)f(k)n(ernel)f(is)i
(a)f(mo)r(di\014ed)h(v)n(ersion)e(of)h(Lin)n(ux.)57 b(Ov)n(er)33
b(the)i(course)e(of)i(dev)n(elopmen)n(t,)g(some)f(c)n(hanges)f(w)n(ere)
h(made.)57 b(The)-300 1630 y(n)n(um)n(b)r(er)26 b(of)f(c)n(hanges)g(is)
g(relativ)n(ely)g(small,)h(ho)n(w)n(ev)n(er.)34 b(There)25
b(ha)n(v)n(e)g(b)r(een)h(appro)n(ximately)e(250)h(patc)n(hes)g(that)h
(tak)n(e)f(up)h(ab)r(out)g(3)f(megab)n(ytes)-300 1729
y(of)h(di\013erences,)g(comprising)f(25,000)f(lines)i(of)g(co)r(de.)36
b(Some)26 b(of)g(this)h(co)r(de)f(is)g(used)g(to)g(implemen)n(t)g(a)g
(\015ash)g(\014lesystem,)g(and)g(some)g(of)g(it)g(is)g(to)-300
1829 y(patc)n(h)31 b(the)g(net)n(w)n(ork)e(securit)n(y)h([)p
Fc(?)p Ff(].)47 b(Android)31 b(is)f(based)h(on)f(Lin)n(ux)h(2.6.32.)44
b(It)32 b(has)e(some)g(p)r(o)n(w)n(er-sa)n(ving)e(features)i(built)i
(in)f(and)f(excludes)-300 1929 y(man)n(y)23 b(libraries,)h(shells,)g
(editors,)g(and)g(programming)d(framew)n(orks)h(that)i(ship)g(with)h
(most)e(distributions)h(of)g(Lin)n(ux.)35 b(On)24 b(top)g(of)g(the)g(k)
n(ernel)-300 2028 y(runs)32 b(Dalvik,)h(whic)n(h)f(comprises)f(the)h
(Ja)n(v)-5 b(a)31 b(virtual)h(mac)n(hine)f(and)h(man)n(y)g(basic)f(run)
n(time)h(essen)n(tials.)50 b(Most)31 b(Android)h(apps)g(run)g(inside)
-300 2128 y(this)c(VM)g([)p Fc(?)p Ff(].)-134 2348 y(The)35
b(ma)5 b(jorit)n(y)33 b(of)i(c)n(hanges)e(that)j(distinguish)e(Android)
h(from)f(other)h(v)n(ersions)e(of)h(Lin)n(ux)h(w)n(ere)f(not)h(made)f
(to)h(the)g(k)n(ernel,)h(but)f(to)-300 2447 y(user-space.)40
b(Android)29 b(is)h(essen)n(tially)e(a)h(soft)n(w)n(are)f(stac)n(k)g
(built)i(on)f(top)g(of)h(Lin)n(ux.)42 b(The)29 b(c)n(hanges)f(made)h
(to)g(the)h(k)n(ernel)e(consisted)h(mainly)-300 2547
y(of)e(a)h(\014le-based)e(shared)h(memory)f(system,)i(Binder)f(\(an)g
(in)n(ter-pro)r(cess)f(comm)n(unication)h(system\),)g(logger)f(\(a)h(k)
n(ernel)g(logging)f(mec)n(hanism)-300 2646 y(optimized)31
b(for)f(writes\),)i(P)n(aranoid)c(Net)n(w)n(orking)h(\(used)i(to)g
(restrict)f(net)n(w)n(ork)g(I/O)g(to)g(certain)g(pro)r(cesses\),)h(a)f
(driv)n(er)g(for)g(mapping)h(large)-300 2746 y(c)n(h)n(unks)g(of)g(ph)n
(ysical)g(memory)g(to)g(user)g(space,)g(Viking)h(Killer)f(\(a)g
(replacemen)n(t)g(Out-Of-Memory)f(pro)r(cess)g(killer)h(to)g(kill)h
(least)f(recen)n(tly)-300 2846 y(used)25 b(applications)g(under)g(lo)n
(w)g(memory)f(conditions\),)i(and)f(w)n(ak)n(elo)r(c)n(ks)e(\(a)j(p)r
(o)n(w)n(er)e(managemen)n(t)g(solution\).)36 b(Nearly)25
b(all)g(of)g(these)g(c)n(hanges)-300 2945 y(w)n(ere)i(implemen)n(ted)h
(as)f(device)g(driv)n(ers,)f(with)i(v)n(ery)f(limited)h(c)n(hanges)e
(to)i(core)e(k)n(ernel)h(co)r(de)g([)p Fc(?)q Ff(].)p
0 TeXcolorgray 1929 5889 a(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray 0 TeXcolorgray -300 -360 a
SDict begin H.S end
 -300
-360 a -300 -360 a
SDict begin 12 H.A end
 -300 -360 a -300 -360 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark end
 -300 -360
a 83 x Fb(1)135 b(Pro)t(cess)45 b(Sc)l(heduling)-300
25 y Fd(Overview:)-134 244 y Ff(A)29 b(sc)n(heduler)g(is)g(the)g(mec)n
(hanism)g(for)f(sharing)g(the)h(CPU)g(b)r(et)n(w)n(een)g(m)n(ultiple)h
(pro)r(cesses)d(in)j(an)e(op)r(erating)g(system.)41 b(A)30
b(p)r(olicy)f(is)g(the)-300 344 y(b)r(eha)n(vior)21 b(of)h(the)h(sc)n
(heduler)f(that)g(determines)g(what)h(pro)r(cess)e(runs)h(when.)35
b(Changes)22 b(in)g(p)r(olicy)h(can)f(result)g(in)g(op)r(erating)g
(systems)f(that)i(are)-300 444 y(optimized)30 b(for)f(sp)r(eci\014c)h
(tasks)f(\(suc)n(h)g(as)g(user)g(resp)r(onsiv)n(eness\).)42
b(Therefore,)29 b(this)h(is)f(a)g(critical)g(asp)r(ect)h(of)f(an)h(op)r
(erating)e(system)i([)p Fc(?)p Ff(]\(pg.)-300 543 y(43\).)-134
763 y(In)24 b(the)g(v)n(ersion)e(of)h(the)h(Lin)n(ux)f(k)n(ernel)g(w)n
(e)g(w)n(ere)f(w)n(orking)g(with,)j(the)f(default)g(sc)n(heduler)e(w)n
(as)h(the)h(Completely)f(F)-7 b(air)23 b(Sc)n(heduler)g(\(CFS\).)-300
863 y(The)37 b(idea)g(b)r(ehind)g(CFS)h(is)e(to)h(mo)r(del)g(sc)n
(heduling)g(as)f(if)h(the)h(system)e(had)h(an)g(ideal)f(pro)r(cessor)f
(that)i(could)g(m)n(ultitask)g(p)r(erfectly)-7 b(.)65
b(In)-300 962 y(this)32 b(kind)f(of)g(system,)i(eac)n(h)d(runnable)h
(pro)r(cess)f(n)i(w)n(ould)f(receiv)n(e)f(1/n)g(of)h(the)h(CPU)f(time.)
49 b(In)31 b(this)h(w)n(a)n(y)-7 b(,)31 b(CFS)h(assigns)e(eac)n(h)g
(pro)r(cess)g(a)-300 1062 y(prop)r(ortion)e(of)g(the)i(CPU.)f(F)-7
b(or)28 b(example,)h(in)g(pre-CFS)g(UNIX)g(systems,)g(if)h(t)n(w)n(o)e
(pro)r(cesses)f(w)n(ere)h(to)h(run,)g(one)g(w)n(ould)f(b)r(e)h(run)g
(righ)n(t)f(after)-300 1161 y(the)c(other)f(and)g(eac)n(h)g(w)n(ould)g
(receiv)n(e)g(100\045)f(of)h(the)h(CPU)g(p)r(o)n(w)n(er.)34
b(In)24 b(CFS,)g(the)g(t)n(w)n(o)f(pro)r(cesses)f(w)n(ould)h(run)g(sim)
n(ultaneously)g(at)g(50\045)g(of)h(the)-300 1261 y(CPU)i(p)r(o)n(w)n
(er.)35 b(CFS)27 b(p)r(erforms)e(this)i(b)n(y)f(running)f(pro)r(cesses)
g(round-robin)g(st)n(yle)g(for)h(v)n(ery)f(small)h(timeslices,)g(so)g
(that)g(in)h(a)f(giv)n(en)f(p)r(erio)r(d)h(of)-300 1361
y(time)i(it)g(will)g(app)r(ear)f(as)g(though)g(man)n(y)g(pro)r(cesses)f
(are)h(running)g(in)h(parallel)e([)p Fc(?)p Ff(]\(pg.)37
b(48-50\).)-134 1580 y(CFS,)28 b(ho)n(w)n(ev)n(er,)e(is)i(not)f(the)i
(only)e(t)n(yp)r(e)h(of)g(sc)n(heduling)f(a)n(v)-5 b(ailable)26
b(in)i(the)h(Lin)n(ux)e(k)n(ernel.)37 b(Real-time)27
b(sc)n(heduling)g(means)h(to)f(sc)n(hedule)-300 1680
y(pro)r(cesses)j(within)i(timing)g(deadlines.)49 b(The)31
b(Lin)n(ux)h(sc)n(heduler)e(pro)n(vides)g(soft)i(real-time)f(b)r(eha)n
(vior,)g(meaning)g(that)h(it)g(tries)f(to)g(sc)n(hedule)-300
1780 y(pro)r(cesses)36 b(within)j(timing)f(deadlines)f(\(but)i(do)r(es)
e(not)h(mak)n(e)f(guaran)n(tees)f(to)i(alw)n(a)n(ys)d(ac)n(hiev)n(e)i
(this\).)68 b(Lin)n(ux)38 b(pro)n(vides)e(t)n(w)n(o)h(real-time)-300
1879 y(sc)n(heduling)c(p)r(olicies,)j(FIF)n(O)e(and)g(round-robin)e([)p
Fc(?)p Ff(]\(pg.)56 b(64\).)g(Both)34 b(round-robin)e(and)i(FIF)n(O)g
(use)g(runqueues,)h(whic)n(h)f(are)f(essen)n(tially)-300
1979 y(queues)24 b(con)n(taining)f(pro)r(cess)g(descriptors)g(for)h
(runnable)f(pro)r(cesses.)35 b(Round-robin)23 b(sc)n(heduling)g(cycles)
h(through)g(pro)r(cesses,)f(running)h(eac)n(h)-300 2079
y(for)h(a)g(pre-sp)r(eci\014ed)g(amoun)n(t)g(of)h(time)g(kno)n(wn)f(as)
g(a)g(timeslice.)36 b(On)25 b(a)h(more)e(tec)n(hnical)i(lev)n(el,)f
(this)h(means)f(placing)g(the)h(pro)r(cess)e(descriptor)-300
2178 y(at)f(the)g(end)g(of)g(the)h(runqueue)e(after)h(its)g(timeslice,)
h(then)g(running)e(all)h(subsequen)n(t)f(tasks)h(un)n(til)g(it)g(reac)n
(hes)f(the)h(end)g(of)g(the)g(queue,)h(at)f(whic)n(h)-300
2278 y(time)k(it)h(will)f(start)f(the)h(cycle)g(again.)35
b(FIF)n(O)27 b(\(First)g(In,)g(First)g(Out\))g(sc)n(heduling)f(runs)g
(eac)n(h)g(FIF)n(O)h(pro)r(cess)f(of)g(the)i(same)e(priorit)n(y)f(un)n
(til)j(it)-300 2377 y(is)f(\014nished,)h(then)f(runs)g(the)g(next)h
(pro)r(cess)e(in)h(the)g(runqueue.)37 b(It)27 b(do)r(es)g(this)g(in)h
(order)e(of)h(when)g(pro)r(cesses)f(w)n(ere)g(placed)g(in)i(the)f
(runqueue.)-300 2477 y(On)g(a)h(tec)n(hnical)f(lev)n(el,)g(FIF)n(O)g
(sc)n(heduling)g(b)r(eha)n(v)n(es)g(almost)g(iden)n(tically)g(to)h
(round-robin)e(sc)n(heduling)h(but)h(with)g(in\014nite)g(timeslices)g
([)p Fc(?)p Ff(].)-134 2697 y(Real-time)34 b(sc)n(heduling)h(dep)r
(ends)g(on)f(prioritizing)g(pro)r(cesses.)56 b(Pro)r(cesses)33
b(with)i(a)f(higher)g(priorit)n(y)f(run)i(b)r(efore)f(pro)r(cesses)f
(with)i(a)-300 2796 y(lo)n(w)n(er)d(priorit)n(y)-7 b(,)33
b(and)g(pro)r(cesses)e(of)i(the)h(same)e(priorit)n(y)g(run)h(one)g
(righ)n(t)f(after)h(the)g(other,)h(round-robin)e(st)n(yle.)53
b(Our)32 b(Lin)n(ux)h(k)n(ernel)f(used)-300 2896 y(t)n(w)n(o)25
b(di\013eren)n(t)h(priorit)n(y)f(ranking)f(systems.)36
b(One)26 b(system)g(rank)n(ed)e(pro)r(cesses)h(based)g(on)h(their)g
(\\nice)f(v)-5 b(alue.")25 b(This)h(v)-5 b(alue)26 b(ranged)f(from)g
(-19)-300 2996 y(to)30 b(20)g(with)h(0)g(as)e(the)i(default.)47
b(A)31 b(larger)d(nice)j(v)-5 b(alue)31 b(corresp)r(onds)d(to)j(a)f(lo)
n(w)n(er)f(priorit)n(y)-7 b(.)45 b(Meaning)30 b(that)h(a)f(pro)r(cess)f
(is)i(b)r(eing)g(\\nice")e(to)-300 3095 y(other)e(higher-priorit)n(y)e
(pro)r(cesses)h(b)n(y)h(yielding)g(con)n(trol)f(of)i(the)g(CPU.)f(The)g
(second)g(priorit)n(y)f(ranking)h(system)g(in)g(Lin)n(ux)h(is)f(the)h
(real-time)-300 3195 y(priorit)n(y)-7 b(.)36 b(These)27
b(n)n(um)n(b)r(ers)g(range)f(from)i(0-99.)35 b(Unlik)n(e)27
b(nice)h(v)-5 b(alues,)27 b(higher)g(priorit)n(y)f(v)-5
b(alues)28 b(corresp)r(ond)e(to)h(higher)g(priorit)n(y)f([)p
Fc(?)p Ff(].)-134 3414 y(Android,)31 b(as)f(men)n(tioned)g(earlier,)g
(is)g(basically)f(a)h(soft)n(w)n(are)f(stac)n(k)g(built)j(on)e(top)g
(of)g(Lin)n(ux)h(with)g(v)n(ery)e(few)h(c)n(hanges)f(to)i(core)e(k)n
(ernel)-300 3514 y(co)r(de.)48 b(It)31 b(uses)g(CFS)h(as)f(its)g
(default)h(pro)r(cess)e(sc)n(heduler.)47 b(Ho)n(w)n(ev)n(er,)31
b(it)g(implemen)n(ts)h(sev)n(eral)d(user-space)h(mo)r(di\014cations)h
(for)g(sc)n(heduling)-300 3614 y(pro)r(cesses)26 b([)p
Fc(?)p Ff(].)-134 3833 y(By)j(default,)i(Android)f(applications)f(run)g
(as)g(pro)r(cesses)f(in)i(a)g(single)f(thread)g(of)h(execution.)43
b(Ev)n(ery)28 b(comp)r(onen)n(t)h(of)h(the)g(application)-300
3933 y(is)k(run)f(in)i(the)f(same)f(pro)r(cess.)55 b(Ho)n(w)n(ev)n(er,)
33 b(di\013eren)n(t)h(comp)r(onen)n(ts)g(of)f(an)h(application)f(can)h
(b)r(e)g(run)g(as)f(separate)f(pro)r(cesses,)i(and)g(extra)-300
4033 y(threads)29 b(for)g(eac)n(h)f(pro)r(cess)h(can)g(b)r(e)g(created)
g(b)n(y)g(the)h(dev)n(elop)r(er's)e(sp)r(eci\014cations.)42
b(This)29 b(is)h(all)f(determined)h(at)f(run)n(time)g(in)h(the)g
(manifest)-300 4132 y(\014le)d(for)f(eac)n(h)f(application.)36
b(Only)26 b(a)g(certain)g(amoun)n(t)g(of)h(memory)e(is)i(able)f(to)g(b)
r(e)h(allo)r(cated)f(for)g(all)g(pro)r(cesses,)f(so)h(the)h(k)n(ernel)e
(ma)n(y)h(decide)-300 4232 y(to)k(put)g(a)g(pro)r(cess)f(to)h(sleep)f
(when)h(memory)g(is)g(required)e(for)i(others.)43 b(The)30
b(k)n(ernel)f(c)n(ho)r(oses)g(whic)n(h)h(applications)f(to)g(put)i(to)f
(sleep)g(based)-300 4331 y(on)25 b(an)g(algorithm)g(that)h(estimates)f
(their)g(relativ)n(e)g(imp)r(ortance)g(to)g(the)h(user.)35
b(A)26 b(pro)r(cess)e(whose)h(activities)h(are)e(visible)h(on)h(the)f
(screen,)h(for)-300 4431 y(example,)h(tak)n(es)e(a)i(higher)f(priorit)n
(y)g(than)g(one)h(whose)f(activities)h(are)e(not)i(visible)g([)p
Fc(?)p Ff(].)37 b(When)27 b(t)n(w)n(o)f(applications)g(ha)n(v)n(e)g
(the)h(same)f(priorit)n(y)-7 b(,)-300 4531 y(the)28 b(pro)r(cess)e
(that)i(has)f(b)r(een)h(at)g(that)g(priorit)n(y)e(longest)h(will)h(b)r
(e)g(killed)f(\014rst)h([)p Fc(?)p Ff(].)-134 4750 y(Android)h(has)g
(separate)g(pro)r(cess)f(groups)g(for)h(bac)n(kground)f(and)h
(foreground)f(pro)r(cesses.)42 b(Android)29 b(uses)g(a)g(n)n(um)n(b)r
(er)h(of)f(priorities)g(so)-300 4850 y(that)24 b(bac)n(kground)e(pro)r
(cesses)g(do)i(not)f(in)n(terrupt)h(foreground)e(ones.)35
b(User)23 b(in)n(terface)g(threads)g(run)h(at)g(default)g(priorit)n(y)
-7 b(.)34 b(Applications)24 b(that)-300 4950 y(are)g(mo)n(v)n(ed)f(to)i
(the)g(bac)n(kground)e(ha)n(v)n(e)g(all)i(their)f(threads)g(forced)g
(in)n(to)h(the)g(bac)n(kground)e(pro)r(cess)g(priorit)n(y)g(group.)35
b(Bac)n(kground)23 b(pro)r(cesses)-300 5049 y(in)28 b(Android)g(are)f
(not)g(allo)n(w)n(ed)g(to)h(tak)n(e)f(up)h(more)f(than)h(10\045)f(of)h
(the)g(CPU)g(time)g(needed)g(b)n(y)g(foreground)e(threads.)37
b(This)28 b(is)f(implemen)n(ted)-300 5149 y(using)h(a)g(Lin)n(ux)g
(feature)g(called)g(cgroups)f([)p Fc(?)q Ff(].)39 b(Cgroups)27
b(w)n(as)g(in)n(v)n(en)n(ted)h(b)n(y)g(engineers)g(at)g(Go)r(ogle.)38
b(It)29 b(is)g(short)e(for)h(\\con)n(trol)f(groups")f(and)-300
5248 y(limits,)i(accoun)n(ts,)f(and)g(isolates)g(resource)e(usage)i(of)
g(pro)r(cess)g(groups)f([)p Fc(?)p Ff(].)-134 5468 y(The)f(goal)f(b)r
(ehind)j(the)e(default)h(Android)f(sc)n(heduling)g(p)r(olicy)g(is)g
(resp)r(onsiv)n(eness)f(to)h(the)g(user.)36 b(Android,)26
b(lik)n(e)e(the)i(Lin)n(ux)f(foundation)-300 5568 y(it)h(is)f(built)g
(on,)h(uses)f(timeslices)g(for)f(sc)n(heduling)h(pro)r(cesses.)34
b(Pro)r(cesses)23 b(can)i(ha)n(v)n(e)f(a)h(dynamic)g(priorit)n(y)e
(from)i(19)f(to)h(-20,)g(v)n(ery)f(lo)n(w)g(to)h(v)n(ery)p
0 TeXcolorgray 1929 5889 a(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray 0 TeXcolorgray 291 x Ff(high,)29
b(resp)r(ectiv)n(ely)-7 b(.)39 b(Higher)28 b(priorit)n(y)f(pro)r
(cesses)h(will)g(get)h(more)f(CPU)g(time)h(when)g(needed.)40
b(A)n(t)29 b(startup,)g(Service)f(pro)r(cesses)f(are)g(run)i(in)-300
-177 y(the)h(bac)n(kground)e(pro)r(cess)h(group)g(unless)h(this)g(has)g
(b)r(een)g(sp)r(eci\014ed)h(otherwise.)43 b(Bac)n(kground)28
b(threads)h(are)g(giv)n(en)g(a)h(priorit)n(y)e(lev)n(el)i(of)g(10)-300
-78 y([)p Fc(?)p Ff(].)-134 142 y(Pro)r(cesses)h(are)h(rank)n(ed)g(in)i
(an)f(imp)r(ortance)g(hierarc)n(h)n(y)e(that)i(consists)g(of)g
(foreground,)g(visible,)i(service,)e(bac)n(kground,)g(and)g(empt)n(y)
-300 242 y(pro)r(cess)j(t)n(yp)r(es,)k(rank)n(ed)c(from)h(highest)h(to)
f(lo)n(w)n(est,)i(resp)r(ectiv)n(ely)-7 b(.)65 b(The)38
b(foreground)e(pro)r(cess)g(t)n(yp)r(e)i(are)e(pro)r(cesses)g(that)i
(are)e(required)-300 341 y(for)c(what)g(the)h(user)f(is)g(curren)n(tly)
f(doing.)51 b(Generally)31 b(only)h(a)g(few)h(of)f(these)h(exist)f(at)g
(once)g(and)g(they)h(are)e(killed)i(only)f(as)f(a)h(last)g(resort.)-300
441 y(The)e(visible)h(pro)r(cess)e(t)n(yp)r(e)h(are)f(pro)r(cesses)g
(that)i(do)f(not)g(ha)n(v)n(e)f(an)n(y)h(foreground)e(comp)r(onen)n(ts)
i(but)h(still)g(can)f(a\013ect)g(what)g(the)h(user)f(sees.)-300
540 y(These)c(are)g(considered)g(v)n(ery)f(imp)r(ortan)n(t)i(and)f
(will)h(not)g(b)r(e)g(killed)g(unless)f(doing)g(so)g(is)h(required)e
(to)i(k)n(eep)f(foreground)f(pro)r(cesses)g(running.)-300
640 y(The)33 b(service)e(pro)r(cess)h(is)h(a)f(t)n(yp)r(e)h(that)g(do)f
(not)h(fall)g(in)n(to)g(the)g(visible)f(or)g(foreground)f(categories.)
50 b(These)33 b(pro)r(cesses)e(pla)n(y)h(m)n(usic)h(in)g(the)-300
740 y(bac)n(kground)f(or)g(do)n(wnload)h(data)g(from)g(the)h(net)n(w)n
(ork,)g(for)f(example.)54 b(The)34 b(k)n(ernel)f(k)n(eeps)f(them)j
(running)e(unless)g(there)h(is)f(not)h(enough)-300 839
y(memory)27 b(to)h(run)f(them)i(along)d(with)j(all)e(foreground)f(and)i
(visible)g(pro)r(cesses.)36 b(The)27 b(bac)n(kground)f(pro)r(cess)h(t)n
(yp)r(e)h(holds)f(activities)h(that)g(are)-300 939 y(not)k(curren)n
(tly)f(visible)h(to)f(the)i(user.)49 b(Killing)31 b(these)h(t)n(yp)r
(es)g(of)g(pro)r(cesses)f(will)h(not)g(ha)n(v)n(e)e(a)i(visible)g
(e\013ect)g(on)g(the)g(user)f(exp)r(erience.)50 b(An)-300
1039 y(empt)n(y)33 b(pro)r(cess)f(do)r(es)g(not)h(hold)g(an)n(y)g
(activ)n(e)f(application)g(comp)r(onen)n(ts.)53 b(These)32
b(pro)r(cesses)g(exist)h(simply)g(for)f(cac)n(hing)g(purp)r(oses)g(so)g
(an)-300 1138 y(application)27 b(comp)r(onen)n(t)g(will)h(run)g(faster)
f(the)h(next)f(time)h(it)g(is)g(used)g([)p Fc(?)p Ff(].)p
0 TeXcolorgray 1929 5889 a(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.4) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray 0 TeXcolorgray -300 -360 a
SDict begin H.S end
 -300
-360 a -300 -360 a
SDict begin 12 H.A end
 -300 -360 a -300 -360 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark end
 -300 -360
a 90 x Fb(2)135 b(Blo)t(c)l(k)45 b(I/O)g(Sc)l(heduling)-300
32 y Fd(Overview:)-134 251 y Ff(Blo)r(c)n(k)24 b(devices)h(are)f(c)n
(haracterized)f(b)n(y)i(random)f(access)g(of)h(\014xed-sized)g(blo)r(c)
n(ks)f(of)h(data.)36 b(The)25 b(smallest)g(addressable)e(unit)j(on)f(a)
g(blo)r(c)n(k)-300 351 y(device)31 b(is)h(the)g(sector.)48
b(All)32 b(device)g(I/O)f(m)n(ust)g(b)r(e)h(done)g(in)g(units)g(of)g
(sectors,)f(whic)n(h)h(are)e(then)i(mapp)r(ed)h(to)e(blo)r(c)n(ks)g(in)
h(memory)f([)p Fc(?)p Ff(]\(pg.)-300 450 y(289-290\).)j(The)28
b(Lin)n(ux)f(k)n(ernel)g(pro)n(vides)f(an)h(en)n(tire)g(subsystem)h
(for)f(blo)r(c)n(k)g(devices.)-134 670 y(The)d(subsystem)f(dedicated)g
(to)h(p)r(erforming)e(these)i(I/O)e(op)r(erations)g(is)i(called)f(the)h
(I/O)e(sc)n(heduler.)35 b(Blo)r(c)n(k)23 b(devices)g(main)n(tain)g
(request)-300 770 y(queues)37 b(to)g(store)g(their)g(p)r(ending)h(I/O)e
(requests)g([)p Fc(?)q Ff(]\(pg.)66 b(297\).)f(The)37
b(I/O)g(sc)n(heduler)f(functions)i(b)n(y)f(managing)f(this)h(request)g
(queue,)-300 869 y(deciding)28 b(the)g(order)e(of)i(requests)f(in)h
(the)g(queue)g(and)f(when)h(to)g(dispatc)n(h)f(eac)n(h)g(request)h(to)f
(the)h(blo)r(c)n(k)g(device.)37 b(Seek)27 b(time)i(is)e(the)i(amoun)n
(t)-300 969 y(of)h(time)g(required)e(to)i(p)r(osition)f(the)h(hard)f
(disk's)g(head)h(at)f(the)h(lo)r(cation)f(of)g(a)h(sp)r(eci\014c)f(blo)
r(c)n(k.)43 b(One)29 b(of)g(the)h(primary)f(optimizations)g(that)-300
1069 y(can)h(b)r(e)h(made)f(to)g(blo)r(c)n(k)g(I/O)f(p)r(erformance)h
(is)g(minimizing)h(seek)f(time.)45 b(I/O)30 b(sc)n(hedulers)f
(sometimes)h(do)g(this)h(b)n(y)f(merging)f(and)h(sorting)-300
1168 y(the)36 b(requests)f(in)h(the)g(queue.)61 b(The)35
b(en)n(tire)h(request)f(queue)g(is)h(k)n(ept)f(sorted)g(sectorwise)f
(so)h(that)h(all)g(seeking)e(along)h(the)h(queue)f(mo)n(v)n(es)-300
1268 y(sequen)n(tially)27 b([)p Fc(?)p Ff(]\(pg.)37 b(298-299\).)-134
1487 y(There)30 b(are)f(sev)n(eral)f(t)n(yp)r(es)j(of)f(I/O)f(sc)n
(hedulers)g(built)i(in)n(to)f(the)h(Lin)n(ux)f(k)n(ernel)f(w)n(e)h(w)n
(ork)n(ed)e(with)j(already)e(and)h(these)g(sc)n(hedulers)f(are)-300
1587 y(optimized)h(for)e(di\013eren)n(t)i(purp)r(oses.)41
b(The)29 b(Deadline)h(I/O)e(Sc)n(heduler)h(is)g(designed)g(to)g(prev)n
(en)n(t)g(starv)-5 b(ation)28 b(of)h(certain)g(requests)f(\(suc)n(h)i
(as)-300 1687 y(write)h(op)r(erations)f(starving)h(reads\))f([)p
Fc(?)p Ff(]\(pg.)49 b(300\).)f(The)31 b(An)n(ticipatory)g(I/O)f(Sc)n
(heduler)i(is)f(designed)g(to)g(maximize)h(throughput)f(and)g(is)-300
1786 y(ideal)22 b(for)g(serv)n(ers.)33 b(The)22 b(Completely)g(F)-7
b(air)22 b(Queueing)f(\(CF)n(Q\))i(I/O)e(Sc)n(heduler)h(p)r(erforms)f
(w)n(ell)h(in)h(nearly)e(all)h(w)n(orkloads)e(and)i(is)g(the)h(default)
-300 1886 y(sc)n(heduler)k(in)g(Lin)n(ux)g([)p Fc(?)p
Ff(]\(pg.)37 b(303\).)f(The)28 b(No)r(op)f(I/O)f(Sc)n(heduler)h(only)g
(p)r(erforms)g(merging)f(of)h(requests,)g(main)n(taining)g(the)g
(request)g(queue)-300 1986 y(in)h(near-FIF)n(O)e(order.)35
b(It)28 b(is)g(in)n(tended)g(for)f(blo)r(c)n(k)g(devices)g(that)h(are)f
(truly)g(random-access,)e(suc)n(h)i(as)g(\015ash)h(memory)e(cards)h([)p
Fc(?)p Ff(]\(pg.)37 b(304\).)-134 2205 y(Lik)n(e)25 b(the)h(Lin)n(ux)f
(k)n(ernel)g(w)n(e)g(w)n(ork)n(ed)f(with,)i(Android)f(has)g(the)h
(Deadline,)g(No)r(op,)g(An)n(ticipatory)-7 b(,)25 b(and)h(CF)n(Q)f(I/O)
f(sc)n(hedulers)h(built)h(in.)-300 2305 y(It)e(also)f(uses)g(Budget)g
(F)-7 b(air)23 b(Queueing)g(\(BF)n(Q\),)h(Simple)g(I/O)f(\(SIO\),)h
(and)g(V\(R\).)g(BF)n(Q)f(mak)n(es)g(use)g(of)h(budgets)f(instead)h(of)
g(timeslices.)35 b(The)-300 2404 y(disk)24 b(is)f(gran)n(ted)g(to)g(a)g
(pro)r(cess)g(un)n(til)h(its)g(budget)g(\(n)n(um)n(b)r(er)f(of)h
(sectors\))f(expires.)34 b(This)24 b(sc)n(heduler)f(w)n(orks)f(w)n(ell)
h(for)h(USB)g(data)f(transfer,)g(HD)-300 2504 y(video)g
(recording/streaming)d(due)k(to)f(less)g(jitter,)i(and)f(ac)n(hiev)n
(es)e(more)h(throughput)g(than)h(CF)n(Q)f(on)g(most)g(w)n(orkloads.)33
b(The)24 b(disadv)-5 b(an)n(tages)-300 2604 y(are)23
b(that)i(a)f(higher)g(budget)g(assigned)g(to)g(a)g(pro)r(cess)f(can)h
(increase)f(latency)h(for)g(other)g(pro)r(cesses.)34
b(The)25 b(Simple)g(I/O)e(sc)n(heduler)h(is)g(basically)-300
2703 y(a)j(h)n(ybrid)g(of)g(the)g(No)r(op)g(and)g(Deadline)h(sc)n
(hedulers.)35 b(It)28 b(aims)f(to)g(minimeze)h(o)n(v)n(erhead)d(and)i
(latency)-7 b(.)36 b(Lik)n(e)27 b(No)r(op,)g(it)h(do)r(es)e(not)i
(reorder)d(or)-300 2803 y(sort)c(requests,)h(resulting)g(in)g
(minimized)h(request)e(starv)-5 b(ation)21 b(and)h(high)f(reliabilit)n
(y)-7 b(.)35 b(Ho)n(w)n(ev)n(er,)21 b(unlik)n(e)h(No)r(op,)h(it)f(has)g
(relativ)n(ely)e(slo)n(w)h(reads)-300 2903 y(on)27 b(random-access)e
(devices)i(lik)n(e)h(\015ash)f(driv)n(es.)36 b(The)27
b(VR)h(sc)n(heduler)f(imp)r(oses)g(a)h(fairness)e(deadline)i(on)f
(requests.)36 b(It)28 b(treats)f(sync)n(hronous)-300
3002 y(and)d(async)n(hronous)d(requests)i(as)h(the)g(same.)35
b(This)24 b(results)g(in)g(a)f(sc)n(heduler)h(that)g(is)g(excellen)n(t)
f(for)h(b)r(enc)n(hmarking,)g(but)g(has)g(b)r(elo)n(w-a)n(v)n(erage)
-300 3102 y(p)r(erformance)j(at)g(times)h(due)g(to)f(\015uctuations)h
(and)f(is)h(therefore)e(the)i(least)f(reliable)g(of)h(the)g(sc)n
(hedulers)e([)p Fc(?)p Ff(].)-134 3321 y(The)d(default)h(I/O)f(sc)n
(heduler)f(in)i(the)g(Lin)n(ux)f(k)n(ernel)f(w)n(e)h(w)n(ere)g(w)n
(orking)e(with)j(w)n(as)e(CF)n(Q.)h(The)h(default)g(in)f(Android)g(dep)
r(ends)h(on)f(whic)n(h)-300 3421 y(v)n(ersion)g(of)i(Android)f(is)g
(running.)36 b(F)-7 b(or)24 b(example,)h(Cy)n(anogen)e(uses)h(CF)n(Q)g
(b)n(y)g(default,)i(while)f(man)n(y)f(v)n(ersions)e(use)j(No)r(op.)35
b(In)25 b(the)g(v)n(ersion)e(of)-300 3521 y(Lin)n(ux)i(w)n(e)f(w)n(ere)
g(using)g(on)h(the)g(Squidly)-7 b(,)25 b(CFS)g(w)n(as)f(a)g(m)n(uc)n(h)
h(b)r(etter)g(I/O)f(sc)n(heduler)g(than)h(No)r(op)f(b)r(ecause)h(w)n(e)
f(w)n(ere)g(using)g(a)h(hard)f(disk.)35 b(So)-300 3620
y(wh)n(y)30 b(w)n(ould)f(No)r(op)h(b)r(e)g(adv)-5 b(an)n(tageous)28
b(to)h(use)h(on)f(Android?)44 b(As)30 b(brie\015y)f(men)n(tioned)h
(earlier,)f(No)r(op)h(actually)f(p)r(erforms)g(v)n(ery)g(w)n(ell)h
(with)-300 3720 y(solid)22 b(state)h(blo)r(c)n(k)g(devices)f(\(suc)n(h)
h(as)f(\015ash)h(memory\),)g(whic)n(h)g(do)g(not)f(dep)r(end)i(on)f
(mec)n(hanical)f(mo)n(v)n(emen)n(t)g(to)g(access)g(data.)35
b(These)23 b(devices)-300 3820 y(do)j(not)h(need)f(re-ordering)e(of)i
(m)n(ultiple)h(I/O)f(requests,)g(so)f(No)r(op)i(reduces)e(a)n(v)n
(erage)f(seek)i(time.)37 b(Since)26 b(\015ash)g(memory)g(is)g(used)h
(univ)n(ersally)-300 3919 y(on)d(the)h(mobile)f(devices)g(on)g(whic)n
(h)h(Android)f(is)g(installed,)h(it)g(mak)n(es)f(sense)f(that)i(No)r
(op)f(w)n(ould)g(b)r(e)h(the)g(preferred)e(I/O)h(sc)n(heduler)g(on)g
(man)n(y)-300 4019 y(v)n(ersions)i(of)h(Android)h([)p
Fc(?)p Ff(].)p 0 TeXcolorgray 1929 5889 a(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.5) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray 0 TeXcolorgray -300 -360 a
SDict begin H.S end
 -300
-360 a -300 -360 a
SDict begin 12 H.A end
 -300 -360 a -300 -360 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark end
 -300 -360
a 83 x Fb(3)135 b(Group)44 b(Ev)-7 b(aluation)-134 25
y Ff(I'v)n(e)31 b(b)r(een)g(v)n(ery)f(satis\014ed)g(with)i(m)n(y)f
(group.)46 b(Initially)-7 b(,)32 b(w)n(e)e(had)h(one)g(mem)n(b)r(er,)h
(Ke)e(F)-7 b(an,)32 b(who)f(did)g(not)g(con)n(tribute,)h(comm)n
(unicate,)-300 124 y(or)d(sho)n(w)h(up)g(to)g(an)n(y)g(of)g(our)f
(meetings.)45 b(So)30 b(w)n(e)g(ask)n(ed)f(that)h(he)g(b)r(e)h(placed)f
(in)g(the)h(slac)n(k)n(er)d(group.)44 b(But)30 b(b)r(esides)g(that,)i
(m)n(y)e(other)f(group)-300 224 y(mem)n(b)r(ers,)35 b(Mic)n(hael)e(and)
g(Doug,)h(ha)n(v)n(e)f(b)r(een)h(great)e(to)h(w)n(ork)f(with.)55
b(Despite)34 b(juggling)f(senior)f(design)h(pro)5 b(jects)33
b(and)g(commitmen)n(ts)h(in)-300 324 y(other)e(classes,)i(they)f(w)n
(ere)f(b)r(oth)h(alw)n(a)n(ys)f(resp)r(onsiv)n(e)f(to)i(m)n(y)g(texts)g
(and)g(calls,)h(alw)n(a)n(ys)d(set)i(aside)g(time)g(to)g(\014nish)g
(the)h(pro)5 b(ject,)34 b(and)e(w)n(e)-300 423 y(delegated)i(the)g(w)n
(ork)f(v)n(ery)g(e\013ectiv)n(ely)-7 b(.)56 b(Doug)34
b(w)n(as)f(usually)h(in)g(c)n(harge)e(of)i(sc)n(heduling)g(demo)g
(times)g(and)g(doing)g(the)g(Co)r(de)g(section)g(of)-300
523 y(our)27 b(writeups,)i(Mic)n(hael)e(w)n(ould)h(do)g(the)h(Implemen)
n(tation)f(section)g(of)g(our)f(writeups,)i(I)f(w)n(ould)g(do)g(the)g
(Bac)n(kground)e(section,)i(and)g(w)n(e)g(all)-300 623
y(w)n(ork)n(ed)e(together)h(to)g(write)g(the)h(co)r(de)g(for)f(our)g
(pro)5 b(jects.)-300 1017 y Fb(References)-300 1099 y
SDict begin H.S end

-300 1099 a -300 1099 a
SDict begin 12 H.A end
 -300 1099 a -300 1099 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end
 -300
1099 a -300 1104 a
SDict begin H.S end
 -300 1104 a -300 1104 a
SDict begin 12 H.A end
 -300 1104
a -300 1104 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Bovet) cvn H.B /DEST pdfmark end
 -300 1104 a 0 TeXcolorgray -258 1237 a
Ff([1])p 0 TeXcolorgray 41 w(Daniel)27 b(Bo)n(v)n(et.)36
b(Understanding)27 b(the)h(lin)n(ux)g(k)n(ernel.)p 0
TeXcolorgray 1589 1255 a
SDict begin H.S end
 1589 1255 a 0 TeXcolorgray -18
x Fa(http://oreilly.co)o(m/c)o(at)o(alo)o(g/)o(li)o(nux)o(ke)o(rne)o
(l/)o(cha)o(pt)o(er)o(/ch)o(10)o(.ht)o(ml)p 0 TeXcolorgray
4030 1179 a
SDict begin H.R end
 4030 1179 a 4030 1237 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://oreilly.com/catalog/linuxkernel/chapter/ch10.html) >> /Subtype /Link H.B /ANN pdfmark end
 4030 1237 a 0 TeXcolorgray
Ff(.)-300 1291 y
SDict begin H.S end
 -300 1291 a -300 1291 a
SDict begin 12 H.A end
 -300 1291 a
-300 1291 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Bray) cvn H.B /DEST pdfmark end
 -300 1291 a 0 TeXcolorgray -258 1403 a Ff([2])p
0 TeXcolorgray 41 w(Tim)g(Bra)n(y)-7 b(.)35 b(What)28
b(android)e(is.)p 0 TeXcolorgray 931 1421 a
SDict begin H.S end
 931 1421
a 0 TeXcolorgray -18 x Fa(http://www.tbray)o(.or)o(g/)o(ong)o(oi)o(ng)o
(/Wh)o(en)o(/20)o(1x)o(/20)o(10)o(/1)o(1/1)o(4/)o(Wha)o(t-)s(And)o(ro)o
(id-)s(Is)p 0 TeXcolorgray 3772 1345 a
SDict begin H.R end
 3772 1345 a 3772
1403 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://www.tbray.org/ongoing/When/201x/2010/11/14/What-Android-Is) >> /Subtype /Link H.B /ANN pdfmark end
 3772 1403 a 0 TeXcolorgray Ff(.)-300 1457 y
SDict begin H.S end
 -300
1457 a -300 1457 a
SDict begin 12 H.A end
 -300 1457 a -300 1457 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.features) cvn H.B /DEST pdfmark end
 -300 1457
a 0 TeXcolorgray -258 1569 a Ff([3])p 0 TeXcolorgray
41 w(eLin)n(ux.org.)35 b(Android)27 b(k)n(ernel)g(features.)p
0 TeXcolorgray 1229 1587 a
SDict begin H.S end
 1229 1587 a 0 TeXcolorgray
-18 x Fa(http://elinux.or)o(g/A)o(nd)o(roi)o(d_)o(Ke)o(rne)o(l_)o(Fea)o
(tu)o(re)o(s)p 0 TeXcolorgray 3016 1511 a
SDict begin H.R end
 3016 1511 a
3016 1569 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://elinux.org/Android_Kernel_Features) >> /Subtype /Link H.B /ANN pdfmark end
 3016 1569 a 0 TeXcolorgray Ff(.)-300 1623
y
SDict begin H.S end
 -300 1623 a -300 1623 a
SDict begin 12 H.A end
 -300 1623 a -300 1623 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.farmatito) cvn H.B /DEST pdfmark end
 -300
1623 a 0 TeXcolorgray -258 1735 a Ff([4])p 0 TeXcolorgray
41 w(farmatito.)21 b(Sp)r(eed)e(up)f(y)n(our)f(system)i(with)f(the)h
(no)r(op)f(sc)n(heduler.)p 0 TeXcolorgray 1934 1753 a
SDict begin H.S end

1934 1753 a 0 TeXcolorgray -18 x Fa(http://forum.xda-)s(de)o(vel)o(op)o
(ers)o(.c)o(om)o(/sh)o(ow)o(thr)o(ea)o(d.p)o(hp)o(?t)o(=57)o(60)o(04)p
0 TeXcolorgray 4336 1677 a
SDict begin H.R end
 4336 1677 a 4336 1735 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://forum.xda-developers.com/showthread.php?t=576004) >> /Subtype /Link H.B /ANN pdfmark end
 4336
1735 a 0 TeXcolorgray Ff(.)-300 1789 y
SDict begin H.S end
 -300 1789 a -300
1789 a
SDict begin 12 H.A end
 -300 1789 a -300 1789 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.gomo) cvn H.B /DEST pdfmark end
 -300 1789 a 0 TeXcolorgray
-258 1901 a Ff([5])p 0 TeXcolorgray 41 w(gomo.)35 b(Sc)n(heduling)28
b(in)g(android.)p 0 TeXcolorgray 975 1919 a
SDict begin H.S end
 975 1919
a 0 TeXcolorgray -18 x Fa(https://github.co)o(m/)o(kee)o(sj)o(/go)o(mo)
o(/wi)o(ki)o(/A)o(ndr)o(oi)o(dSc)o(he)o(du)o(lin)o(g)p
0 TeXcolorgray 3242 1843 a
SDict begin H.R end
 3242 1843 a 3242 1901 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (https://github.com/keesj/gomo/wiki/AndroidScheduling) >> /Subtype /Link H.B /ANN pdfmark end
 3242
1901 a 0 TeXcolorgray Ff(.)-300 1955 y
SDict begin H.S end
 -300 1955 a -300
1955 a
SDict begin 12 H.A end
 -300 1955 a -300 1955 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.AndroidDev1) cvn H.B /DEST pdfmark end
 -300 1955 a 0 TeXcolorgray
-258 2067 a Ff([6])p 0 TeXcolorgray 41 w(Android)18 b(Dev)n(elop)r(er)f
(Guide.)23 b(Pro)r(cesses)16 b(and)i(threads.)p 0 TeXcolorgray
1654 2085 a
SDict begin H.S end
 1654 2085 a 0 TeXcolorgray -18 x Fa(http://developer)o(.an)
o(dr)o(oid)o(.c)o(om)o(/gu)o(id)o(e/c)o(om)o(pon)o(en)o(ts)o(/pr)o(oc)o
(ess)o(es)o(-)t(an)o(d-)s(thr)o(ea)o(ds.)o(ht)o(ml)p
0 TeXcolorgray 4801 2009 a
SDict begin H.R end
 4801 2009 a 4801 2067 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://developer.android.com/guide/components/processes-and-threads.html) >> /Subtype /Link H.B /ANN pdfmark end
 4801
2067 a 0 TeXcolorgray Ff(.)-300 2121 y
SDict begin H.S end
 -300 2121 a -300
2121 a
SDict begin 12 H.A end
 -300 2121 a -300 2121 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Hackborn) cvn H.B /DEST pdfmark end
 -300 2121 a 0 TeXcolorgray
-258 2233 a Ff([7])p 0 TeXcolorgray 41 w(Dianne)g(Hac)n(kb)r(orn.)j(Go)
r(ogle+)c(p)r(ost,)j(dec)f(9)e(2011.)p 0 TeXcolorgray
1484 2252 a
SDict begin H.S end
 1484 2252 a 0 TeXcolorgray -19 x Fa(https://plus.goog)o(le)
o(.co)o(m/)o(u/0)o(/1)o(050)o(51)o(98)o(573)o(82)o(802)o(61)o(83)o(2/p)
o(os)o(ts/)o(XA)o(Z4C)o(eV)o(P6)o(DC)p 0 TeXcolorgray
4405 2175 a
SDict begin H.R end
 4405 2175 a 4405 2233 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (https://plus.google.com/u/0/105051985738280261832/posts/XAZ4CeVP6DC) >> /Subtype /Link H.B /ANN pdfmark end
 4405 2233 a 0 TeXcolorgray
Ff(.)-300 2287 y
SDict begin H.S end
 -300 2287 a -300 2287 a
SDict begin 12 H.A end
 -300 2287 a
-300 2287 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Optimus) cvn H.B /DEST pdfmark end
 -300 2287 a 0 TeXcolorgray -258 2399 a Ff([8])p
0 TeXcolorgray 41 w(Optim)n(us)115 b(Kernel.)296 b(Bfs)115
b(vs)g(cfs:)211 b(Some)115 b(p)r(ersonal)f(observ)-5
b(ations)113 b(on)i(lin)n(ux)g(k)n(ernel)f(p)r(erformance.)p
0 TeXcolorgray -129 2517 a
SDict begin H.S end
 -129 2517 a 0 TeXcolorgray
-18 x Fa(http://optimus-)s(lin)o(ux.)o(bl)o(og)o(spo)o(t.)o(com)o(/2)o
(01)o(2/0)o(3/)o(for)o(-)t(so)o(me)o(-)t(ti)o(me)o(-)t(no)o(w-)s(i-)t
(h)o(ave)o(-)t(st)o(op)o(ped)o(-)t(u)o(sin)o(g.)o(htm)o(l)p
0 TeXcolorgray 3609 2441 a
SDict begin H.R end
 3609 2441 a 3609 2499 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://optimus-linux.blogspot.com/2012/03/for-some-time-now-i-have-stopped-using.html) >> /Subtype /Link H.B /ANN pdfmark end
 3609
2499 a 0 TeXcolorgray Ff(.)-300 2550 y
SDict begin H.S end
 -300 2550 a -300
2550 a
SDict begin 12 H.A end
 -300 2550 a -300 2550 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Forbes) cvn H.B /DEST pdfmark end
 -300 2550 a 0 TeXcolorgray
-258 2665 a Ff([9])p 0 TeXcolorgray 41 w(Rob)r(ert)j(Lo)n(v)n(e.)302
b(What)117 b(are)f(the)i(ma)5 b(jor)116 b(c)n(hanges)g(that)h(android)f
(made)h(to)g(the)h(lin)n(ux)f(k)n(ernel?)p 0 TeXcolorgray
-129 2783 a
SDict begin H.S end
 -129 2783 a 0 TeXcolorgray -19 x Fa(http://www.forb)o(es.)o
(co)o(m/s)o(it)o(es)o(/qu)o(or)o(a/2)o(01)o(3/0)o(5/)o(13)o(/wh)o(at)o
(-)t(ar)o(e-)s(the)o(-)t(ma)o(jo)o(r-)t(c)o(han)o(ge)o(s-)s(tha)o(t-)t
(a)o(nd)o(roi)o(d-)s(mad)o(e-)s(to-)s(the)o(-)t(li)o(nu)o(x-)t(k)o(er)o
(nel)o(/)p 0 TeXcolorgray 4711 2707 a
SDict begin H.R end
 4711 2707 a 4711
2764 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://www.forbes.com/sites/quora/2013/05/13/what-are-the-major-changes-that-android-made-to-the-linux-kernel/) >> /Subtype /Link H.B /ANN pdfmark end
 4711 2764 a 0 TeXcolorgray Ff(.)-300 2816 y
SDict begin H.S end
 -300
2816 a -300 2816 a
SDict begin 12 H.A end
 -300 2816 a -300 2816 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Love) cvn H.B /DEST pdfmark end
 -300 2816
a 0 TeXcolorgray 114 x Ff([10])p 0 TeXcolorgray 41 w(Rob)r(ert)27
b(Lo)n(v)n(e.)35 b Fd(Linux)29 b(Kernel)h(Development)p
Ff(.)38 b(P)n(earson)25 b(Education,)i(Inc.,)h(third)f(edition,)h
(2010.)-300 2984 y
SDict begin H.S end
 -300 2984 a -300 2984 a
SDict begin 12 H.A end
 -300 2984
a -300 2984 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.SO1) cvn H.B /DEST pdfmark end
 -300 2984 a 0 TeXcolorgray 112 x Ff([11])p
0 TeXcolorgray 41 w(Stac)n(kOv)n(er\015o)n(w.)19 b(Android)f(pro)r
(cess)f(sc)n(heduling.)p 0 TeXcolorgray 1452 3115 a
SDict begin H.S end
 1452
3115 a 0 TeXcolorgray -19 x Fa(http://stackoverf)o(lo)o(w.)o(com)o(/q)o
(ues)o(ti)o(ons)o(/7)o(93)o(103)o(2/)o(and)o(ro)o(id)o(-)t(pr)o(oce)o
(ss)o(-)t(sc)o(he)o(dul)o(in)o(g)p 0 TeXcolorgray 4468
3039 a
SDict begin H.R end
 4468 3039 a 4468 3096 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://stackoverflow.com/questions/7931032/android-process-scheduling) >> /Subtype /Link H.B /ANN pdfmark end
 4468 3096 a 0 TeXcolorgray
Ff(.)-300 3150 y
SDict begin H.S end
 -300 3150 a -300 3150 a
SDict begin 12 H.A end
 -300 3150 a
-300 3150 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.cgroups) cvn H.B /DEST pdfmark end
 -300 3150 a 0 TeXcolorgray 113 x Ff([12])p
0 TeXcolorgray 41 w(Wikip)r(edia.)37 b(cgroups.)p 0 TeXcolorgray
639 3281 a
SDict begin H.S end
 639 3281 a 0 TeXcolorgray -18 x Fa(http://en.wikipe)o(dia)o
(.o)o(rg/)o(wi)o(ki/)o(Cg)o(ro)o(ups)p 0 TeXcolorgray
2208 3205 a
SDict begin H.R end
 2208 3205 a 2208 3263 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://en.wikipedia.org/wiki/Cgroups) >> /Subtype /Link H.B /ANN pdfmark end
 2208 3263 a 0 TeXcolorgray
Ff(.)-300 3316 y
SDict begin H.S end
 -300 3316 a -300 3316 a
SDict begin 12 H.A end
 -300 3316 a
-300 3316 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.zhanjia) cvn H.B /DEST pdfmark end
 -300 3316 a 0 TeXcolorgray 113 x Ff([13])p
0 TeXcolorgray 41 w(zhanjia.)21 b(Go)n(v)n(ernors,)d(i/o)f(sc)n
(hedulers,)i(optimization)f(tips.)p 0 TeXcolorgray 1777
3447 a
SDict begin H.S end
 1777 3447 a 0 TeXcolorgray -18 x Fa(http://forum.xda-)s(dev)o
(elo)o(pe)o(rs)o(.co)o(m/)o(sho)o(wt)o(hr)o(ead)o(.p)o(hp?)o(t=)o(198)o
(98)o(24)p 0 TeXcolorgray 4222 3371 a
SDict begin H.R end
 4222 3371 a 4222
3429 a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://forum.xda-developers.com/showthread.php?t=1989824) >> /Subtype /Link H.B /ANN pdfmark end
 4222 3429 a 0 TeXcolorgray Ff(.)p 0 TeXcolorgray
1929 5889 a(5)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
