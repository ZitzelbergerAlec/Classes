%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: mywriteup.dvi
%%CreationDate: Mon Mar 18 13:45:31 2013
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR10 CMR17 CMTI10 CMBX10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter mywriteup.dvi -o
%+ mywriteup.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.03.18:1345
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 58 /colon put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 72 /H put
dup 73 /I put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 88 /X put
dup 90 /Z put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405CF54722827FBC24AEF08
F6DD0BC6A79A2DB1FF539454E8F5D1A42D40CCFBC093AFD3E57973A009095CEA
B91FAFD236C47F453B38DB0067907A28EB5E9ADE87A2181F1D6DE4E183631716
C21F0F952E0666AC74371F8B5C888DC44FBA5607435A619684F502CF625663C7
94B0DAA79BE8E129E7F5C5AD1B7495C1BC9B1C759FD67200DFF251DB7C95C09E
89EA1F66EADC3439C72468503347EA1A45344A43E0DC78100DFE972638580B5E
3946BCC0286AB3D7E04B421C8192F995C3705497697234DFFB6E7A1187E18DF9
816B69E19F7325306C51E9EA5BA15FDEAC691297671B9F987DCE814E15431671
03942C38557E34AC016558CE7147BC6CF4B18AFBCBAD057BC70684EF3A2C78CD
F5236FFB0640B122C5B776E9938FCB7919AF03D89E764E4677099C80FE661475
9059E273D0E56D9224AF599623F5D660C81D52B8AA5C93B0284E2BCEA1467700
403A1960A5E2F799A5E23CC2D7E8EC31D08157B22EEB976F05BED9072E415B3E
BA2C28C0410381C5E71D4CA126DDFBB89529EFCBD7E8C86660BA6A2C97855BE0
A6EA3408C68EE477976A622EF05EE22ABF66B4DC1611DBECD07022C5B15C09B0
13F448ED78EF75B3A436BDE5E7495B3442B58D8287477013DFFAEB198976F589
B6EF990610FE7C70306E1CA258E50A34617F7DB9BE4744063489FAA75D9DF024
4CB79D626EB2607922584C4B86B0E86E868364E5045F4A6735CC5E5D06110593
3646FCD93A9AA7D20B11E97AF910D401484D18F872A1077220F3BE551CBA075D
4A0587D990024BBE862FA424073F982C9EC093D7F96770C73499AC0AFC3FD135
E054269D67C853CE94E1C2A9D653A0300C837106DEBC84AC386BF9FF97477F8C
211E882F19F4FC2640ADEE11CA8025D6978169E99FF986DADD5E453D0FD5433B
1F01E04E77818CEC06549E92CADB3FD5F0A7DBDBA9FD01C0DFD34ABFE8998301
F9E3E1D56EDE2E78216C04E7278720165615BEF3E638AD191B3B93CD166C042F
FBF5C1F19A59D8E0F1D82C8A48532DF0091883F3C953E0080C2F6E3F3A3FA7BD
5DCFEC68DCAC374CC58F53516ECD13D636D85A5AA99DE1D97817CCF1434CB472
E5D67E72230E4E30280D716F271F14BFC848FB954363ECAD2AAF0790A3A4333D
548F2F8A4B7D350DCF0C558155B9A457291D3AC73ACA7B5E025917056E6495E8
43D482331A329FE100DFF2BF21FBE7222389685D8740320FA50D1D6D721455BD
C05EE55E9E31CB1C3F9CCF78DDEFBA250D3534135540CA18729E0EE9AEEF9A0A
CAC3262D90EBD22D8C2830A98EE81DC5969CD31EA14C790935D4937CD1120DAA
C6F8D7CF54246294CED88BFE40284FB3CAF610E90F379A9C9B9380E352FD8177
C4C9226ABF1A4769A294BB88ABB9E813ED15F88A84AC07E3E30B9DB40CCF1023
A33C4CF14A681D1B576C2DD98E6D8EA23EDE9331DBB4CB95A85DA0330AF9100C
863E465E81ABE85B1AABE786D54891E48A913BBB84058BF4069691B952B8F689
9ED604F71324B23078094F1243525CA907126002B0BBE399FCB0DD78504CCFD1
5F8187DC5911C48986B787CF0A624F7AE9FA0D0BD0A281F3EE631E10D4EE4676
B484C5664D809765F0392360579A17C3AED5E4912C265B12CC08C48A4B67511B
2D9FC4DA135639625A2D71001525BF2979405F94A0E3157EBD6F4DC786D9EBBF
A1667A163F95F08A09F14BD2BF8F10767860AABED5A7775B5BF3FACF97FBC25B
CDE64FE7D0F72BDFBB54ABE28EE896CC82AC977DCF554BA5B03E6B6B2D5F3258
CB55BA80F6685756323D580BD225D764CB70839FDE9C68B225F61187932DC265
F7811BB83E7A2DB7221FFC28BA5D8A7AD0D8FB3BF7D45F0C0A27534D924B7712
D68F55935EE03D99CA98544FA3BACFA0413F7BDDB2B030B3AF2ED0BF0E69B3AE
2EBF8808501D3C496B31F22055519056161354520295CED943D238D4E69FF8E4
39B8CC6A78647524A8606FD5F70A72DD1C51B20122FB8A50C07F8151EB392EF3
670F20B0E694C5F8E88CC0421AA3EA9D9EADF85D290258223F09972168BB15A4
A42C8CE80E43ABB90480C6343B279584414AEF9686B26160D05C1773D5CB8593
544F85DD9A8360B1C7196B4B9F048157B1E9D260E398721CD557B5C0934A3A99
8CE8D4AB0CB2E7A2833158E90A86A6AC4FA4E78C742F255FA82C23D23DF8D23B
5C88A011596EAE45A65A139AC2E2988964A1721CE68850822BE52B23C4F14A5E
26BDA1A649481D7BAD012BD0C157F74D20F8E8DD23764492FF9FBAE669F42DC1
AA66175408178DB46B971C2D215517A0A4A37161400FDF5A775E8BFE1C703238
3596A43FE84928B47CF0CF5FFC956502243146899D2F2EB3C5BDF54417D69E2E
C763A95F2A46562AFF8967B3A44A1A38ADA12A57B9281C4E92D06D966EFD83F6
AF02CC37CA7442F5E11F88EC376BF2559F03A5D41E6CE2292FBD9A68197CF8BD
68B0B5E7923D63502973282AFCF750B84B67ABC5CCF016DAAF674605B497B197
F48269AA2F974BDC6BF42591948F41CEA2D4495BE5893EE5CA4D308D2017D5C6
E6B1BF86D799363359339AE538637CC8586F9B11990E7810F322886908DEC601
BD0309DFA15642A76F607F076CFB477AEDCEE018E2558EF232B3730EC076678F
2A8C08BA6768067B85430440A2DA92CC14AF333AA9731747262F2E11B442DE50
983A6E77BE7A9A32D20ACD509B94B89DE284FFFD5BE6A15D564CED15A300005E
C67E355D869EDAB9030EF762A857E7E70BFC02C5489942233DC68E500F916CCC
8E173BA04EE72E52A0DB852561D37F9BF30429BB0FDE9628073707F153F9B11C
7D3B60C54393ECF192508E342EE4A49C2EED44913D15F131D8135E03994F3DA3
0696484AAD886B77366FBE5895798522585C89959540587FDA8918F77C54B584
460BBCB7BFF83BD04BD4B2447D9BE5BFB3C48EA243B58D82870C4D0866DAB27C
1542FB477CFC9ED02B6BD9A61A6B4C583927EDD690A953CE23C0E57A44767DDC
97921A11ACD6DA10EDFC391BF1B9D2C2D0FC32489AE7211B3C6F34F7F5F03E7C
1B6CB2930A25C1AD61007A45260481419B9FB16AE8B19B297351F8A76D6E62D7
2BA50C3199EEFAFC3583F1AEFD360D6996D4EDA2D52EF0227664463A9005CE3D
F93A401E556AC6A162485214058678DBFDB580F8EEE1D73B31A9A9592B357FAB
2BEC0B587F37648514F73A720FF431D6244D8F6E0F0707F878A8E76A8C9FBC39
212DEA4A903BDB7789BAF4BBBE2BCBC5331FAD6F489120A8E247481455DD3B34
BA145C659E7C85D65997EA045E7096CFD27ED527ADEDBCD0FD311A96716263A8
88806A912E3E4CAE1FA911D2845F60FA5E09D2F345BAB4FCFCF393119B15E4E8
EC1398415F54DCEDBA90C9E32BDCD762DED5AC5D780384C62AD3D5C3293D2DD2
5073822703DDAD80649E1E5966E42E30E522D239A612BFC8732924D8BB50099C
DFA1CFD85E056C52AD6DF1BECFD60036A01BFC83968896767D9270933DE2CF15
064CA4554AD7CBB3686537DD94958455950279FCFACF4ED322D3CBF36F60B9B3
FA1D376D2329B237EFE827C7D2BD4667794F370197CB396D7A7FAEFED7825780
9DBDB63141E512B72D98D000E44E5006113942CE002B30D19589DE79706F0025
6166924B4AB08C2C5E78D843E4CF9F2D0766D05BC75E8437F646B69896D5932A
45B9A8A44E275E8E788355E9BA0042399F46F6B4AF6F82301A7C210AFD8D6491
C9BA555F459403DF8413FC619C7AB8166CC72C915C2FD0B4D9BA9499486F80BD
19574DA58E946221F7C9A09C2B6AC4211431F5CDD4A621C70FD7437731F87CBF
50F78CC87FA7712F7B33B3D07AA4375CB786F2CBB297BA606BE3F861B144B28C
002BF3659AD8871AFE289DFFC4276A8951000A413085E883B8139E5A801410E8
ED3E8512A4AAD8DCD1F73DA4C91701EBBCBCCD56A983E9AEEC24390C55A532B8
F8BE54F738325B7525D62CE0F97CF20B49CE90F497693F33C03D000ED45B12D9
E2A80B4E196B6C6606A48FC3665519A5CF0D99E444B90ABA0299C847F68442F9
4D99459E4CC429C2384FDE791271B92569EC285A577B0ACC5BCE3B3827D8F870
FFFF3F0C7CA4EF4940D7927914623BE71E00CE7782D3770EA370CF0CA78934ED
1412122DC42DB7F130DF24EE1CD42C4523A7D749CF8E47FDA4E859D19FD85352
4EFD84CD560D469AB3EEC16B9070D9D82A35EE24F17B9D8C7BC6662385ACDEF5
D851656E7A40313B140EEA176F24DAF1FEFA81EE566BB0A5E7426F5F80206E1F
A8AFE258EC2E59D6D5F3C46CB22CA567363965482EED4E8392D4CE02DD575512
3A721BB133683A24E5C8C055AA98ADFDB7F9B5CC4964FA90ABE09EE8FBC55CCF
4F621CE1557FB629F535B0F9AF9C4F8D571CD51EEE34A909F768B769573B868E
68F49208FDF6D9107C5062FA79A97B93BE99F247CEFBBFA4FD232D972ACFFF05
D2400CD2FA9D0200BE61E31C2A749078833C73EA3EE4B120B3D9D334D27EB8EB
634888282D012A6EA107B2E4246B97B35247EBF173B311D10EB791E29066D864
2FC40FCC4FD155479DC846E8E91F7D48D1ADBB989B1CADA79825DBA21E42C059
BF76D35721DB2B4046E5BB47B1E6526AD7D0D8D1405A6240B7A5CFA4C2735579
A2CA683BCA208F74F84E0E7E6954F8E6ED9FA6E0DFBF46BA0B2AA4C3F809F916
FF587CABF8FA2C35BB54E47A8FE572780F331D2A6160E2389D680A70D19662E3
15F8213F337A2BC4DA6287ABEF53AE69E8F90E3A7F4E583C2BD5BC86C084B55C
27AE1E960E4DE7A8783D854BE6510D507EA911410AF158039F1EFA8D553ADA8E
78BE5C24537136808DB821F4697ACCDC7ED1D54DD8787D00E1DBD8C52417FFF3
568C038C3A5826C55AD05629EDF320F1762115078860FFC16D9E715B9F872338
C91ADBAA1A472ED790B5F01AF89F69BB26A036B3BBEF1ABDCBE92EE03F25C71A
0855AC4BB92A6F65E66969AEF288E53DFA77FCA1004A80D60DB605E420D783CD
61E89A9B373592332B035153146979F3D346CD2578B832079691F773B0B1B20E
0B112FE423722512C1E681820A9F623E5C6972B2742EEEAB5006C418180E2A0C
98685F4593879308A778B5C1A8453613DAB45B0279E239957DCDC5163437C4F6
FD4165AB38C3E0F9300B645CD354A053A63D0AFB112FA2F8B1278BCA10FE2516
C326B0C9920CF5DA98EF435F76598854C83F78746F3823B37C6D51CBC1251566
1676203CFF8CEC6D746521CB94E7758A4F8663B8C616073BCF75A5263DEB09C4
23B3C3E3D8A55C4F4F52A2722E352D9BEB7DC6E156F0D393201100922F91DC49
ECE915A5151E927EE76B692F2C126AF42C8D5491B6C54A1454B7F64AA21B0E41
2884833CAB48FC3BF35B68EEB9AFDC4D7489AFC0664E837F5B1BAF8EAF7923B7
9A8CB82EC60D421C50E9DB6DBB428133156E4BAD1C44B91487097E3F3C452138
C9C1EB834F2D68A146CFD779559BD0D296908CFE9ACE97A64BF99CD17E424D31
114F6B96008892FEF06F227CB8AD6D93D3000606E2D030719618D9B5E81CDA99
E65355214D8EC7D77FCA1A6F8E0E7B7CF9FF7BB699DE35AE945705F9B6FC10A1
916F2D0F6E91CFCDEE3F5BDA9EAC5367797756E87D5A4D59DCBC0723BDFA900E
44DD9CBC4B9DF7B968CF9A27A5CB3BE263768CFE4E5C6F5EA5105A3A542785EB
3C7665089E9BA901EFE5E4B9F6E5A8AE110B78CDB95B7DCA6E7151E38E85F529
C2C110DCC5353E2D74B11F17FFB34DCA67783644C369EB363A1E7EBE7A5A7698
76457FE7816B67361202FFAF2EA3DFC7CAC48B579D515BB39BBBCC0D0FCFB0BE
2A6E4D38E7A4A3455D1C015BA9C86C8EC48B0DEAACABD4197B2CAAEE0401E210
BA933C5C7A5DAFA2593F88CDE8BD6B302157B745D3D31DFB49FCC3E010C4397D
5FD8F111704106E77B33EC153323A7B3B7F0C14AF4435A2523598F2FFF8D9542
77AEA1E75A39AE930A000A2471EF51B35F6045C790B4C7A161AFC9DA5A16FC02
FFE9644F5AC8DAB0A7BE57A5FA13FA04C246166ECC171F559308D811C831105F
3597EBBF808064CE2C44ECBF9F4F98AE56257877193F91D32A9766EF6F8B102C
06C7BA2961D77EBC9A9F2F87A71A267F05E894B67D40EB446A31DF8DB910FED3
B41156EE46C32058836112F1BBE26DF9C53CFFFC1CEDC3D27214A47E2882052B
63DE6EC27527197F40DF605236AABD8EC58E4FF77A046EC991D8784B5390AA5F
0CD892B053EC056A4AC7141A5440CF818B28F53F6E907662159109A285057B4E
9FB25FE834D93D85488F0EACA1D7C8EA80149742CF0C8A4B5127D52215BB665E
B69CF9E490F25606F3BB89A89C6717A9600618E44036A067EB5B6AC8AE8A701F
03580FE5E2F82516405E21833DFDF9FBB7DCF956B7D07A53E25F2165AAEC21E9
A8426ADC966D95BFE4AB2D043E15C7C001FDEAD3333898886DFEDD3607D892BB
879E45BF44ECABC07E054494A7EA443EC36FC7038EE03E441B38EE70CAC48A75
FAF4C20D6F3AAF927AEBCA1323CAB50B4938ADA3522CC682541290C224DFDB4D
86F543E1BCAB8EA3D7DA411D0E84DD7131AFE5D2B5FD0CFE9FB6808899E33F02
480BDFC63FA3AF7BC66D575C19EEEF211D6DA0D4B1F9066D238278D83C26CDD2
CF0F04BAD37EB4BA2269B66E1170B1CD061160E3BAFCFDD0E6099F8C28523CD3
7CD4B5AB191586DC0958DE77E7963F80092F29AB6618BEE117BDF0AECE6C558D
55F391196621A4FEF4CD7B526C179DF1F8731C6731FEE56DAC17E2003CC04C92
53E3C9089D51B0F938128348E4604744524656512A36DB53AC0BDDFFE0409951
0E38A4345A579FF836D7D9B0739C42A8332805973D57466F61142C925791DF27
2705AFC5C480180D16381AC57B429121213B5BCAE9D2CBCEBBE67AB1F90A5B4E
FC836FE4D2B17D35DBFCAE0ABC5F94B589BD56B687DBE941F9B3ECF182D54E0A
59B2B2A834231C470D042B5780E6205462DEBEA9DC421E4ECBAE3FCBD0DA5535
A30623CD9F3DB8D8D1AF04A9F1B12C3C03A4172FDDE5C6210D8190597A79D79C
0689002705604655D9D3FC3439E3E220717D98CE82C5D9702C09CDA618F34A63
79622AB6166C304EB0FFE46B38864BFCAB4E8BD42ABCC8AEF0C1F40CC6E0A19B
A330003B95F235A62435CAAA3E16C4F102F62E5C56ED74B4D9F4531DC559650D
3EF19FC074B5D1F9410C58FFFD90FEA089C2E55753BE748731E3618A2E8E6F35
E6327294E2ED8B4873D9A1DC12A234B9EFB41E70E7641669ECFB816ED04901C5
EAA1C7CBCB57EF45F5974C622619F821E9732EFFF3B023B22080CF0AB852C863
8532F5ADEE29792B371B24A9100701E1CBFD7735A2A07B73473277E0E70E07BA
6A3481FDA76BBB78B135A3F045FEBBC210A1E9F09140F88D4999B3AEDE2B9822
5B05D3B7819C7E5844359929D4BA11C16766B3DF492C82EF9F29DCA43ECCEABA
D578F8D1BC4131D7AD81417646064AD144DCF01DC090F28D4BBC781F18EBF346
8AE0920E9A2EBE52B47D2E13D9F7AAA6DD537AD23F1B31B85354610CE30CD329
5ADD109FB0C2E0340773297296917A25182BC32382394E14C45C14CE02997B6A
8723BA7A8C0FD7495C30576F0AFB8D3FD83EC10E41BFAFE369F813F4FB8FC834
6249C73CE126097DE2EF061CC78FDC5723B85AC6822885DEB450285704A51FEB
E4A477FFDB170AC6AE64D81F5E890D5FE6EC76D55999AE6B41EC79214E366A13
6E23C5415152040E39725E618F87DB506E6036B6A1CBE7E6A4D89B946469EFE4
474E0903F1DA43A54786C0E035AA59162739C7A912D9C4F8983DD1A79FC2293D
D992CC401EA1A42F0D9A48B9F4D6C48DAC62EECA548BE8FEFEAE60DDF0507559
D9AA9319236505AE9812E6A68328863EFE38461BBF5FB8D5B00DDE702B2A9482
66E8F202E56575B8806747A330EC503FC5BFFD77153E8E4DA32F057D3298C1DD
BEAF43958C6F141C8CC836E49351D0ABCE039D3A2192405145FB2F38D7D0E0D3
50BB4764302459750CCE5C319936642FDB9C3676FAAB9C40E67B3135282297DD
72CBD5BE65FB3DB71F3ED8A53326640779BCE0C39BF73B54A155FCFA6E263F86
8FEB2C2A8261AB4F14B4EBD426A3D90BF339C4F3B54C07D17892CDA9875F95C2
01F3160C94AC3C3C4AFA5155C621879D69FA8A3F78E79D1D57677BCE9E111FEF
3812CF5FEC30AD8140446B15B804C66CCA8EA22D11B3AF9D4D3792F2AC4FA321
A99F4FA22BDF83E1FF17C604E11B40F7C917C972897650062228FF8CB80D8F08
D661A86E96D00AC6F750226B2F456EC40CA8D5DCDF79932338EA1052E2999F95
AD90DC1AF0690BDC9B8379A2112370545209E8A0ED3D5051169199D5DAD68E32
262D0F93DE662CB09AC88AF1FEE5AC1F747E95F61FAE133E976DDC8894599B83
B61405FF57B113D5A28ED6BDF25362B6CA091E93CBFA52BF09C7943C213BEA4A
A58B077AA5A4EFBD25DD8935F59B9871CB444F24016C531D06079525DB56A2D4
535DA8069114D8DF7353309EA1912AF3C831BB3FE1FD08EB6567C0B525F775B7
FB390F495ADC0F6EE2E58E860D7EB5722FEC9F9212D1B9A5AACC5114DC206EE9
B042B92A81960980B2D0F6EB9A4708AA173579EF5D0C0F81BEACBE86CA7EEB54
850F717FB106ADF037E1991B88E00C13E835191F3124D8695726DA488B2835B6
1BDF02970E90AB60F600678A47CB2C6F29584B8DA6569A9CC1B4EC4302F9456D
1BA2FEECACD901F13AE0D05F0D16A7B5FD3E01DC86C7416F4753D486471FEE65
487E997075FEFCC8D18A3D9E58028D9884DB541DA4CC63A096F711219BABD641
CCEB47E228B5EFC86BAD731A52B4AA8F41F9864A6465B49F8ACA25168A97B10B
1C9D598C9CFB1F386B9F0B59363343E13CB075B6E7E3C6943A114835DDCE2285
6C17365698B737AA1342B1C2CA2267B0B6522215B7BADA955F8411E7C500977C
1190F02ACE765022561128C83414488A8F55928AEEA188C5C4D807CA0C516429
A16859BF732E01FD4972684789806E47081E8DCDB00C45288D19725B4EE6B9C8
2DAC4B3AAD2931446D55A01EBDF0AF2ADBB1FAC3F622634B652B9AA995E00661
0AC3270E8553AD9B2B1190197355A3923D8F6386CC9A55E9934F517E37DF29D0
948D08E6BB615E84E85F35600C2ACD5141000A30AFAC73C7E6BD4FE8A9DC18E7
864F5A49B218DC0D2A34CC8A7059EAF722ECED269E041D178772DBC6ABC840FB
8275F13BD9FEBDB07AE242BBD6A09570D8D2F3E53FB900ED206D69D858FF6781
26D1072491DD23AE098DEE920847302B7CE963F5073C655011C01FF6262CFCBA
6DA6B952370A3054DA9094A6C584CA726AD8C73AE280FB8F25DBD60EB455C89D
06D2E0BDB6A9DEACCFC70192905DA43346CC18391DD5B4EC9FB8FFCD38C09FE6
0A4BDBAE253747DC0B45E67AEE6980C57EA2981754D056D74C7DBD756AE0C394
A30132A06A03A4C1F6F462B67CC69A63618DBD5E247C0CC9E957E551216030CC
DEC2E5305CC205E53726BEA9464BF5F9A95BE751653BF1DBDD30EC52B5ABBE70
E94B8B7B9DCD0A8C9160E19F7FCE8608499B67B4E3BDA6A5537F435F418D9C9B
BB7DC0EC38910D058A9B9CA5A754D8B72AE3435267A03F1E12135FB89C9C6E9A
E6FC57FF8D72F544F3C2807E7BFBFF55B85EB1AC4F64B35F3A1CC95995E1F2D9
96B1451B685EE2717C38B1F9253726C062FB8162833DC989B52F9E3E26140FE4
EE37F47BD9DB584EF81887B0D6D8A68F8A50A90A4C0BD8FAE017B50938249ED6
2BD11EADF79C124537D1F0A636E1C8746C0E081E30738213624998459ABC2F94
A4DE4C00DDDC3BAFF6AB8DF3AA13B696233E66CC92504C74F5B617532355C7A0
5B7C781AFE80DAB4B8494823D93A6995096CB7F8B8D4EDF68D95439F10FA850F
21BF2C60CCCEC7FE9E6F5E2BB353B47D0AC976A8C3BBEA891B019ABAB7F3122A
E272DF46A8A1C13DCE7EFBEBCEB62FF41F93B914858953A785677F92E2EC6125
6D33F5596450E4F077381490A3B9B081D5442AF5A1B2AC681EE5002D7CFE0DA1
D37E898C4EF3190AC413E1A8355740B6E1BC2AD470B2034E1482BDE6BB15B587
3173ECCA910ABCDE7774EEA93BB1BBF040DD9FC2BF91136F3A2C066126B6B284
24B480CA3D618E541005D0877B9182F570A7576901296922C3F9A39AB57603C3
4A7A25CABB60F6AEDAAA522BFE43C5902C530533893577C2B684AF7804108190
EAD0544EB8C87F22C405C8BEB2A36F745C376FAD7158CCCC556BD6A9AE3B92AA
7DC7A7AAEB5B028708DAF38A47609336
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 47 /slash put
dup 70 /F put
dup 73 /I put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C43C8942435D0AAA3D9055FF808F2C3C887A3C469BBD98F026D0A59E26BA9F9
C2144CFE49A9AD892D4D31764F0AE3A10644AE3966B0A790684B14D11FA49785
EC5565D2B2E584CBFD85125F3FAC133338DE35361943DCE9AF05FCF2840CE512
998D42CBEC52B57B79DD63F00985881E8463396ADA47189A94DDF951A78866F0
B8A3D9197E39335277EF2294308DA70065D910943A34F7D5F2090FB4AA42ED70
CBA469A9F64B95A6FBA4BC89DBC93765E3AE4723162DF3F9D6BDE77DD5870ADE
C8900D6346957B84C3CE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B3DA102B
6DF94E62408E24154BAAC66B2B249C695BC0FA37A28699D9C0F3EE94AA32E3C5
8F8D7F803B5D25014D43A353D719B14B247A87898A960DF68C0C0BAF70C83917
6E9F7B3ACC64DBAEF3FDCD3A80C0AB907EE342E543D607556CBE5A9089B86D1D
E768F27D74A613F3ABF883222A8596B542EBF54E9DCE327B5682AEE5F6BCC38A
2A052EC4018AE3189DC1963BA39ACDED8F0C60C83F8873FBBF0302010956C520
A7F3F8ECD0F177EDF5F4D5522C5984A3678FF32EEEB570B69C142AB89467641F
917155D646DAF3352E27BF2AA0746E062E48532256AF364EFC0F0AAE3766F75C
5219ABA60BDFF177558536E000DE326393BD44E5A4354F94E7A5AB01B5008889
642394923C8FBEAE10B9DA6182CB2CD093726B713DA9D81C070439BB472A50CE
540E95070F2E68917D487E46E57B096A9091110E2429ECE4970404797C6DD498
281B8D433210095B44764D626F200E7227653FFB8FC5AC75337DFFEC8BF73EC0
B2541C8941639A7BB21AE06C985167C6C81315D31BA55C79901B3D697FB63449
51121059A7B0B3AD28789E44F70DF567DF4A6F42289B9588096320C93CCD8B39
95B6E72E8F6AFB6FC77870F742476DDF835164985C91793253E85ADB2D82D363
69C808D4DCCA1AA8166B78FD245395A6A84608FCEB19586FE2B9C2ACF3974B55
8419E3D41DA4207A3C1D25142160A8412A23850D267AAE3E8317734C65709369
84B966FD6EDC327B675172C301A2059AC654A8652BC0CD0B0C40FF2B4F7B3D18
7A9B747651C2DB32FA874CB613C2182F8A78096BB246D62D1B89D444BC6D20BD
C6D7FD79D5AF7FA2903243DE3BD597DB2DD76A766184120C1A0878A049662032
6A3DCD0127910D85F05A5D019D6D3C675090BE51F11DB0D462651D65BEFF4D17
4C867492901A9A68CD4D2C5153C663B550C0E534C13DE0398629D2DC04663C00
F6057E7CE6C13FDF2DC4203C246D7C3044244D7066D7E9BA0F6C52D8B51EDD98
C599DDA39F9EC6C0350E840B3B5C4EFEFBE4F7C0BC2BBE76A41DA2F239DB48AA
57065FD264E5CF561CD46BD79470F27CCDBF98B455E91CC77419DD91335CBE15
75F30BABA1B27CCE32D21E174BE0508FFDCF33426B24FF0E31B6EEE37AE71060
B6A132D8C7D2035617E90FFE509292C2C8471857C1B16CCAD6E8E1B620551080
8429F0E46FB4BD9D16AC475B9EB4DB24BD57F93448C1CB3CA004A7D82F0E8FE6
36AA0178C283A547547365526B0510C3588BBD269415327C558DDE245325D09A
49B6EB9136EB4FE9C7E44C76FC9D8F505E9D2CD636CE85800041F877164697E3
44A318196B5D5948F6DF954D0F82FCE7C4CEB0F4B35F05CF099B94394E23DD46
5C46D4059D3EF338A144B3DDD61E2349EFEA91C860E56799BFD16E9B9A1E20EC
4013F88A505A3CF20F8DB3A3B06CE168D6C2209F8E451761520F319072B3DA66
A70800B584C624EF2D189201D8240018F1A728A50E7D49162B4D10EF48AF1EF6
54C04CC939F37973A55064EE7B1DB5F71D5F1122C58CB7946190501D59276C4A
999CD9DF967D4CED4DCD6D9292C6336C8EDE689AEF8A569837782F4EB04BA5E5
714F63FD4AA8F99E029B01D349F8D466D6C5C422346255866AC05C9B6F62D622
86F87422995DD54CD3A5C4084CB987C2D23A747319551FCE4EA05FBFC6D1D4C4
DDBCB500EBC9CEB41B862249B997D02391B45C270F1A243B004EB5F6C9386461
4BE4A246C94F3C71007997A2DD2477CE9833FA549C6EF62F1D249C0745595DB8
39E1CD18F3A5DD6AED5C01DE184E20F9649AF112064CC47B99D0F40DF01E2758
896E7B8F4B18F28499A0192797FC50BD8E63AA9F80A03211E033FB94AC9BC86D
33BB455B86E82F0F30589DA46D27D5BA6A597262088E332B8F3DEA3131F13A70
D4C278A78B9E8BF10DC6813398F3618C5093B488A8D7511C2B7451C89DCEA1C5
8D8DC2319A035AEEC8318383BE95BC8ED9D3DEEF9B1151DD6D70412C56FA57F2
974319BF899A9C80E1B217737ED81B43A42C710E4B32169060BD52D221DABFE5
D12440CF577D0BEE98ABDD0B1F66FAE307ED02C66A52321CC24427E06FFCD1B0
DF61652D9156400AFD116B30D406DA41BA8AC1DA1B3143638A1B35149CF6121B
D9117727E59BEB246007793E67E540786BBC786BF6AF5B2C270A9B744162E676
C972454000D0BB356E03EB8C82CF2BE080AFE3D312EE01BC951E37BD52BC305C
F5FC05B948F92991F6BE69B89A780FDC43E0F98CAC6C2B80F50F45DF5FADC058
573F632A51554C787D8321A8586D6343E040E69F43FC3B075756084D360E8A97
FD05F7C4F52A5A19C934514CAB7E78614EF0CC2A5FDBD8090129F378B4211780
42E75C023C76763C0BEC219D50854435A17AAF6617C0333F229D4CA354E77DB9
C4FD4678F0BBC619B6A13CBF6EB3E4A3D614BEEB926233F01CBBDBE392EF4AB0
27EDCB44FA708C378E0780DFC2E8CC546E69FE91348A8E54BAA20377C304C252
40A8F1F94E32B08B1B4515B331303EEE3A7E4C6B1F70529B3E27A363F34D54DD
F7A3B2F1BB5B7EEA7AF91B3309D9B5BC71884A0DB2808E2C307A5E8947964BA5
BC182F8C270B572B0AFEC5F13AC78DA8DC29AAB2635AAF4C5605E71ABB4D9240
394C799E2AEBCF76B06E0A76E34229598D1E7499DA95EB1C65E2BA2EEB3600DC
92C2BAC8C40AB489E7F18CF8D90C962C5F166D49E62E852409332C5258524578
E801EEE5B3C07FE5A4818DBAAE8D6D97ACFC7D6FA45542CF3DB2D90E6ABB09BE
A26E32AFD6DF9E284C7344AC53197D098C444216D5FF68F6A45E36F41EDFE657
EBA5A9BC45A103288A0588DD4DF08139F7F0455D35E226EDA2FDFD1099106865
4E3593104D338854356D6EB159C3F4A9FC1D358A41E2FD262D672D87DB224A69
848FBD333C50590B9E7A64B8C1D7E6BC28F9375316323727EC5356176AED4563
56414A0A052F9B7385AE63188FDCC68E57E396C63B6EF42F46D86ABA23623E1B
14BAAD9179B2607F58B8784CF0A7B8220046E876DB3687B3DB8013F5BD248A27
E6F0AC657DC81C646BAED102BC1CF7F12A95F22FBDFFB3AB8AFC332F18AB4FC0
B60E8D85B50E1180640E66422CAD7F24B626618891A7DD3E254355FBC8B4F308
DCE54211F23E68D2710B4599E197B68B1D03243900B2E794CF64C5B0C43ED76A
AE035374E8D58053E9FA4011DFFE5458588CD119D98BEDF1D3AB03A3EC388B46
ACFE3BC73ECC08F1B0464EFBCAA64C63DC5AB3C46317F3045DB826C2531B83C9
37B58086D1012DBE84BBFE3EE67C031234666C4ED7E88261DF68905D36FB0EEA
FA514D0FEF9B070C16EA113BC67526A47C6AF1A669FDCDB1F07D553CFB87E618
C956FF7195BBD8D1BA6DE95677FD8422643641A6B3DBF6B39B3FBC31C3951A70
82B6A9A315C440C71B577CE800D32AD054F3866AA952C8DA465A9875954456DC
D0DB27ADA02E3C0392E154ECE82FACC841DA3ED2DB7D5EEDC04574990B5F1E66
01949CD56FC19A83BB768389E76FECD3CB3F42DE78DD0AFACF4783FFDCF731D5
DB6E7EABC90F8628C4B07741C0F97E5FD7E0109C5F860F6402CF1255C2E48BFB
605DA435735C82DAA65D9B42F1EED561176B409A1AC691E95DCE4FB4EFD066AE
6BB6000D26EA2111F00E2CF933672F693105048B959A0475A65B97008CBC3E3E
F80FD1CAA69951220CDBF4D33548AB504D8159705A4AEC22B3A7E7C1636F2A4C
9128A3CAFF22ECE9DDF06F2865A032F0C7BE79AAD53CD96651C1C2638096A818
CAF2A95676C0D806F4EF2E58C195B1ECA815B6EC93E906928A2BC25884811DE0
D8542F773C7F6609640B3ADB3F1944B76A374A3886625022DD2C8949D414C54E
B7DB10BC7164C9B619C06236F0C3B7A078AB757382BBECCE0CA952F733C6DBDB
2863931F573AEA427328491DAD6018603B89370E6709AA8C22F5A61BA1853D71
910FDCC73EDCCC605062DB439865D5F9A45E99AB5B44E9FA7E8B360AFED189A0
AE1AE223FD3C65C0424B33C21E5A48467A1707D513C3870632B4ED35E8135A50
329D2D8598E7C24A6B4F73AFE03D112B9E513557FD8E098317FF4DAC57F74B9C
1401FC264A21F7F260DD2D92E274009458C11114E8F7D1FFED5A4143E4B213DC
FCB1EFB73A6BF1BBDD3FB0AFD0D8C07E611A22783FDE535E33FF56509E55E8DF
6B74BFAF2F46C164A1C33A055FE00722D5950DFD2FCFBBF4E5FFEAB1E38CCB03
3D645AADA0BFE3A98C7DA7BCC1E8B41637F3CCF44C789229B5AC48BD06AA2F7F
BE0E1C2C52833E52FCCEEE9300EBD34EAEFAD4F222DD479D63A55EBCB7E8D8DC
D006963C369CC2A249F2C4306BC60C5A5F3C0CFB7E6182BA7F8E284EB52297BC
D020D1DA74FB1BE3D1FAA3F5607B78FDCBD13C61C901114AFCD62CF1C654F89F
F339ABA299FBE69EAC197C9708C32F57E266A2561CA82FF730332A3749EF6FC3
83027D4A933C1576895C10686A83DF489236B545917E5517BCE920111A7386CF
8533C8398D1650B58EB0CFF74695083C08D9AA8DB2877E98E0E771517B08CAE2
DDBC1A13E37B2F5E182CCCFB3C3084221DB325398CD0705F6D2487862C137210
3501DB1A32C248D6A4C49E93036263EB916EFF51175ABFDDCC8D794E2F7AF318
95B982CCBC794C29213F87AAE0B443A6F97CD5C8AECC7990D48CB532FA8C3FDA
CC1B27FC203A18615DB93A053D095E938FD45B008A79F8AEEAF6C5F324D99729
7590E7C9FDC7008BD271005CC3A15AC10DB7643FD730F00C9B2749B3E9D82654
E3FD164B8F0CF01CEE2AEADAAC385AE78D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 70 /F put
dup 87 /W put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
readonly def
/FontBBox{-33 -250 945 749}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089
7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461
1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760
207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B419A9216F98
1063948FBA78EAA663E7C1319C92BBC79EA6F8562E1D737F2700EB07CE9FF99F
E0BFAB79D3EC949317A34320B946FD5B251776A46899B5FF793547B7EDCD3A6D
EAEF039C33D35853A7C731CA3A6195B245761ADB8BA6B32866EF3A8DF3CEBC4A
180070F94B94A27AE1E33C8DCEC9967CA6C784C6B34A9C351A526A4ACCD7FAA4
30E8C36BBDFA0DD2DE52EE74B2C777F2E40F8660F93907F5D54C83B99892CFB4
FD81E9DEF60A63894CA79723F559D9DAADEBD7D0A2C4707C7E44437E3150C530
85A98A30DFD5B9767136FC777C08054499BCE76042689E3F23A4433380C0D2F8
4FC745CDA0FC237742B0F13479A53DCDA32541103AF1C6673F5900B8A6CE838B
F8D2851B3F76982DB47F13607EAE1451C62993C05BCFE6BC261DBE7EA6E08EF6
A6658D8A408EBB487FB42E427D89B3AD4F5DA08119D1394D509D1472794DB1EA
F797849BCEAF00D87137DD740B84D87461871AFC2DD4F572BABD7FBCF6B8641E
20074CCDE61A52A8607199F655131ABA5520E979298ADEB2E08ED881680EEA57
F92EF513D634623AB6C540B298D097D78E2D44295E15BD493AEC3B8BCD1CF23A
EE3D490A94EABEC93E894DF4E74837DFC579AE6CC66343AF0ACCA33341F8F13F
C561370DF2C8CF3C581455F106385202D6288FD1BB692BAD53921617AA578B7F
21738734CD17640E6EFA47B8168B76451F10A16D5D771BEF288B65F13FB1F213
23DE1A08F3A1A71EE3780CCC45150DF479F13695279643A5FAF3FE882F553ABA
6E03D623BF2190A59BB7BEC306FD7A7606A485CD5AE0E125F9B2A30795704C67
7D57CB93B711B56595E12ACBC4DFEA634FEC78B269EB08F8535FC386A9B496D3
B211FAE25CA694A7C2FC211812AC669839ACDB62E43D73ED31A469F2929FC93D
5AD2677C1F24CE1B80BB0FB6F98BB4B2B086C02F6BF611A7A9DAF5C6E59D8A34
B196D4DF53E6069D91F7D96EC4BA67D609ED8A5F9178931CFFBB574C0F066A81
A4A575AD0A23D7A32C77D3392652B0EB23AF4CE2BE87433743B9D105842DE224
C9CA214FF450894FE752541FBDB5A35548914ABDB3B304DEECC44880E9E61ACA
FEF8EE5D1892C6797CC248CB52DB9EAA79500E54D16C180D331CA76656480CD0
A4B10D8CB2F505514EB1D688CF240E2CCD7423F012296C58D1F88787C5BA6B1C
207B5F0AAE1D77D996714C9414C1A0A18A4A7BB0F40B38F62999A43B26695365
CE4458F27058EF91035539597FF218E82FB010634BEA7B2E41C671CB6159A164
0EFC058E5C475A1F5ADCB07DE003A3CA0EED8D78378A3D2B75EB62F670757A98
95E1B6BAC3D7C94EA0056FC1604D8169C1443E8F10DC346F666E1BF85C8CF9CB
5A40EFEDE1915942630449A3E810063848C0A10636432524E259C75F714B75E6
F98D758E7A58798C2F6232EDD5D037DC3FDCD990F21D27CAB717A457B99A2541
BF443175E738D360F31207276A793CEC05BB4C5450E8B1882101F56A9A9A3D45
6D52B9F7B11433254F0DC5085204588615C5C343CED02628A2CC549A54F85433
E48A7F8996585B13CEF4196392DA852C735B7A1CF3D2DDFADBBF8E7D8225B90B
B57B7138460126E623F106B4216A2DB7F0C28544F063D021FCC15C97575F311D
517D16939DAB4DFA9BC8298EFE3DDDA35F7337613E18DEF460D051F4C91158DD
38148C0D16BD1CDD1CD758056BCB46E30ADE04132F3B8230BF5C426884D0B264
6041FAD3FD3BD47E2E7497051FBB204BC6DFB01324B7A1518261051EEA4A098E
46971A5526227FD3431947E0041F4AC88D61D9109ECFFC456C0917C67E6EEEFB
72E4B11F525063F07542871786625A40DD603C3AAA731FA0C8589F4D96F7408F
E69C63EF2E29CA9A428FC05B480403FE66CA8985333BBEA6C00FB60F098B268C
5C40CA31033B3A371F0322B711BB962091ACF062E6757AFBD09F58953261BFE6
A509723DDE82F37D36CEF1177AC1AEC4A4661AF482571E4157901996674B3E37
DF3E80517C4FE13925466EFEAE5D919E613D9BBC67CE8484003954CE16230399
D8BCD7E6A7D9E9CD6F81AD712F40CB2EC9CFD50ED92B2DD2D7447DF73FA1BCC7
5D770E91468762A657752D91148D982BD88BC1CAB442F937DD5A137E350F2ECA
FAAD0F44D70BC819E4F4A23D9082BDA340671448F24D70A2F164F3D0780E6A0F
A20F1B0487C30CA4E055D8945CB3817977AE596685A972A6E597D104DCE10B5C
87399AC890D9D967E5686F672FC01A1209C18FBE87AEC8DAB68F431E6171015D
3BD451769F5DF1BC820043B318DF278C59DA91219F51983A7CD3F35D5B6DA777
F0E3DD58CBD26EF990DC405519319D24A8EADA1F8A393FDA059CBFDADA01F678
9967BF81F4D2497DD0F59EBCE54319C366ADF35B54C5A5B81CA358D6DC7E1844
2923083E3266D43C37FED667D9D313B93507D8D5EA309465D2FDD0FD8B691F94
8A225319EF5652B6B4E5CABF620C7848F728B712EC5F60501923EE00B591871A
805538AC78DD2D0F055663C02A7703EFF0A3F63A010046E22E593C37BC8CF7C8
AD0DF74A7D997D1E9A8169D929BAFA007F6FB7CB1EC8BB0EE54C1A187DDA30D2
46B4A75CEF925CE6EF253FDB89025BAFE1288E550025D18EC1BBD255FAAB92B5
E20CF1A42068211A09C50E11E91B209F85D525C718C0BF047448D139514BF5D0
14C75FAB40FB10666F777A120945C0A8BDF69BACAD82E7242105B50534A7008D
A043605CBCBEA4EFC5DCA95A1A79810BCA97E0072711440A7567F603B3B851F9
F1815E1406AF5AD2D2924F89C1D1867318130980CE6CE0EBB7946D78A95838F1
793096852E2F9FCF4C90EF9EB3C02C027DBE6D01AABF2B8110C87F5CC3B681C4
555EE82B4C5F914938DEAC4FEC92925FBAAB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 59 /semicolon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F90A32C4175B6BFB279
024EAE1B04D721A6C54FD62484F8949B2CE9B87D9CEE04DFF82BF14931B3CA03
AA5F701B6F80BBCDF2C427C40A51597F0B1BFA25EDD7CE0EAF2EC676BF0059B7
15DD5462BA30DE78A08DD533DC0E8D85F9DAFC5FD842F417265427E0F1B71834
D2BF6EFAC3CCC40D3EF3B2E2080F148441BA45E5D0C0F7D8416730AF4BE4FC93
1E965594E0364F0D4F1EC48004CEBDDAFB1F0EE0A8222358EAC0F62E6BFA3C9F
46875EB4C999219B91E6147A49A668505667030CDF3495682B79C0F614AAEE68
D976EFCDCB04127C0D7325A2211E49CD316935A0B472D1F9FFC68F7FBEBC7582
036CB393016193A9783DD08D647E89C5BA4EFC8701BCCB6A5C027C4FA8644C06
251B9E33FFEBB1B84AC4D4B148205C8CA7AF5EF97F2788EFB0B71473AD0F5EB4
FC43F46602C53E53F5A6D1E445439F65967C51EAB636135D9BD2741BD5A40FB0
0BA9C014DA2144FBE45320EBE7346738CC89DC5A220E4699C15D3972B2F11AFD
558D5735B892A1F69C8C1A81CEC44E02384CF2208AA809245DE5FC9388B2DE22
E4845C63809DD186795AE95EE37FC779EC901F98B66BD25C51C3C277EC3DD8ED
C1F4506631B4BE9CC512BDC51EF2549586EDC4625552C9A14C82208E1BB306FD
B529B6F74CB424081F1BE82242C5F3AEDE8BA1D267A8DDEEAD9F052945F618CF
98B34A2FC9EC8522B6B5086893956A3AE691DCF9F59AD902E79E2DA3392F4234
435AC61CF23563E138777FF1CAE7A19C43E3D09773346C7BEBC646C4C269DD71
9A4F89FBE2E3EEFC8D28D1F6C13B3E51C9F788F4E3F56DB1EF2251CDB2DFF70E
FF1DF979EF97BF05C93C696B530DC13E4D4D5CAD9543A3ADBEEEC79E7127DA51
CF95AF7F7DDCF288635B51F6767AA43804991E0864E4AB4D51A4DAFD12A7960E
55E6FE569C23C87331A72F31F46B9B44EDECCDC4BB365A0BFC270A75EBE98C98
E7E648920DF308FF9CAB79D7E5916C69D067DFB756210E43FF643DA312F617DC
46725938544B1C57A9E42CB7615F1FD662DAE00DB4B9CDE6C5C82E634BDFC54F
1A9F0449A4E7F7FE7C5198D11C0C04945ECA89C32EC8E7C53A7EE87E1FA4ED81
A82468FB0A3D2577F38AAB867208D83877E6DF1E9263E294C100FC32E150682B
D7E72A81DC48EEE2A2BAEEACBE2D12F73886F34150546AAB0421CF31218B0EFF
BA6742CAC8593DE970B2C883FF1366172C8BE4A7D5F35A100CB853666CB98F33
83E618E7A904F5326D5FAA4C18AEA81E9FB3C23C8DB48C1A1230CED5D384980B
88BD943AEFFA5BA4A9C1566B2CA1F7CF321BED127C7018C59994AA1B9369F2DE
F35AE0A98FAB37F95B3F5D7D432CEAA54A62D5F50E248B92C9E9BC86B140640E
F49C2844DD42F14DC921EFAA33F3D39D84E2C365DD05AA8A82317D6D2989AD8A
876F13387AB6E309AFBA3E78F62FF1AAEA6F49A8245389E4C3E17BB2943011E2
069ADBB1B9CA71D377ABF70CE27A4859BB6EDD7C26C959944BD4B8A454CCC62F
42F6694E1776A6E5D7B3D30C07A7F28A120BF29F78CE32E6408ADE8ECCDCE161
497C1D6A20ECCF9D0CA523FEBDF0931D76ABCC15D6515AAD225952CF50ED890C
F29D03CF092D4522AEAFCE25E8AD6A1F167AEC3CE0282DF3B8FC464E7ECCC576
6BCC262E978D9854E093786B8257A9BCBABAAC2CDA9051C50CC613DAE652F149
036D178F8A833115FBE76626A2548D43C9A508F15B3A7FCE9D0C78BEABE3B0F4
C682EB119801EC633D73095D512FBE8AC1D057B313370E945DDE7650CA024207
2CC5627A9F0A9BFE3646B9B2BB44675C8A59679243751422A8D39A9C95039801
7A68E21C6EB2BA58076933708C7250D189DF75E8A99B0AB6DCDF581646608CC2
5F51DFCDC2D36590F62001F5124D411B66BA5D15B03E7E79EF8BD1BC3723390C
420296F46C653C5034F10E9A61A448987600DD2221690B6E5847EEBA30F4B00E
16FEF297CC785A0E24C979BCFC45424CB8B76BE37F79711741F6C4E12E3EE450
1BB42D8B4CE6533F323921F8609A350A8E222F2F54DB345A1AAE9C5A563B784C
181D96887C2DCC3F43A8E05D7F439A382E6137306C9B76141FA6728B64E5AFA7
E30A741925D318B88AD70415E74B40715457A36A3E3D9A94A3EF7EE526FA5F6A
1EACD01AE140C181D5F4EE59214E3C0A813766897CE29BA8325CDC9D0AB4FA70
A82436521E2B8FC3CC881EB17D1CFB0D7A72D3C612B56C2B4ED95156F2C50707
9CF9D0E2CD07694A9034672DA30A9C2FD173AEA85D0FA958242C7F31F5C37E4D
358164272EE1D535F3599FCF1CEC726610D53D86E79B68ED5BE766BD677D29DB
16E72A954FA65574411667F0EC994E67EA9CF19068822E7AA01C9B8132CD65D0
27C389B2F46DC2B4C15DB448175569C52B84B262D82255FB1C5459C58E10C4D9
4DB8A9DFEF8D665F1AD18AEFF2E6BE5E9649C9639C99CDEF5DF02C3229A7B35F
145AB79A0EBE0A3D471B7D02EDA98FCFC0A60D52365DC519EC2EF4F9C6A6F6B4
DB3AB2E6F18786DC4DCF24636B5CED064FFA302052DB90C85F16892BAF8B2B93
A2A4954AB97B9AA1F8242AB25CB690A54D4616D9F6344A241D2F45B888305942
9B019DC2A10F0F42933661678055DE5F1EA6054A9804A321DF5FB2B1F99FFE5B
976EE3F26CBBD6563F82BAE5F90B6A5455D3CDBEA8C6B1B5AA15ED8E87E9251F
B637452160C0A91334F9593F5353B2448F77A1E1E3A5E5FCA17402FC397E1B1E
B95C3D20E70D394E19ADE07304D308DBD3459710A46414760CCEF198CEB4F49F
3B847DF4E77944E65A2D8A2BE7F6F1A56DE8E1E5E62FFDF5E7BFED2EEA754CF5
CC19AB18E3455381B5677B0CA09F49383001393208DAE18C144B35B815137DFD
BDC420FA893A3EE80C5CA2FA6E9DDB5B1711039316598267AB7428BED4A3AACD
B9A505326AFF9A7FA92148BBD05EAB405619F3DE009E2416EB8E512D7501D187
680A087C02525203ADBC27A6EE9B687C18D45F27EE5803B236F68BCFB50F3562
7504828A714CCB74CB909507144981943C571A6FEAA82D54AD3034966A19C635
5EC1235B99F4A7B8C8AA583C18CE0753CC0DB5FA1CE0128323BD46156C5669B1
BAADA9E1F9C2F434B1167AD6F31D4B3CC6C446EB10EF3C302742A07DE7F8AA37
95099C1F868172FDD3201F30E30FBDB80942AFFDF4A9EC24DBEB7F12B076C599
19BEF0CD8A4B606E48623E58FCE51A0E81D2A1171F4C176D8FC2BE51E58D4A9D
48BDE490E1DF12C30F7AE15E0F8171A6F0A4E5A1037DE8598B30FAA58EA45E2D
FFD1BCFD167B58C5C1303D4F1F1BE61C54CF5B893C479300172958DEC3609047
457210F3A5CF5DC1449709EF05D4E1E19437DE80076BAA24031067A22BE62999
E5C40927EA108DF1189971F96AD0AD664EA000A7244566794F83AC4FB6A47849
2E44947B40C546B138CE94F6984D11789E63D6086D0DB3BD0E85766B6CF1E974
93589B05CA666FB6744146F85C4BF24A4E54968356C556E622C4A1DB5ADA0354
EBCDDD1C2C96054490FE8B361FFB07D67B7A90D48056A085920472BE1352F5D1
46F5867243C3E67F8ABAB6E31FD7382509D4674B6D4979DACD5B79D8EAF5FEAF
C0BA18D549A4461CDCF2E07FB44D3DA12AA7E6DE32D8B6F3F6D0202494D528F7
E686557CB24318022D086D8E5C6C7C2FA0ECE99D21233C379D774EB92C87E4DF
FB1F68BF74DF0D55A3DA5D09AC0B38E5665C1828C9D1ABD3167D0E2EED863ADE
9E8D7490CE289626FEF3C3B6EB9A7CC1F080E33ECCD750B19D293016E543C623
47D69397AFD250F62764159B5621D31B52B546DDCDAD9DD54BF8DC495554945A
DFCC7B62666EBD74F1E544E183F547BD881C5EBA1DCC4620B1B94CE88E5803F9
7E78DB7344CC4BFE6EB5DBF0D34F0303A3C5DBFDF199BF64784623B9666EDFCE
2003E755C8DFAD5E445C91AAF49B2D01DC19DF0959631F3ECFC96B2252A9755B
AEB8A3A3A8105A1AF36089BA207F213C329F471BDC1B8860B819F7D1C3D8C1A6
D1B9A9D29EAA947928FB04F4DA5169CA2EC5B6BA2C688916A714A68C5E74D202
0D067EF97548EB02A2A7B5C438E9E69D336EAB6D78005857EC840CBACADF13FF
5BC8C2BCC2062EE49B0ED861E8F0E0D824979F801D007E58AE8F71AD80A6BECA
787D16EBD5CF9A71A774230C50F5D84F32520D73400AF4341E49BEC7F3ECB60B
9F7E2754C8F0D7F52633F50ED7600DCB82E027CC3849696AFCB60E0BA993A198
AB8FC65A3A395A9EEBC3EE0D4AD40079E212B5668DADCEDE3CDFD4B14D32F457
1FB55588E483310C5AAC89824257900112EFC8439CD2736D7665B0A15C92F967
A0ADDA705F42BD158E561F65D9122E3281234BCDACABADB62B919C6CF9C48EAC
26F7CDE86844BE6EE40A1DBEF5B729250AB77426A55FEA2669E541E9CE8A6F95
CD1776261068776DCD8CEC501568902EFEC138EF4A8C57013EAD8A2E8F586B55
6291AF37B72DEEE4C79ED115128651CD7FC2B3E74ED86CB43D42B930AC908940
AAD68070A23EE2986FD881CA570868DB2D3C2F4CC4AE46C371C80961744114EA
4E951C5398A924A227316EBC675EDF9C6573D5031D90FC05BCB2F1DAEDDEE9F8
00F718CED066A3DDCB8C19C678E19701C54BDE9206B78752B373502A6478F5A0
3A934BB14BAB3B4708B45D2B675072313DF2222120D6EF21DF074EF0F01BAC79
C18BA5BFE2FB11C2F62846F57890B1B3C68F76D931DE940CF00721BA6DC44342
4378B5B603422E902196AA85AE9E1EEF46A0A7F88C5C04E714EE45BC8F8CAB31
DAC802B930E9E99203743A6ED8AC4F7FA56B33C24C387EEBE4910D1020F3FB7F
7C643A2D41ED1F1187DD858914DECC9DACC326F60452F0CDC7123540A6385AED
C42A36AF77CABEBCC439DDFCDB98AB02DD99CB0051EB191FB219E74A6DCA00F4
038F8195FBB0894B81404F4FDDFBFD730A974338331C88AC67CEE85FFC655427
3D3D7BC859D6FCEE47FF696EAFB06CA2477BE09C0BB1E60BDD132F777520AF50
2E91C44669004C3EF973BD14727DE10CCEC40DC3FAAA299AF27622BB412151F0
834216E283C7BE5C57A3ACFFE9DA6832C3794472E52D73EE03318AABCA20F173
B4302DB7AC5A5E9EC45A5B93DB78938AD96E381B83366AFBAE29FD11901F71AC
1E1C5EBF45052A4D0456DC25FC58A35C0369365F2B138C37493931C2BBF2B519
0CAC6E72F70B8C6DCAC5AE6D6AEED3C0C5D648FFE052C5ABB22C4D97A708469F
FBE47EF20F28262BF63D86F162CEB50CB67E92D443C3A21A466BF8F8BB7C31B6
A751025855709ECDDC04C3ED18943CCE2530B0026C2ABFBFB65793294CDC710E
637C211DDBAB61E9BDE75DA324100DC4500B7D90037C47F399E09D3D7108684C
5BC3E77E36D0C85133C86DEF83870406CE8FE379B1E853B98450A68140F6F598
AC0EB367A55B7EFFDF7107D28379A62187079D75C7852B34BD3E80C580AE0E1C
26187281DAFE23DF0FBF77D59F1733D966C5F3F07541C3BF765AB3FCBA2800CD
46E94F4745DC8377A9857B612E820813B41A1A26EB37DF47AA766414A7434D29
8CF4B8DBE4CE030F2F4092D800EFE525A59DB8B7529C41039C5F71E3C7961EE1
2460CEBE8E13DDAC6D8E5BFA7837A382743BD408C74D75A38EE7340B202A69A3
2AB5F56204E002EFEEF30B6645210D3EB84A61A7CF0B1EF9C74944F4E691E315
5C02BF6E3C7753CF021BE4EF77F41C40D035037314B66349FCC69A3419275566
4ECA6B74CE59439B1063D2BABE6065594EF29A988E43BF8E6A4D2D2B3A2DAFEB
2CBA2144D949E9FF743A3FAC00199477000A96023064817B3D87E4814E0A9C24
F6AACA7E7CBE9641EC02E8870D2D43249FA86B27993F04ED8318AD02E5E0D2B1
DD64826B6766C9D72F7AD2CFF27BC3FD60615D7EF86799525E9F8431CA8073CB
E8A326B6B3B7A248CB0478A5B9B36664EC30BA67070F505C0E038F21D0DEE61D
D72A0E887999D91A506202EBD6805EDAF7BA4E463B59435E5E0F6C31DEA03CDA
82264CB6FBCB3EF30BA5A0E52A688D382069D439585C453BC98D7781A160BE69
F8C4F26C4E778001784AE9A7A0CC2BD53B4A80221386016935A1EBB541094C94
BF0F8D45D767DC253990493F300F1D51D2937DEEDC135652FF07B22C1E6931AD
6347E1F65CBAEF06083FC897696804FE5A302F34811663A25EE0BB1D7FF47D73
CA16AFF5971D2561689246F3C538DE6D6CFD103797295EFAF8425CC2591AD246
2430BB0143BD5330DD333AB6BB3F6ECF69662554E163E8DC9977454129E69F23
1EF75CC9C79F0926C253315951D00BA18BA728288557943C2B835BFC2460C9A9
F58EF6455269515704E051658DC9BE7011023E45BDA1BB8DE2A395F391FBFAF0
D0FB6C2546C09555E3E783329210FE326BADBC69437D118C59FE7A37BCD0F2FD
DFB432D72A9ED0B118D082E3C39257F56A682A81A89755E30BEBF1DBD960DEA5
C05AFDF562D7BBEE19F0EC765134D23B9A4F97C24717BA32D23CC94D266347B1
72EFC0F33F506608D1D090AC7BE720484F788ABC1C6C695B35F2D40255E28428
A167829AF49A32F18ABEEFF6A7FDA5368031899C7DD9E6EB3F1ED7F606846BB5
185875683DDDBC98E46D1B2BAD5ACF6208BCB0F043DA9482A4FD6C81251EA8C1
26B5B96C98C03EDCBF2D1F3BD3079099F3F37B44AB71590A2673B07C2BF69A90
4DCDCEC5145A766FA29CCF333D7E4672805CA106FBF567B8D386D6E45835F554
600D29122300B9DBD61D6DCF7C70E7FF0C569885CBDA2DC97776FCEC80E436F4
51A659E575A554BD21C2143D914FBE6C7C1FEF9D180F0C4998BAAF38DA79AEF6
92DD7BBA127918F72C4D0ABE0662B364DFEE64D1ECDF58C69EB37B1890AA1813
CBAF6DA3BA39A827DF29B61A338E710279222DAB22C5ADB0FA77F55DF7C5F14F
44733AB14BFBD97591C9B0437FD6FED4268EC4BD3D95F549CE9606B807779C53
54C65F15CA079295BCABCD5F0D1DF19771F32B6F793C8FE85590EB6A386456A5
09836B9C32FDA7F9005A948CC70779E1BEF4F259AF9347A515FC47C25C30B9B1
F773899A2E7318ACF892A490A8955C21243522E208B9B05DAE8847AE225D64B1
E2E58693BFF6C5D293EB41C852A8A649E06D8D2F37B94059A2D7DC75792A2C31
1CA2C04FDFCC725B09BEDC711487FCB3EF7FD073E2E0EB1B24E6FDF125981139
05832AFB17D17B1FFC937BE07E4FFDE380E8D71BACCDFC312D1CCEF67ACB8FA6
3E2FB223BC5BF7174F77E59C0F3EA5AF633C333AA0031E47295EE9CB1771118D
2AD003FD05097F30A09EC356E4E64F9DAB2BC36495A4B58C7922295D26861780
851C90782412C1F8331529E727729FE6CC929B72F102A959EEE9388FC9763232
0A25B8951764CC78E8665F0DA4B27180F793E8F462C9161E155886557B7ABB10
AC1117E77DABA097873E22D115C4E498755ACC1B81C989DEAA4CFCFD1FA4FECB
CEEFC2EE639F5BB8F19FD12018BC270F4D15B21D3E0DDFFD1BBDE0BC28263035
C29BFB05D5288329F99833C1C41A79C26DD1AB19612B8271414ABAC1B1902C7D
3AC7E8F93AB6AB832EF578546B852076DAD1B8A257D4E93A6FA495FF9AF90983
8FC2C1F6E5372152DC322E894D2585DD483B613A8CCC67E01B38BD840EE8B38B
CB755E2EFBAF70D38369C97577D4241CB4C1B62F06745AA74CC832563AF07573
28FB6F4CD7A005F7F5C084154E66278A0AAFE2A93E1178FDD3EC4C8549F132D8
29AEB3F5EDD1CDDA66F49CA04A8A99CFC0D70F33541270E7592199DA05968E26
646B590B7C1BDB1E045998C8CA65EDD41DD55002343084B2AA5C3E149DDBCAAB
514DB89314AC66FB43E688BFA2698CADF433C496728C76FFA1491FBE28E58CC3
9DD5F10C116A3187BD82924610A4F32C06666D73E125DF559C7583B2B09BB051
54ED11FD1DA1986114CE58EADA1D9C399FAD5ECD439F0500E35AB3DBD7DDD5C8
556059C9757E2A5BAA97A7E208926F464A76B33A57217CB7DE71D32581D4D0B7
4ED02346205EC3DF0496CF05AC0712490720FE5E33CE8139A5835301F450A8A0
24FB0BEFAA39E16A1116401BA7D0824E9D3D1B5433062442FE815BDAAD65BCFC
8D446FDCF580C995A471D42ACFB5CE6E17F0E285684D0D742B456C040A8327E2
4A0DD77F6E815EF6A0CF9A3B0896DFD741722E0CE4073E6D921F463551A8D057
81B626D254367815BFEEB4FB30648C0E6E22A0576892483B3B421469189B444F
70247376DAB5A7720CF5652B00C72C29517237278B2CB6B6872AFA9D779A8C55
4574D1DD9925A1F6398260CF75E42ADED67318D2F7EB5CFBBA9F8964D33E8F01
23DBEF37D8A3E6B1AFDC3DF51C6F1B0834EC7D48AB2D056D31CB1907EEE6923D
0A75EEFFC90B2496C3E76EDC13C0F3185D0434CEB3F2B270A8410314F25BA4A3
6045D62BB43FBC092BF23FBF08BBD3419A9DFDF22E5F956C5B0D3BBB9CBC09A3
BC0A4E331645C3F1C7C5087A5CE1A080B37DE6B3DE6D3A2AA6237AFF9A2A215C
78F70AE235D34A8BCEF70A6A8BFB254C54890C9C00712F5538D19C905CBA5B40
5A87C14105695CAA558A4FACD572AEEBE1FFFF752C39265B59255169B5381AAF
3DCFDE3F5C2EF1D34BD865514E7963BC49409C2F0F37C176C1462D4F1FC23D9F
A13E2A448DEAEF11ECDC4D85022375225EFC0617540F56DB2439F629C6A84519
F62C0AC99EDF715308DF7B3E5296FE4B8B486FF46D7EE11A4D196609BED10057
116279B9D509B163A9A30689CEF7B9E59835EF9BB9362308F88D4D2CF5A4060E
CA8063A4B922AF323BBC7EFA2F8FFF59B19AB1FEFA4143B004EC52297DD59FA3
375C9B25F5BAED05E2A2E5C128494BB7FE3F55E0EE503C06D415F625196C0E89
CE114E83440262E0E2EDE35DDFF684E85CEDC08BD2A0230468AF1A9D7E842CDA
77CB0CFA1C92014D2468566871665C3666F7A306B107C6F55077F51EBA268ACE
79D813BC83F18ECA3A29311234F2EEAFEC10ECC1E5834813BC2B88E54C26FCFA
0A6AE95922B57B53742E6859530688E195D2E8D603C5D9F9C5A018C9191B61FF
35F218D07DB4ED26EA9A9F6185CC19ECF5301F2A2C21C3C5AE5849FE0389585D
A073FC83DFA5DBEA3E004F06BB8787AC4BF473DDAA19635A744B04A91C247DF2
FEC8AC82C16CE1C97050670D96E708CC225F743511ED564AC5DBBF43840E818C
873154812E9827C05DC73D652AE550F765B7AAF28F216AC2CF4378B8A7C5E3DC
46F8B08265AB044F4FA21246191EA64B1A6CA39825B1EF492F4790CF7B590DD3
9C198DEC21B7CA865A04D0EFB9F505DA6929CED66CE70181D8B7C55917145749
9A407DF905B63F88228289B881625B21BFE8B8A9326B4688D4C2E349B151DA6C
5ECDDA2F02BBAC0F3F992F87978D91D4A61EF0B9756B159EAE57D03EDBEB69D2
C518D5BEB2247C830B82F00C5F708D0075898BAC9928DD21E149463DEEBFAB14
844D826097AAEA3A99D647EEF67C42A6E794CAB4EDD65F434CF03BB957B0DD66
1F1E8EF7D29C100E7E9FF16BF348F0E6EC1EB9E92DFA6363C5A62CCEE00D62DD
ED58A543A8E64A9533D57B8D5D5A5801BA08CD9294B0629CB6C32995D62EEB28
199AC583A3CDB3B7D3B6D9751C045D86A69AA9006C0B2F45DB3DE2ED99DECDBE
ABF30B4BADCC31CB6B785BCADE0879C4FD349D07FF752F8F0273858FE432BC67
AEA3A9F98FDAEA2A37C76DAA9D3D38EE6EDD066A93DC219C1051007B9E9A044E
6FEFA6EA622480B61AF1528F6FE3F95B05F4D77ADD8A8C2A232759E1ADD2A44E
C916A1F893A177876A231640302D84CE1856525232F6F3542C241E17981BB8FB
095681A83E2D7499642CEE129920CD692747B1C37AE347D2E213128A74A01A4E
2AFA2205FA685EA27740DCC44779350AB41991717F05B9419E2EE45F5242006E
5FE61BE25F7E45912B7DAA423EAA1A363D18B45F2E615980C431DF277552C7B3
D56DDBFBE241CFFD6A41B4D3B21C3A34D9EAA9F7089533D8FA82454278F7438E
75E182C211BED07F3E06C309C14926E5BEF7C20C7FC15924574D11F6E699383B
E42BD91986B0EFD1779CAACD5D6427880BB729A690CAA2990403BC57E8D13276
28DFE8B1F079B305344A3BE730C1965B7E71E7115EB7B2D9826CACEE9BD5EBFD
8CDA95A84CDF97E7452EA9F4353B6D79878EEC24590F2336F81C078D5355F207
CCA2FB1C0CBC8905884FF978458E44944553916068AD4F7D5BBF8CF78A37F94B
2A71367F4E5E1CD1BD11F593FF2644FB9720789AB8B3B1F971D0B303934921C8
740DD463F94C9915CA3E639196E2E61F6306A1F2879AACFBA2497F02C81237D5
FBDEFBAA180332C2003393B175762F3210D171FCFD7B5D65FA6F64004F6A1386
FEEF0017CC8169CE0D3F72C096D2F02767A044F6402C7E12A9EE0D36712FE8CB
3A0FCCD0167DB96B3518AB2ED5E25AD10FD3A5D82429BC07E215F52CA22519CC
578B0FAC9C445A346FB216200147167A07D809001BE66A39573C4A1A686107D3
7AC49673ACDB7E70F99FEAB9012C6A5F79565FF97A206B8B0A3835B3E4868FC4
B2FA8DE66172477B3397CC60397A07C3BA98182A93DCCE4F3C39080BA2E41AED
D4002CD4957D24854CF045D3F7731FF8B4060C0E035FAA6FE3F2D20B3A35317B
E59CDF58E7AB07AAAFF484440D1B0780F10FB12E8967C0BF6E039CEC2CAACEF6
E88F567C5E67D83E4CB00C4C372E4457D0CFAFFEAF99EF8AAC81BE2FA0FAA1F8
E55853AD4A9586D2AA615174F01E2E4987A9EA3F357D225986F7B9B9B5D2E9E8
1AFBE27847981B8AE96EC80B7ACA9935B528234AB7EA2A84F8833C9BA8387B0A
510D7B803A7EC1B96AB71E21913B101A3C1107F5CE6558C477390B07C7453732
0ED6BF25788279A2E2617D1526D3C4BB1734D0E7304799079BBC4216E73B521D
67C4E14607916087B43C5B2F24497C64764B3FBD4154FF06365DC1B930C4BDF2
23B401C8FFFF3F17D4B7D4D7241DE26F490A500C3343E47F7206EA16859C1A21
4F4375044B2F4C9951AA5F4297FFF120E8EFF80B0D9F9CB51D640073D5D5BF4D
7032505EEFEF3A41C254A00F94192A7D6F242439EF41B77C2CB96C1AECCC93A9
C02AC5C8772CC623293EDA79C378787378680DD67C016A0846ABE2A437676809
F0CEA233823B9F731F84E86589AABB6C22C610E4E09F087B359798527768748F
0C1388DE54425DD98108CFBED531E185AA1624C5BF5CC21DD52B53675CC19A9C
81D7B699DEA793F759A83C9D6DC9200682A6DEF30D308C1B556BCA4D9752B97D
280AEA38F87752430C07AA0ADAE86B47923C24A77AC0E9301EB5E31A258E5EA3
4F17679070A1A13337D05259338E7D9365F9C0D5ABDCF4BA7E64842635D361DC
0C089A4E3E9BADBF79E90A27DB5881EA9D02EE2642A031B6DA226A259557D94D
9CE6C86046357CEB0954D5320D97D74CBDABF38155A446131220770ECD18A623
CD05A7152D36E7B1C4B389C0FEC393741D79F529EC21246351FCDE8DC5BF531B
40F4A3E40DA205F680158CF9403E7D5266E030667137A70A33AEA95A9E6E2658
8F4F89841D2D7158F915C7947738BC29DC7F7D4E4883599C029EF5D43EF6AA49
451647FDCD925DBCA86CF8D7C4E3D157CD8E8324A53C1E17E4AC95C786C872F4
0947EDD0563436DBF4915437283CC8BE5571E8F9E0D075C1D5E9290FD9E62823
C557C976B5652CF686287706356A0FBA1AD36ADAD9A5346EA93A7EF147066431
7E0D0085CB249191A1600B0731D12D3D0A7AB880A1B4DF5D56FE92CC69042B3B
69501CB0094F94DE1470AF18DF5B4E02F5EE71FF8A2B14984AB8A3BA65AC1746
0110F5BC39BFBCBDA4ADE61111B4F89950A463B99D1D1AA27799EDD57804CBF7
8866D298F531C61FFA89941B2DE855C696CBDC2561C3D62818926B79609ACEC0
4FCCE0598755E8DE5A89C6141EA33DB2D5AC935A4AE67FE941DA3ED1DF7B8E80
E33CEEBBA179A4245A351BB2F000EFF0280DE32111B167D9A1571281E383A25E
63DA70B22C02571CB83774D67242E6BB00D9A1EF52E73E107D5493382899E061
48BEA2874D21FD688DEC883CA56E55B43360E67429063CC8D68757E6837CA9F2
2C4C88E0ED3721AB327ADAE27A047E8D0381E6B810AD156685FAF8D7C6337817
A68F2FE7D48FD9FD1ABA42801BD2DDD73753F325DA187BD4E3580C07EED41510
1F6D946BC0C8C3A5999ED2D0C39D0923F0741D7F1E2829B4E4355A4EB8E1F635
01F63E6A167D59A2A23528D2602173E8C6EE21C0EE87DD32857CF3D923415823
079BE9330BC5D129FE1B1E5521B7BB9E6E771A6550AD000DFCB5E359828B32A4
E7490AEE3F2C1CFFDDE6CFE43735FDD0518AE21BEC7BC759F6F6B702D5795BDC
1FB17F9B37562BEAE4DDF76136938572870459FA7C700C235D40DED96B8B177A
47A2063FF5F2AD372D674110243699FCB55F6FA37BA354B5E611F20D54DCA842
98E1D0EAC7EF94DE05B25125FC334ED3A621E662246F2F2AA4987922E0AB4D50
8161F89C39A6CF70AF7A36DB5E71D0301500F6BEE65AE138DD7419F8CF69F66A
6173A13EE0E52B20A8B5C173F54090F560A30F34818DC841D96B4518833359AE
D99C4ED906F4C000CF9E325413CFD31EB3B3005DE472B3220A459409D6803737
1B3C7BD8F25740E6070C093AE1FF1098CD6339B231EC949B6DDD59388A841854
E23197602CA11B1D0D4ABF3932978A3E956102297EAC72B5875D71253AA3399B
0C33F0E32AD35555AC56972578D9905B761DB0EDA4F8F34EF216B93339FFF883
D0F69DE8694BF9F21FEEE488D3E9A29942B360D702797A64ED1EA26EF3D8091B
582362D116D01F48238B2409A92C6528641E1EC7B6B436F0C92474D80C811F18
97FD8D0CF1972B5395AFF70D30BFDFAB86687DD2B011FC8ECE784710DB5C8622
2748287793547C9C44BC355B6824081A9D673AA5EF99DF9C078994CBBB552ECE
C41ABF1AE9DE1CDF6D6B677417E318EDD2D4D9A3E99807D707B93CAF8DFC554C
DC16443BA61AD2680B90BD23C65913E6222FB31BC1438675A504F7525A6CE587
A54ED94AB3E180D1ECEF548E41FBC9C38032EE4661C6862B5A8829A150CFA095
B45093D8E22C6AC38C69DB5A89E7B0ACBA45091E0C520C7D24C5A0B94F30E1A3
80E817371C5768F6341688FFA004BC3FEA254AE083BCC65F89D8E8C198A05F55
DA07B7A40DFC7505A12D79076AD558BB872C801891F0F00612C4D634ACB8F7C3
C3025C6535CF0F5D8C438FD6FAC8013CDDC841E14C8EB72600EE60B5A17AEAD6
FB72458B968E57B135D06EB69F8BB6EC355BA33815BF13268CE6D4A47DF05A13
8264145ED41F90FD95C54F24F484C3FE28AE23F5E71ABA3198794B5508A05862
4A2455CB102A914626C618D6052429A74663C4671A55906BD4570C9BBC549C58
0747371C9B6900D90284530BFABBD0B44625C0987121DA3ABF8B29B2A2D83DFE
D014D6C85634D5A9FD4BED261375E93C0ECD38470E57D6AA08C52A583CE4A99F
089B0A6C8AC55627F9309CDFB5947B681377556338A81778776D992101B1F28B
38EE7290353D067171E719A89D661F9F94C57FA1E3E58887A959A2202BA6845C
ED2311582652B3585402D489772678C55040FABA6AB0F3E476E158731924BEA3
E3D56737F480EB04ACB646B31868455C6F16205A9645D0B0998AE10DC7523661
680C9FEB221E0EA5BD7ED51F33BF72D4BF032BA66FB9FD7427572251DC55E220
0428AABBE274890C4118D66541556F1570BBB919F8038887A7E1F036DD58334B
BD6D5ABCBBAE11E7CD437D2BA96C5D6B1E7DB912AB0C793672B034EEFD5AC12A
ECD60708E382E6B1E316E356A3BB5F75E304D65FFCF077F499074895D0D29E96
AB4957F6E4787486E314D5ECB961F7B309109ADFBEACB199C3F3639D5A22833B
E16A52A649425F699C62FF5C65D73E7E8E5D0EA67AF1F4E99225EBF46A57814E
F1835B21C290206D33971C89AA8A9775AF318A16FB96C05E209E8CBE865B2098
5C0B9B7806750CB21FBD9F34CD8B07E614F14F4DA19829AF408D27F4A2125E2C
538653941EBC9A1D7F336B3DBCE6BC26A3E3CED2888B05DB41725F9DE091FC10
F56FB37ECD0D1041DD9D4E0559D5F42C4EA2E11F75B4FB8F85AA6A6285A3734C
92B174584E093D9DA6750AAE9AE7B347CFBB4C23EA962F35C34ECE25D0B1F5A4
F09401F51BD9426100C70921A1262C2997E4D9DD6D520B1B17AB246DCC951B00
8F0F1FEC33AD9937A9C9BDC73BB1988E473872B0943B07CF8711748A56119AE1
B510373743C294218C82BDACF138F367BC51362EBBB49214B7FF03B63D098880
EF7B3D3C3999ED963AFDFBE812591E9252ABE6D6AF11BE2FBAF37C39CC4EC67F
61A4708644599EA7D62F9675387D84178CEC3BCA98313EEE6EB86BEC1ABA3795
5C534B2A67E20B5682A84707F035F20CB8E8D96E304C88F7ECD16BD596FF9088
E50FA40A81A2D55B0EBDFC04EC80356B7ECC5434EF512752D2B78030FCBAC020
A17094612584F3455CAC38EF66335AA02BE9E7C20641C6BE5CBE8154E11F8F2A
2F9F420BD28A4205B0C75261F100E1A26352B0140F94715E7862AC33F9996EAD
B3C10742A5FCA54A23B52249871802482F031059946DAF245A2935F8C7B56E3D
AC250AA6D050A2083028373AABFA69D9FB87A7CBBC07F0E6236004F6895CA759
D5D5E821472A41917DB1CE166E83F1548D4A8CBB9D41E252778BA5E9C9140979
28D582D931D3C039ABCAC0EB07CAA6031F6F29695339375FB91214872036DBD8
E600A6A97374995BC81BCC727E4CEA9FC1D7AE638250A857B3AFCC2C58C9C11E
F5741421B9C63C97BC469263F21A252CE181C3A1C0874D7BAC7958AC5C12BF66
AD8AD62CA1FAC138A58259ED4B407C9922A96DAF6D4B4F03BF1BCEB8A454F4F2
8B02A1F55A5A436A5C78F3435180270A5914589E5F8EFDE8323CD3201DE8BFF8
1E84E4D9527119BBF7935DA07371F90B8E4F867A24F13BEBB5A73A2A348F52F3
226F4ADCDAFFF74C3449176C149807ADCAE7153B0B0143F73752DF79AEC6D9E0
97FACC59A4FA50D9A333F6C667B01E5E29F8D9A67D49EFDD694A293C805D4485
59882E0975DEABA67A0B6CAB6A5CA5C98C4C2EE46BCD30F3AC3220FEE71A6262
A83FDB47BC05E8F25734CF67EB516C3A1EBB93A4775FE8F0F1C709F51ECADFCC
EFCC6A95246C3514362660FB3830462AB6A4D7B3F099105A75FE2831E2674357
7E9236B6CFEED0DB8FCB7176E9167B9EC748113C9362D82F22E21C138FD88658
DD3880300AE70BE9398CC6074746A61717279CED2C7920A4316D41100620893E
91B3CBA244709322241CCBD290C0D1FF3A4BB0DAC7E687FCC6F56A71D348031C
EF7EBAA7BBC32E1DD942FCE2C3D36F4BAF5F3B4A2B9538DA7A0B4FBE0A651DAE
D16C5AB502265EA8049867C8BCB9AB6FD509AA43893950EB69BA953F24BD9DBC
A82EBB3B4F6682CB82E64E3CC004233D61F7218E3BBF8E455A43C285386E7E2D
E20CAD0C05B3D30833480A1F6C176804432FDE74CF4C0E89F434FC16809F6805
6A9E9AC728AFD420A5228974F1D5E78DB57576C5C80340009649E970069DCE65
042DB6DDB2769DE31AA1B42B57DFB88D64D55E4DBFA8A6F48546FDBE29BEDAC5
A06BF05B890D7CC0FDCA22C5C4572A76596C90184EF7ECD6509505B5AADFEC56
F42F55D35B6A9221C25B9A421E66ACCFD6BFAF884411D9D51587FC78EB57C85E
F60A32943DF8BD95660BFB885F79CE94211442DA50D889E4C0CE43EA9F9A59CD
950F0A4080A3604A879C70D7C0183FC1D48FE223E3821667570A0FB48F9B29C8
C8B0A60A44AA1F865AE83973B89DF1D0A2A7F6228A56ACE74196698CD652DA79
8E932C51B08607A7F60B01586900A3F6D9C249E2F1E55102EE5FA45CB2EF57D5
1657C564A1A8C12203A0BD252D249E41980AAD2820540697204ACD3693C5ED60
9637F55701E2EDBFC84E32F7D9E30E6ED25FE1D24C38FCEBA5BCC5D3AC3B1B16
C9C205F45FAA7192997CB2881C6AF47D00300FC729A006E1E2CEB1D3853C078C
D8ABD760FD303BA0F9B29AB16EEDD965F521109E877CA3CF9030D7B7B904D1E7
087EDDA279E657ED665BB370390519DD3B344D253CA3BF4DB6F04F3A135EBC94
5116CF9CDD9F3CC8D880759E624CAB862BFA2F4631C61D90DE368A4D688F69E7
57B8CD31AD41358586DF667846394914B3DAED64A6A6CE05BC72BB956AA2A5C1
73B2D228DFA643796A6F6FFD73F360ECC025EBFAD44D53FEC6FFB45A3BD1CA12
CC1482A755CE3BEC5ED1B146B501E2262D544F49C60CAF71375711F439A7054D
87713201455590749A358E8D1D7823C0627C81E39779610FAB8340A496960DBF
4232A1BE5C7951B14F5AD704319E782824EB666FA2AD1222CB2DDD75AE4FF996
58C0F8A504290C2BF077B5A0C2E25585574357A35A94855890DAF0ED0D02D320
E174B92E91190EF4C08E39E5E18EA588EA750CF2C7E067D019805DAFED23FEB6
86B20449717700EA2A88E2D3C758187C0EEE2B13D9101B5B9DAF42A61ECE87ED
D63F722265893F2D69298188DAFD739CFF50B66FAA42B78F6E098467ED55250B
A07E6863952F52F322CC2A11666A613F9C40D90F33866F28ACEFC71BF510CFE7
146B8D467C553D87385C325CD11E8EFBCD38D1E558C8A9A9A4263FBC26185B5F
659958198D4BFCF1FBD92E3C774CD0AE1383AB50C569FFCA31FC39410BCBFF5F
C40510AD09E65FD287BAA5E5D6D09C458869335481F236852F63F150D81F0462
25CEEE9F5BC650FFAC3E4064F738E3CFAC3064DFB1DA0AA2894C812F2851DE93
0EC193582AE633761AC6ABD9ECF4F76B4975CB3CCF302431E20283E21C204BDE
25BFEB568F4940B4AD609C7563047BBA0981851D856CF2794F76AC67F4D22F67
BB77D1759456BE5F053A23763BA3D68189C2F00CFE4DF70736C1EC1F7B336BD6
EBD6ADC37F58424FD71604C36CB88F9409F87CB0772378201C867AAC15E5F329
CDAEB8166378F1C7CD4BC64598BE26D16332920EF8FFCE43270589B69F4EE787
E154F0E26B38AA984CDD5BE6942EC04554ECB20399432400D2211F80E0DFF1F1
D1EE65F8BB1BF8C8C441E0669E29D0D84DA392EA64193CED360BA6532F8B7293
DD95C94339CC659C6547DE2275CAB3F245154132FEF68861A329031B771153B0
177F52AFED7F2174C9CB16C5ED6A0B441BD7BD1CBA470684202101B63AE66E7D
85EDAE287FBB3796793B28B96013D4D9D89C4BC216E858D467D03E6D4EA9A059
5EF417D402F9B4D74AE6753AD9E691613979A8BA8BD03129B057911C7ABD1DA0
9323F68F3CAF0BF432F8FF37FFE773DCE29E9F86BF1030F44FF752DDFE10772E
1B17B46758C931FF91E9418BA51FFECF310F08379C36B3A3F6A327DFEF8066F4
9C2AE3BAB3E65D1BE46F752F6928D36FAC96FA01ABAC7F09A79D80C73E8FC904
D89563A11544989126767C415B31F3E4240B716EA93E0719C28879F870BAE044
62610BD3316145F18B3F952C4040B566E5E042E20C55071430415604D603794E
9ED52EEAC7A0BA97BCB1C83CDBEB739ED8656205A008C8D7BC8C35DB0FF303BE
037A2B4BCAB11A0428178A7D1B8CC7467DB54D92A319784D7C0F08D4200D0F8A
6705BC8D6384D30E71F6135757F948B43897A9BEE3DA279C0489F2F81E41F49F
684AC61BBCF62DDC39E130E63DF1DCC1503226A07360F06953E20FF956842A31
2E30519963F10BE53CFFB49192F753255AD7704EA054A15F191E148182E735B4
A37C899EDF4FC624D89914CED8AEE92F98885B356AFA3B09C8B9643F4BCBCDC2
DAD540BE8E179E92B4FEFD3B1CBDA143D7BC9CF0DF16E4C7E11AAF47C65AE1B4
A6F95FDB0A1DED943E0C7FE2579C6BD09F9FA81C55A512C59B0E80D240911DDE
7ECE217BAEB9A2B12034DFAB2517B33B96713EE3D33A8A9783A52E5D0FD106C5
FB565B97A39D63E0EC017DBF13C20FF48515D2C8C847F300108E5D3AE4F0FB8C
C1685B5034DD272CEC79BB5A22E0A348F332FF761CC9A595A762A7956B0A32C1
BE541847078C030412DF76C0CD54A018AB0788F53EE8E47D30A546C35F509BDA
0B4EC872411B0A36D3B5C9F5DC1475B8431ACDB1FE2EA791D3A63AA71CEFA6A7
25363F0A5D70532836A6A6694D09F13000337F2B33B014FBD6EE08A0ABC339D8
DCB53598A8F0E6F5149541858C513D35B763032CA4619844513E96A327B927A8
D00B8EA993B011CBC04D93845CD355742D42D9E9ACF79CBBABCA8A5412ED6643
985FA80DF5DB375BB76D8E6E9528BF149FDAF5C55996F56223CC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (mywriteup.dvi)
@start /Fa 134[50 1[69 1[53 37 38 39 1[53 48 53 80 27
50 1[27 53 48 1[44 53 42 53 46 6[58 1[72 99 1[73 66 53
72 1[65 72 75 91 3[36 75 2[63 73 69 8[27 13[27 2[37 37
40[{}40 83.022 /CMBX10 rf /Fb 140[34 35 1[42 42 47 1[21
2[25 1[38 1[38 1[38 1[42 13[47 2[56 64 5[32 2[54 22[42
47[{}17 83.022 /CMTI10 rf /Fc 138[73 51 1[51 1[73 66
73 1[36 2[36 2[40 58 3[66 9[137 16[86 70[{}13 143.462
/CMR17 rf /Fd 132[42 37 44 44 60 44 46 32 33 33 44 46
42 46 69 23 44 25 23 46 42 25 37 46 37 46 42 3[23 42
23 1[62 62 85 62 62 60 46 61 1[57 65 62 76 52 65 43 30
62 65 54 57 63 60 59 62 5[23 4[42 42 42 42 42 42 42 42
23 28 23 1[42 32 32 23 4[42 20[46 46 48 11[{}74 83.022
/CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 311 Final) /Subject (CS 311 Final) /Creator (LaTeX with hyperref package) /Author (David Merrick) /Keywords (cs311 ``operating systems'' portability posix) /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray Black 0 TeXcolorgray -300 -360
a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 -300 -360 a -300 -360 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 -300 -360 a -300 -360 a
SDict begin H.S end
 -300
-360 a -300 -360 a
SDict begin 12 H.A end
 -300 -360 a -300 -360 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 -300 -360
a 83 x Fd(Da)n(vid)27 b(Merric)n(k)-300 -57 y(CS)h(311)-300
162 y(15)f(Marc)n(h,)f(2013)p 0 TeXcolorgray 0 TeXcolorgray
1446 465 a Fc(W)-11 b(riteup)43 b(for)g(Final)-300 643
y
SDict begin H.S end
 -300 643 a -300 643 a
SDict begin 12 H.A end
 -300 643 a -300 643 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.1) cvn H.B /DEST pdfmark end
 -300 643
a 0 TeXcolorgray -199 743 a Fd(1.)p 0 TeXcolorgray 42
w Fb(File)30 b(I/O)74 871 y Fd(In)36 b(this)h(course,)h(one)e(of)h(the)
g(cen)n(tral)f(themes)h(w)n(as)e(the)i(univ)n(ersalit)n(y)f(of)g(I/O)g
(in)h(the)g(POSIX)f(API.)h(This)f(means)h(that,)i(in)-92
971 y(essence,)c(\\ev)n(erything)e(is)h(a)g(\014le.")56
b(Files,)37 b(pip)r(es,)f(bu\013ers,)g(devices,)g(so)r(c)n(k)n(ets,)e
(pro)r(cesses,)h(shared)e(memory)-7 b(,)36 b(etc.)57
b(are)33 b(abstracted)-92 1070 y(to)d(\014les,)h(sometimes)f(app)r(ear)
f(in)i(the)f(\014le)h(system)f(\(via)g(virtual)g(\014lesystems)g(that)g
(con)n(tain)g(data)g(structures)f(lik)n(e)h(/pro)r(c\),)g(and)g(can)-92
1170 y(b)r(e)i(referred)g(to)g(b)n(y)g(\014le)g(descriptors.)50
b(The)32 b(same)g(four)g(system)g(calls{op)r(en\(\),)h(read\(\),)h
(write\(\),)g(and)e(close\(\){can)f(all)h(b)r(e)h(used)f(to)-92
1269 y(p)r(erform)27 b(I/O)f(on)i(all)f(t)n(yp)r(es)h(of)f(\014les,)h
(including)f(devices)h(suc)n(h)f(as)g(terminals.)-92
1497 y Fa(STDIN,)32 b(STDOUT,)g(STDERR)74 1725 y Fd(In)f(POSIX,)g(ev)n
(ery)e(pro)r(cess)h(that)i(runs)e(from)h(the)h(shell)f(op)r(ens)g
(three)g(standard)f(\014le)h(descriptors.)46 b(These)31
b(are)f(0)h(for)f(STDIN,)-92 1824 y(1)f(for)g(STDOUT,)h(and)f(2)h(for)f
(STDERR.)h(The)f(Windo)n(ws)h(API)f(w)n(orks)f(similarly)-7
b(.)42 b(When)30 b(a)f(program)f(b)r(egins)h(execution,)h(it)g(op)r
(ens)-92 1924 y(standard)d(input,)i(standard)e(output,)h(and)g
(standard)f(error.)37 b(Windo)n(ws)27 b(ev)n(en)h(uses)f(the)i(same)e
(\014le)h(descriptors)f(as)g(POSIX)h(do)r(es)g(for)-92
2023 y(these)f(streams.)-92 2251 y Fa(Op)s(en\(\):)-92
2379 y(POSIX:)-92 2507 y Fd(in)n(t)g(op)r(en\(const)h(c)n(har)e
(*pathname,)h(in)n(t)h(\015ags,)f(.../*)g(mo)r(de)p 1812
2507 25 4 v 30 w(t)h(mo)r(de)f(*/\);)74 2734 y(In)33
b(the)g(POSIX)f(API,)h(the)g(op)r(en\(\))h(system)e(call)h(returns)f(a)
g(\014le)h(descriptor)f(to)h(a)f(\014le)h(that)g(can)g(then)g(b)r(e)g
(read)f(from)h(and/or)-92 2834 y(written)j(to,)i(dep)r(ending)e(on)g
(the)g(\015ags)f(passed)g(in)n(to)h(the)g(function.)63
b(If)36 b(the)g(\014le)g(do)r(esn't)g(exist)g(and)g(O)p
3331 2834 V 30 w(CREA)-7 b(T)35 b(is)h(sp)r(eci\014ed,)j(it)-92
2934 y(creates)30 b(the)h(\014le)h(and)f(then)h(returns)e(the)i
(descriptor.)46 b(The)32 b(op)r(en\(\))g(function)f(accepts)g(a)g
(const)g(c)n(har)f(*pathname,)h(\015ags,)h(and)f(the)-92
3033 y(access)f(mo)r(de.)50 b(The)31 b(pathname)h(is)g(the)g(\014le)g
(to)f(b)r(e)i(op)r(ened,)f(the)h(\015ags)d(argumen)n(t)h(is)h(a)f
(bitmask)h(that)g(sp)r(eci\014es)f(the)h(access)f(mo)r(de)-92
3133 y(of)f(the)h(\014le)f(\(read,)h(create,)g(etc.\),)g(and)g(the)f
(mo)r(de)h(is)f(the)h(\014le)g(p)r(ermissions)e(to)i(op)r(en)f(it)h
(with.)46 b(On)31 b(success,)f(this)h(function)g(returns)-92
3233 y(a)20 b(\014le)h(descriptor)f(referring)g(to)h(the)g(op)r(en)g
(\014le.)35 b(On)21 b(error,)f(it)i(returns)e(-1)h(and)f(sets)h(the)h
(errno)d(v)-5 b(ariable)20 b(to)h(indicate)h(what)f(w)n(en)n(t)f
(wrong.)-92 3460 y Fa(Windo)m(ws:)p 0 TeXcolorgray 0
TeXcolorgray 90 3628 a Fd(HANDLE)28 b(WINAPI)g(CreateFile\()p
261 3739 V 286 3739 a(In)p 367 3739 V 58 w(LPCTSTR)f(lpFileName,)p
261 3851 V 286 3851 a(In)p 367 3851 V 58 w(D)n(W)n(ORD)h
(dwDesiredAccess,)p 261 3962 V 286 3962 a(In)p 367 3962
V 58 w(D)n(W)n(ORD)g(dwShareMo)r(de,)p 261 4073 V 286
4073 a(In)p 367 4073 V 30 w(opt)p 517 4073 V 58 w(LPSECURITY)p
1122 4073 V 29 w(A)-7 b(TTRIBUTES)28 b(lpSecurit)n(yA)n(ttributes,)p
261 4185 V 286 4185 a(In)p 367 4185 V 58 w(D)n(W)n(ORD)g
(dwCreationDisp)r(osition,)p 261 4296 V 286 4296 a(In)p
367 4296 V 58 w(D)n(W)n(ORD)g(dwFlagsAndA)n(ttributes,)p
261 4407 V 286 4407 a(In)p 367 4407 V 30 w(opt)p 517
4407 V 58 w(HANDLE)g(hT)-7 b(emplateFile)90 4519 y(\);)74
4687 y(In)26 b(Windo)n(ws,)g(the)g(CreateFile\(\))g(system)g(call)g(p)r
(erforms)f(similar)g(functionalit)n(y)h(to)g(POSIX's)g(op)r(en\(\).)37
b(It)26 b(accepts)g(a)f(\014lename,)-92 4786 y(access)20
b(mo)r(de)h(\(read,)i(write,)f(b)r(oth,)h(or)e(neither\),)i(a)e
(sharing)f(mo)r(de)i(\(the)g(lev)n(el)f(of)g(access)f(that)i(other)f
(pro)r(cesses)f(ha)n(v)n(e)g(to)h(the)h(\014le{read,)-92
4886 y(write,)32 b(none\),)h(a)f(p)r(oin)n(ter)g(to)f(a)h(securit)n(y)f
(attributes)h(structure)f(\(that)i(determines)e(whether)h(or)f(not)h(c)
n(hild)g(pro)r(cesses)e(can)i(inherit)-92 4986 y(the)h(\014le)g
(descriptor\),)h(a)e(creation)g(disp)r(osition)h(\(what)g(action)g(to)g
(tak)n(e)f(on)h(a)f(\014le)h(or)f(device)h(that)h(exists)e(or)g(do)r
(esn't)h(exist\),)i(\015ags)-92 5085 y(and)c(attributes)g(\(whic)n(h)g
(sp)r(ecify)h(whether)f(the)g(\014le)g(is)h(hidden,)g(encrypted,)g
(readonly)-7 b(,)31 b(etc.\),)i(and)e(an)f(optional)h(\014le)g
(descriptor)f(of)-92 5185 y(a)e(template)h(\014le)f(\(whic)n(h)h
(supplies)g(\014le)f(attributes)h(for)f(the)h(\014le)f(that)h(is)g(b)r
(eing)f(created\).)40 b(On)28 b(success,)g(the)h(function)g(returns)f
(a)g(\014le)-92 5284 y(handle,)f(whic)n(h)h(is)f(analogous)e(a)j
(\014le)f(descriptor)g(in)h(POSIX.)-92 5512 y Fa(Close\(\):)-92
5640 y(POSIX:)p 0 TeXcolorgray 1929 5889 a Fd(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 90 -277 a Fd(in)n(t)28 b(close\(in)n(t)f(fd\);)74
-110 y(In)k(POSIX,)g(the)g(close\(\))g(system)g(call)g(frees)g(an)g(op)
r(en)g(\014le)g(descriptor.)47 b(It)31 b(accepts)g(only)g(an)f(in)n
(teger)h(for)f(the)i(\014le)f(descriptor.)-92 -10 y(It)g(returns)g(0)g
(on)g(success,)g(or)f(-1)h(on)g(error,)f(in)i(whic)n(h)f(case)f(errno)g
(is)h(also)g(set)g(appropriately)-7 b(.)46 b(When)32
b(a)f(pro)r(cess)f(terminates,)i(the)-92 90 y(POSIX)27
b(k)n(ernel)f(automatically)h(closes)f(all)i(the)g(asso)r(ciated)e
(\014le)i(descriptors.)-92 317 y Fa(Windo)m(ws:)p 0 TeXcolorgray
0 TeXcolorgray 90 484 a Fd(BOOL)f(WINAPI)h(CloseHandle\()p
261 596 25 4 v 286 596 a(In)p 367 596 V 58 w(HANDLE)g(hOb)5
b(ject)90 707 y(\);)74 874 y(The)29 b(Windo)n(ws)g(k)n(ernel)f(equiv)-5
b(alen)n(t)29 b(of)g(close\(\))g(is)g(CloseHandle\(\).)42
b(This)29 b(function)h(accepts)e(a)h(handle)g(ob)5 b(ject.)42
b(A)29 b(handle)g(can)-92 974 y(refer)g(to)h(a)f(pip)r(e,)j(m)n(utex,)e
(pro)r(cess,)g(semaphore,)f(thread,)h(\014le,)h(device,)f(etc.)45
b(This)30 b(construct)f(is)h(similar)f(to)h(the)h(w)n(a)n(y)d(that)j
(POSIX)-92 1073 y(refers)26 b(to)i(ev)n(erything)e(as)h(a)g(\014le.)37
b(The)28 b(function)g(returns)f(a)g(nonzero)f(v)-5 b(alue)28
b(\(TR)n(UE\))g(on)f(success,)g(and)g(zero)g(\(F)-9 b(ALSE\))28
b(on)f(failure.)-92 1301 y Fa(Read\(\):)-92 1428 y(POSIX:)p
0 TeXcolorgray 0 TeXcolorgray 90 1596 a Fd(ssize)p 258
1596 V 29 w(t)h(read\(in)n(t)g(fd,)g(v)n(oid)f(*bu\013er,)g(size)p
1398 1596 V 30 w(t)g(coun)n(t\);)74 1763 y(In)j(POSIX,)h(the)g
(read\(\))f(call)g(reads)g(data)g(from)g(an)g(op)r(en)h(\014le)g
(descriptor.)44 b(It)31 b(accepts)f(an)h(in)n(teger)e(for)i(the)g
(\014le)f(descriptor,)g(a)-92 1863 y(c)n(haracter)21
b(p)r(oin)n(ter)i(for)h(the)g(bu\013er)g(to)f(read)g(data)g(in)n(to,)h
(and)g(size)p 1989 1863 V 30 w(t)g(t)n(yp)r(e)f(to)h(sp)r(ecify)g(ho)n
(w)f(man)n(y)g(c)n(haracters)f(to)h(read.)35 b(This)24
b(function)-92 1962 y(returns)i(the)i(n)n(um)n(b)r(er)g(of)f(b)n(ytes)h
(actually)f(read,)f(0)h(on)h(EOF,)f(or)f(-1)h(on)h(error,)d(in)j(whic)n
(h)g(case)e(errno)h(is)g(set)h(appropriately)-7 b(.)-92
2190 y Fa(Windo)m(ws:)p 0 TeXcolorgray 0 TeXcolorgray
90 2357 a Fd(BOOL)27 b(WINAPI)h(ReadFile\()p 261 2468
V 286 2468 a(In)p 367 2468 V 58 w(HANDLE)g(hFile,)p 261
2579 V 286 2579 a(Out)p 434 2579 V 58 w(LPV)n(OID)f(lpBu\013er,)p
261 2690 V 286 2690 a(In)p 367 2690 V 58 w(D)n(W)n(ORD)h(nNum)n(b)r
(erOfBytesT)-7 b(oRead,)p 261 2802 V 286 2802 a(Out)p
434 2802 V 30 w(opt)p 584 2802 V 57 w(LPD)n(W)n(ORD)28
b(lpNum)n(b)r(erOfBytesRead,)p 261 2913 V 286 2913 a(Inout)p
487 2913 V 30 w(opt)p 637 2913 V 58 w(LPO)n(VERLAPPED)d(lpOv)n(erlapp)r
(ed)90 3024 y(\);)74 3191 y(In)36 b(Windo)n(ws,)j(a)d(similar)f
(function)j(to)e(POSIX's)g(read\(\))g(is)g(ReadFile\(\).)64
b(This)37 b(function)g(accepts)f(a)g(handle)g(\(The)h(handle)-92
3291 y(m)n(ust)d(ha)n(v)n(e)f(b)r(een)i(created)f(with)h(read)e(access)
h(to)g(the)h(resource\),)f(a)g(p)r(oin)n(ter)g(to)h(a)f(bu\013er)g(to)h
(read)e(the)i(data)f(in)n(to,)i(a)e(n)n(um)n(b)r(er)g(of)-92
3390 y(b)n(ytes)28 b(to)h(read,)g(an)g(optional)g(p)r(oin)n(ter)f(to)i
(a)e(v)-5 b(ariable)29 b(that)g(receiv)n(es)f(the)h(n)n(um)n(b)r(er)g
(of)g(b)n(ytes)g(read,)g(and)g(an)g(optional)f(p)r(oin)n(ter)h(to)g(an)
-92 3490 y(O)n(VERLAPPED)j(structure.)55 b(This)33 b(function)i
(returns)e(a)g(nonzero)f(\(TR)n(UE\))i(return)g(v)-5
b(alue)33 b(on)h(success,)g(otherwise)f(it)h(returns)f(0)-92
3590 y(\(F)-9 b(ALSE\).)28 b(The)f(error)f(can)h(b)r(e)h(obtained)f
(with)i(the)f(GetLastError\(\))d(function.)-92 3817 y
Fa(W)-8 b(rite\(\):)-92 3945 y(POSIX:)p 0 TeXcolorgray
0 TeXcolorgray 90 4112 a Fd(ssize)p 258 4112 V 29 w(t)28
b(write\(in)n(t)g(fd,)g(v)n(oid)f(*bu\013er,)h(size)p
1426 4112 V 29 w(t)g(coun)n(t\);)74 4280 y(In)f(POSIX,)f(the)h
(write\(\))h(system)e(call)h(prin)n(ts)f(data)h(to)g(an)f(op)r(en)h
(\014le)g(referred)f(to)h(b)n(y)f(a)h(\014le)g(descriptor.)35
b(This)27 b(function)g(is)g(v)n(ery)-92 4379 y(similar)e(to)h
(read\(\);)g(it)g(accepts)g(an)f(in)n(teger)g(\014le)i(descriptor,)e(a)
g(p)r(oin)n(ter)h(to)g(a)f(bu\013er)h(con)n(taining)f(the)i(c)n
(haracters)c(to)j(b)r(e)h(written,)f(and)-92 4479 y(a)31
b(size)p 116 4479 V 30 w(t)i(v)-5 b(ariable)31 b(with)i(the)f(n)n(um)n
(b)r(er)g(of)h(b)n(ytes)e(to)i(b)r(e)f(written.)51 b(On)33
b(success,)f(it)h(returns)e(the)i(n)n(um)n(b)r(er)f(of)g(b)n(ytes)g
(written)h(\(whic)n(h)-92 4578 y(ma)n(y)24 b(b)r(e)i(less)f(than)h(the)
g(sp)r(eci\014ed)g(n)n(um)n(b)r(er)f(of)h(b)n(ytes)f(to)g(b)r(e)h
(written\),)h(and)e(-1)g(on)g(error,)g(in)g(whic)n(h)h(case)f(errno)f
(is)h(set)h(appropriately)-7 b(.)-92 4806 y Fa(Windo)m(ws:)p
0 TeXcolorgray 0 TeXcolorgray 90 4973 a Fd(BOOL)27 b(WINAPI)h(W)-7
b(riteFile\()p 261 5084 V 286 5084 a(In)p 367 5084 V
58 w(HANDLE)28 b(hFile,)p 261 5195 V 286 5195 a(In)p
367 5195 V 58 w(LPCV)n(OID)f(lpBu\013er,)p 261 5307 V
286 5307 a(In)p 367 5307 V 58 w(D)n(W)n(ORD)h(nNum)n(b)r(erOfBytesT)-7
b(oW)g(rite,)p 261 5418 V 286 5418 a(Out)p 434 5418 V
30 w(opt)p 584 5418 V 57 w(LPD)n(W)n(ORD)28 b(lpNum)n(b)r(erOfBytesW)-7
b(ritten,)p 261 5529 V 286 5529 a(Inout)p 487 5529 V
30 w(opt)p 637 5529 V 58 w(LPO)n(VERLAPPED)25 b(lpOv)n(erlapp)r(ed)90
5640 y(\);)p 0 TeXcolorgray 1929 5889 a(2)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray 0 TeXcolorgray 74 -277 a Fd(In)33
b(Windo)n(ws,)h(a)e(similar)h(function)g(to)g(POSIX's)f(write\(\))i(is)
e(W)-7 b(riteFile\(\).)55 b(This)32 b(function)i(accepts)e(a)h(handle)g
(\(This)g(handle)-92 -177 y(m)n(ust)27 b(ha)n(v)n(e)f(b)r(een)i
(created)f(with)g(write)h(access)e(to)h(the)h(resource\),)e(a)g(p)r
(oin)n(ter)h(to)h(a)f(bu\013er)g(con)n(taining)f(the)i(data)f(to)g(b)r
(e)h(written,)g(the)-92 -78 y(n)n(um)n(b)r(er)f(of)h(b)n(ytes)g(to)g
(write,)f(an)h(optional)f(p)r(oin)n(ter)h(to)g(a)f(v)-5
b(ariable)27 b(that)h(receiv)n(es)f(the)h(n)n(um)n(b)r(er)g(of)g(b)n
(ytes)f(written,)h(and)g(an)g(optional)-92 22 y(p)r(oin)n(ter)f(to)g
(an)h(O)n(VERLAPPED)d(structure.)-92 250 y Fa(Error)32
b(c)m(hec)m(king:)74 479 y Fd(In)e(Windo)n(ws,)h(the)g(last-error)d(co)
r(de)i(v)-5 b(alue)31 b(is)f(main)n(tained)g(on)g(a)g(p)r(er-thread)g
(basis.)45 b(The)30 b(GetLastError\(\))f(function)i(returns)-92
578 y(the)d(v)-5 b(alue)27 b(of)h(this)f(error.)35 b(Error)26
b(co)r(des)h(are)f(32-bit)h(v)-5 b(alues)27 b(that)h(are)f
(little-endian.)74 807 y(In)h(POSIX,)f(most)h(system)g(calls)f(return)h
(-1)f(on)h(error,)e(and)i(set)g(the)g(global)f(v)-5 b(ariable)27
b(errno)g(according)f(to)i(what)g(t)n(yp)r(e)g(of)g(error)-92
906 y(o)r(ccurred.)35 b(This)28 b(v)-5 b(ariable)26 b(is)i(an)f(in)n
(teger.)-92 1135 y Fa(Summary:)74 1363 y Fd(In)38 b(POSIX,)f(\014le)h
(I/O)f(can)g(b)r(e)h(p)r(erformed)g(b)n(y)f(op)r(en\(\),)k(close\(\),)g
(read\(\),)f(and)d(write\(\).)68 b(Analogous)36 b(functionalit)n(y)i
(can)g(b)r(e)-92 1463 y(ac)n(hiev)n(ed)26 b(in)i(the)g(Windo)n(ws)f
(API)g(with)i(CreateFile\(\),)e(CloseHandle\(\),)h(ReadFile\(\),)g(and)
f(W)-7 b(riteFile\(\).)74 1691 y(In)36 b(terms)g(of)h(the)g(univ)n
(ersalit)n(y)e(of)h(I/O,)g(POSIX)g(and)g(Windo)n(ws)g(b)r(oth)h(refer)f
(to)g(\014les,)j(so)r(c)n(k)n(ets,)e(pip)r(es,)i(etc)e(with)g(\014le)g
(han-)-92 1791 y(dles/descriptors.)f(Where)28 b(they)g(di\013er)g(is)g
(that)h(POSIX)f(actually)f(has)h(virtual)f(\014lesystems)h(moun)n(ted)g
(in)g(the)h(\014lesystem)f(tree)g(that)-92 1891 y(giv)n(e)c(access)g
(to)i(data)f(structures.)35 b(These)25 b(virtual)g(\014lesystems)g
(include)h(/dev/shm)f(to)g(access)g(shared)f(memory)h(ob)5
b(jects)25 b(and)g(/pro)r(c.)-92 1990 y(Windo)n(ws,)i(at)g(least)g(as)g
(far)g(as)g(I)h(could)f(\014nd,)i(do)r(es)e(not)g(ha)n(v)n(e)g(an)g
(analogous)e(feature)j(to)f(virtual)g(\014lesystems)g(for)h(p)r
(erforming)e(I/O.)-300 2119 y
SDict begin H.S end
 -300 2119 a -300 2119 a
SDict begin 12 H.A end

-300 2119 a -300 2119 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.2) cvn H.B /DEST pdfmark end
 -300 2119 a 0 TeXcolorgray -199
2248 a Fd(2.)p 0 TeXcolorgray 42 w Fb(Signals)-92 2476
y Fa(Handling)k(Signals:)74 2705 y Fd(POSIX)36 b(uses)h(a)g(wide)g(v)-5
b(ariet)n(y)37 b(of)g(signals,)i(whic)n(h)e(are)f(soft)n(w)n(are)g(in)n
(terrupts)g(that)i(indicate)f(certain)g(ev)n(en)n(ts.)65
b(In)37 b(con)n(trast,)-92 2804 y(Windo)n(ws)30 b(supp)r(orts)h(only)g
(a)f(small)h(set)g(of)g(signals.)47 b(These)31 b(include)g(SIGABR)-7
b(T,)32 b(SIGFPE,)f(SIGILL,)g(SIGINT,)h(SIGSEGV,)f(and)-92
2904 y(SIGTERM.)26 b(As)h(a)f(substitute)h(for)f(signals,)g(Windo)n(ws)
g(uses)g(Messages)f(or)g(Ev)n(en)n(t)h(Ob)5 b(jects)26
b(to)g(notify)h(pro)r(cesses)e(of)i(the)f(o)r(ccurrence)-92
3003 y(of)h(ev)n(en)n(ts.)74 3232 y(Windo)n(ws)19 b(and)g(POSIX)g(b)r
(oth)h(handle)f(SIGINT)h(\(the)g(in)n(terrupt)f(signal\))g(v)n(ery)f
(similarly)-7 b(.)34 b(Windo)n(ws)19 b(ev)n(en)g(has)g(a)g(signal.h)f
(library)-92 3332 y(with)25 b(a)g(signal\(\))g(system)g(call)g(that)g
(is)h(v)n(ery)e(similar)g(to)h(POSIX.)g(Signal\(\))g(is)h(used)f(to)g
(assign)f(a)h(handler)f(to)i(a)e(sp)r(eci\014c)i(signal.)35
b(If)26 b(the)-92 3431 y(signal)21 b(to)h(handle)g(is)f(SIGINT,)i(a)f
(POSIX)f(program)f(can)i(b)r(e)g(written)g(in)h(almost)e(exactly)h(the)
g(same)f(syn)n(tax)g(as)h(a)f(Windo)n(ws)h(program.)74
3660 y(An)n(y)31 b(similarit)n(y)-7 b(,)32 b(ho)n(w)n(ev)n(er,)e(ends)h
(with)h(the)g(limited)g(supp)r(ort)g(Windo)n(ws)f(has)g(for)g(signals.)
47 b(If,)33 b(for)e(example,)h(y)n(ou)e(w)n(an)n(ted)h(to)-92
3759 y(write)d(a)g(program)f(that)i(w)n(ould)f(trigger)f(on)h(a)g
(timer)h(elapsing,)f(the)h(w)n(a)n(y)e(that)i(y)n(ou)f(w)n(ould)g(go)g
(ab)r(out)g(this)h(di\013ers)g(greatly)e(b)r(et)n(w)n(een)-92
3859 y(Windo)n(ws)i(and)g(POSIX.)g(In)h(POSIX,)f(y)n(ou)g(w)n(ould)g
(de\014ne)h(a)f(signal)g(handler)g(function)h(alarm)p
2960 3859 25 4 v 28 w(function\(\),)i(use)d(signal\(SIGALRM,)-92
3958 y(alarm)p 122 3958 V 28 w(function\))k(to)e(assign)f(this)i
(function)g(to)g(b)r(e)g(the)g(handler)f(for)g(SIGALRM,)h(spa)n(wn)f(a)
g(c)n(hild)h(pro)r(cess)e(that)i(sends)f(the)h(alarm)-92
4058 y(signal)d(to)g(the)h(paren)n(t,)g(then)h(the)f(paren)n(t)f(w)n
(ould)g(execute)h(alarm)p 2039 4058 V 29 w(function\(\).)44
b(In)31 b(Windo)n(ws,)f(there)f(is)h(no)g(SIGALRM.)g(The)g(anal-)-92
4158 y(ogous)i(program)f(in)j(the)g(Windo)n(ws)g(API)f(w)n(ould)g
(\014rst)h(de\014ne)f(a)h(V)n(OID)f(CALLBA)n(CK)g(function)i(alarm)p
3331 4158 V 28 w(function\(\),)i(w)n(ould)c(set)g(a)-92
4257 y(5-second)d(timer)i(in)g(the)h(main\(\))f(function)h(with)f
(SetTimer\(0,)h(0,)g(5000,)e(\(TIMERPR)n(OC\)alarm)p
3113 4257 V 28 w(function\),)j(then)e(w)n(ould)g(simply)-92
4357 y(con)n(tin)n(ue)f(executing)h(in)n(til)h(it)f(w)n(as)g(in)n
(terrupted)g(b)n(y)g(the)g(timer)g(elapsing.)50 b(In)33
b(Windo)n(ws,)g(there)f(is)g(no)g(need)g(to)g(create)g(a)g(separate)-92
4457 y(pro)r(cess)26 b(or)g(thread)h(for)g(sync)n(hronization)e(to)i
(in)n(v)n(ok)n(e)f(the)i(callbac)n(k)e(function;)i(that)f(function)h
(is)f(in)n(v)n(ok)n(ed)f(in)i(the)f(same)g(thread)g(that)-92
4556 y(calls)g(SetTimer.)-92 4785 y Fa(Sending)k(Signals:)74
5013 y Fd(F)-7 b(or)36 b(the)i(sak)n(e)e(of)i(argumen)n(t,)h(imagine)e
(that)g(w)n(e)g(wished)h(to)f(prematurely)g(trigger)f(the)h(alarm)p
3244 5013 V 29 w(function\(\))i(in)e(b)r(oth)h(of)g(the)-92
5113 y(previously-discussed)c(example)i(programs.)62
b(In)37 b(POSIX,)f(w)n(e)g(w)n(ould)h(use)f(the)h(kill\(\))g(function)h
(to)e(send)h(the)g(SIGALRM)g(signal)-92 5212 y(to)h(the)h(pro)r(cess,)i
(whic)n(h)d(w)n(ould)h(then)g(trigger)e(the)i(alarm)p
1850 5212 V 29 w(function.)71 b(In)38 b(Windo)n(ws,)k(the)d(analogous)d
(call)i(w)n(ould)h(b)r(e)g(P)n(ostMes-)-92 5312 y(sage\(WM)p
260 5312 V 29 w(TIMER\).)28 b(This)f(uses)g(a)g(Windo)n(ws)h(Message)e
(to)h(trigger)f(the)i(callbac)n(k)e(function)j(\(alarm)p
3174 5312 V 29 w(function)f(in)g(this)g(case\).)-92 5540
y Fa(Summary:)p 0 TeXcolorgray 1929 5889 a Fd(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.4) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray 0 TeXcolorgray 74 -277 a Fd(POSIX)35
b(uses)g(signals)g(extensiv)n(ely)g(for)g(soft)n(w)n(are)f(in)n
(terrupts.)61 b(Windo)n(ws)36 b(do)r(es)f(not)h(nativ)n(ely)f(supp)r
(ort)h(most)f(POSIX-st)n(yle)-92 -177 y(signals,)26 b(but)i(similar)f
(functionalit)n(y)h(can)f(b)r(e)h(ac)n(hiev)n(ed)e(using)i(Windo)n(ws)f
(Messages)f(and)h(Ev)n(en)n(t)g(Ob)5 b(jects.)-300 -45
y
SDict begin H.S end
 -300 -45 a -300 -45 a
SDict begin 12 H.A end
 -300 -45 a -300 -45 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.3) cvn H.B /DEST pdfmark end
 -300 -45
a 0 TeXcolorgray -199 88 a Fd(3.)p 0 TeXcolorgray 42
w Fb(Pr)l(o)l(c)l(esses)-92 221 y Fa(Creating)31 b(Pro)s(cesses:)-92
454 y(POSIX:)p 0 TeXcolorgray 0 TeXcolorgray 90 636 a
Fd(pid)p 210 636 25 4 v 30 w(t)d(fork\(v)n(oid\);)90
752 y(in)n(t)g(execl\(const)f(c)n(har)g(path,)g(const)h(c)n(har)e(arg,)
g(...\);)90 869 y(in)n(t)i(execlp\(const)f(c)n(har)g(\014le,)h(const)f
(c)n(har)f(arg,)g(...\);)90 985 y(in)n(t)i(execle\(const)f(c)n(har)f
(path,)i(const)f(c)n(har)g(arg,)f(...,)i(c)n(har)f(const)g(en)n
(vp[]\);)90 1101 y(in)n(t)h(execv\(const)f(c)n(har)f(path,)i(c)n(har)f
(const)g(argv[]\);)90 1217 y(in)n(t)h(execvp\(const)f(c)n(har)f
(\014le,)i(c)n(har)f(const)g(argv[]\);)74 1400 y(In)i(POSIX,)g(the)h
(fork\(\))f(system)h(call)f(is)g(used)g(to)h(create)e(a)h(cop)n(y)g(of)
g(a)g(pro)r(cess.)41 b(This)30 b(cop)n(y)e(can)h(then)h(b)r(e)g
(replaced)f(b)n(y)g(a)g(new)-92 1500 y(pro)r(cess)i(using)g(the)i
(exec\(\))f(system)g(call.)50 b(F)-7 b(ork\(\))32 b(returns)g(0)f(in)i
(the)f(c)n(hild,)i(the)e(pro)r(cess)f(ID)i(in)f(the)h(paren)n(t,)f(and)
g(-1)g(on)f(error,)h(in)-92 1599 y(whic)n(h)25 b(case)g(errno)f(is)h
(set)g(appropriately)-7 b(.)35 b(In)25 b(POSIX,)g(this)h(c)n(hild)g
(pro)r(cess)e(is)h(an)g(exact)g(cop)n(y)g(of)g(the)h(paren)n(t)f(pro)r
(cess)f(for)h(all)g(in)n(ten)n(ts)-92 1699 y(and)i(purp)r(oses.)37
b(After)29 b(the)f(c)n(hild)g(pro)r(cess)f(is)h(created,)f(the)h(paren)
n(t)g(has)f(no)h(access)e(to)i(it)g(unless)g(a)g(pip)r(e)g(or)f(other)h
(form)f(of)h(IPC)g(has)-92 1799 y(previously)e(b)r(een)i(established.)
74 2031 y(The)c(exec\(\))g(family)g(of)f(functions)i(replaces)d(the)i
(curren)n(t)g(pro)r(cess)e(image)h(with)i(a)e(new)h(pro)r(cess)f
(image.)35 b(Most)23 b(of)h(the)g(v)-5 b(ariations)-92
2131 y(of)21 b(exec\(\))h(are)e(v)-5 b(ariadic)20 b(functions)i
(\(meaning)f(that)h(they)g(accept)f(a)g(v)-5 b(ariable)20
b(n)n(um)n(b)r(er)h(of)h(argumen)n(ts\))e(that)i(accept)f(a)g(string)g
(referring)-92 2230 y(to)26 b(the)g(path)h(of)f(the)g(pro)r(cess)f(to)i
(b)r(e)f(executed)g(and)g(a)g(v)-5 b(ariable)25 b(n)n(um)n(b)r(er)h
(argumen)n(ts)f(to)h(pass)g(to)g(those)g(pro)r(cesses)f(at)h(run)n
(time.)36 b(The)-92 2330 y(exec\(\))27 b(functions)h(don't)g(return)f
(unless)h(an)f(error)e(o)r(ccurred,)i(in)h(whic)n(h)f(case)g(they)h
(will)g(return)f(-1.)-92 2562 y Fa(Windo)m(ws:)p 0 TeXcolorgray
0 TeXcolorgray 90 2745 a Fd(BOOL)g(WINAPI)h(CreatePro)r(cess\()p
261 2861 V 286 2861 a(In)p 367 2861 V 30 w(opt)p 517
2861 V 58 w(LPCTSTR)f(lpApplicationName,)p 261 2977 V
286 2977 a(Inout)p 487 2977 V 30 w(opt)p 637 2977 V 58
w(LPTSTR)g(lpCommandLine,)p 261 3094 V 286 3094 a(In)p
367 3094 V 30 w(opt)p 517 3094 V 58 w(LPSECURITY)p 1122
3094 V 29 w(A)-7 b(TTRIBUTES)28 b(lpPro)r(cessA)n(ttributes,)p
261 3210 V 286 3210 a(In)p 367 3210 V 30 w(opt)p 517
3210 V 58 w(LPSECURITY)p 1122 3210 V 29 w(A)-7 b(TTRIBUTES)28
b(lpThreadA)n(ttributes,)p 261 3326 V 286 3326 a(In)p
367 3326 V 58 w(BOOL)e(bInheritHandles,)p 261 3442 V
286 3442 a(In)p 367 3442 V 58 w(D)n(W)n(ORD)i(dwCreationFlags,)p
261 3559 V 286 3559 a(In)p 367 3559 V 30 w(opt)p 517
3559 V 58 w(LPV)n(OID)f(lpEn)n(vironmen)n(t,)p 261 3675
V 286 3675 a(In)p 367 3675 V 30 w(opt)p 517 3675 V 58
w(LPCTSTR)g(lpCurren)n(tDirectory)-7 b(,)p 261 3791 V
286 3791 a(In)p 367 3791 V 58 w(LPST)g(AR)g(TUPINF)n(O)27
b(lpStartupInfo,)p 261 3907 V 286 3907 a(Out)p 434 3907
V 58 w(LPPR)n(OCESS)p 991 3907 V 28 w(INF)n(ORMA)-7 b(TION)27
b(lpPro)r(cessInformation)90 4024 y(\);)74 4206 y(Windo)n(ws)j(is)h(v)n
(ery)f(di\013eren)n(t)h(from)f(POSIX)g(with)i(resp)r(ect)e(to)h
(creating)f(pro)r(cesses.)45 b(In)31 b(Windo)n(ws,)h(pro)r(cesses)d
(are)h(created)g(in)-92 4306 y(a)g(single)h(step)g(with)g(the)h
(CreatePro)r(cess\(\))c(function.)48 b(CreatePro)r(cess\(\))29
b(creates)h(an)g(op)r(erating)g(en)n(vironmen)n(t)g(for)h(the)g(c)n
(hild)g(pro-)-92 4405 y(cess.)k(This)25 b(en)n(vironmen)n(t)f(includes)
i(the)f(w)n(orking)f(directory)-7 b(,)24 b(en)n(vironmen)n(t)h(v)-5
b(ariables,)24 b(and)h(command-line)g(argumen)n(ts.)35
b(Unlik)n(e)25 b(in)-92 4505 y(POSIX,)j(where)g(the)h(paren)n(t)e(has)h
(no)h(w)n(a)n(y)e(of)h(comm)n(unicating)g(with)h(the)g(c)n(hild)g(b)n
(y)f(default,)h(the)g(CreatePro)r(cess)d(function)j(returns)-92
4605 y(a)i(handle)i(whic)n(h)f(allo)n(ws)f(the)h(paren)n(t)g
(application)g(to)g(p)r(erform)g(op)r(erations)f(on)h(the)g(c)n(hild)h
(pro)r(cess)e(and)h(its)g(en)n(vironmen)n(t)g(during)-92
4704 y(execution.)j(Also)23 b(unlik)n(e)g(in)g(POSIX,)g(the)h(c)n(hild)
f(pro)r(cess)g(created)f(is)h(not)h(an)f(exact)f(cop)n(y)h(of)g(the)h
(paren)n(t;)g(it)g(is)f(a)g(brand-new)f(pro)r(cess.)-92
4804 y(The)27 b(pro)r(cess)g(to)g(b)r(e)h(executed)g(also)e(has)h(to)h
(b)r(e)g(sp)r(eci\014ed)g(explicitly)f(in)h(the)g(CreatePro)r(cess\(\))
e(function.)74 5036 y(The)g(CreatePro)r(cess\(\))e(function)j(accepts)e
(10)h(di\013eren)n(t)g(parameters.)35 b(The)26 b(\014rst)g(is)g
(optional)g(and)g(is)g(the)g(name)g(of)h(the)f(pro)r(cess)-92
5136 y(to)d(b)r(e)h(executed,)h(the)f(second)f(is)g(also)g(optional)g
(and)g(is)h(the)g(command)f(line)h(to)g(b)r(e)g(executed,)g(the)g
(third)g(and)f(fourth)h(parameters)e(are)-92 5236 y(also)j(optional)h
(and)h(are)f(the)h(securit)n(y)f(attributes)h(that)g(determine)g
(whether)g(the)g(returned)f(handle)h(to)g(the)g(c)n(hild)g(or)f(thread)
g(can)h(b)r(e)-92 5335 y(inherited)e(b)n(y)g(that)h(c)n(hild)g(or)e
(thread,)i(the)g(\014fth)g(is)f(a)g(b)r(o)r(olean)g(v)-5
b(alue)26 b(that)f(determines)h(if)g(the)g(c)n(hild)f(pro)r(cess)f(can)
h(inherit)h(the)g(paren)n(t)-92 5435 y(pro)r(cess's)k(\014le)j
(descriptors,)e(the)i(sixth)f(is)g(creation)f(\015ags)g(that)i(con)n
(trol)d(the)j(priorit)n(y)e(and)h(creation)f(of)h(the)g(pro)r(cess,)g
(the)h(sev)n(en)n(th)-92 5535 y(is)d(an)f(optional)h(en)n(vironmen)n(t)
f(sp)r(eci\014er)h(if)g(the)h(caller)e(w)n(an)n(ts)g(the)h(pro)r(cess)f
(to)h(inherit)h(a)e(di\013eren)n(t)h(en)n(vironmen)n(t)g(from)f(the)i
(calling)-92 5634 y(pro)r(cess,)26 b(the)h(eigh)n(th)g(is)g(an)g
(optional)g(argumen)n(t)f(that)h(sp)r(eci\014es)h(the)f(curren)n(t)f
(directory)g(a)h(pro)r(cess)f(will)i(start)e(with,)i(the)g(nin)n(th)f
(is)g(a)p 0 TeXcolorgray 1929 5889 a(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.5) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray 0 TeXcolorgray -92 -277 a Fd(p)r(oin)n(ter)25
b(to)h(a)g(ST)-7 b(AR)g(TUPINF)n(O)26 b(structure,)g(the)g(ten)n(th)h
(is)e(a)h(p)r(oin)n(ter)g(to)g(a)f(PR)n(OCESS)p 2722
-277 25 4 v 29 w(INF)n(ORMA)-7 b(TION)26 b(structure)f(that)i(receiv)n
(es)-92 -177 y(iden)n(ti\014cation)g(information)g(ab)r(out)g(the)h
(new)g(pro)r(cess.)-92 55 y Fa(Sharing)j(Memory)h(b)s(et)m(w)m(een)f
(Pro)s(cesses:)74 288 y Fd(In)g(POSIX,)f(pro)r(cesses)g(can)g(share)g
(memory)g(mapp)r(ed)i(under)f(the)g(/dev/shm)f(virtual)g(\014lesystem.)
47 b(T)-7 b(o)31 b(set)g(up)g(shared)f(mem-)-92 387 y(ory)-7
b(,)28 b(the)i(memory)e(ob)5 b(ject)29 b(m)n(ust)g(\014rst)g(b)r(e)g
(op)r(ened)h(with)f(shm)p 1914 387 V 30 w(op)r(en\(path,)h(\015ags\))e
(function,)i(then)g(truncated,)f(then)h(mapp)r(ed)g(with)-92
487 y(mmap\(\))j(and)g(MAP)p 598 487 V 30 w(SHARED)h(sp)r(eci\014ed.)53
b(Multiple)34 b(pro)r(cesses)e(can)g(then)i(write)f(to)g(and)f(read)h
(from)f(this)i(shared)e(memory)g(\014le)-92 586 y(using)f(a)g(\014le)h
(descriptor.)47 b(The)32 b(paren)n(t)f(can)g(map)g(this)h(memory)f
(with)h(a)f(\014le)h(descriptor)e(to)i(it,)h(and)e(when)h(it)g(forks,)g
(the)f(c)n(hildren)-92 686 y(will)c(all)h(inherit)f(this)h(\014le)g
(descriptor.)74 919 y(In)37 b(con)n(trast,)i(in)f(Windo)n(ws,)i(all)d
(pro)r(cesses)f(start)h(execution)g(b)n(y)g(default)h(without)g
(inheriting)g(the)f(\014le)h(descriptors)e(of)i(the)-92
1018 y(paren)n(t.)c(This)23 b(presen)n(ts)f(a)h(problem)g(when)g(the)g
(caller)f(w)n(an)n(ts)g(the)i(pro)r(cesses)d(to)i(share)f(memory)-7
b(.)35 b(Windo)n(ws)23 b(solv)n(es)e(this)j(with)f(named)-92
1118 y(shared)29 b(memory)g(ob)5 b(jects.)45 b(These)30
b(can)g(b)r(e)g(instan)n(tiated)g(with)h(the)g(CreateFileMapping\(\))f
(function.)45 b(Similarly)30 b(to)g(POSIX,)g(this)-92
1217 y(function)24 b(returns)f(a)g(handle)h(to)f(a)h(shared)f(memory)f
(ob)5 b(ject)24 b(sp)r(eci\014ed)g(b)n(y)f(a)h(name.)35
b(Other)23 b(pro)r(cesses)f(can)i(share)e(access)h(to)h(the)g(same)-92
1317 y(\014le)j(b)n(y)h(using)f(a)g(shared)g(\014le)g(mapping)h(ob)5
b(ject)27 b(or)g(creating)f(a)h(separate)g(ob)5 b(ject)27
b(bac)n(k)n(ed)f(b)n(y)i(the)g(same)f(\014le.)-92 1550
y Fa(Managing)k(Pro)s(cesses:)-92 1782 y Fd(The)26 b(Windo)n(ws)g(API)g
(allo)n(ws)e(pro)r(cesses)h(to)h(b)r(e)h(group)r(ed)e(together)g(using)
h(Jobs)f(to)h(simplify)h(managemen)n(t.)35 b(A)27 b(similar)e
(construct)h(in)-92 1882 y(POSIX)k(is)h(pro)r(cess)g(groups.)46
b(Pro)r(cesses)29 b(can)i(b)r(e)h(assigned)e(to)h(groups)f(with)h(the)h
(setpgid\(\))g(function.)48 b(Assigning)30 b(a)h(pro)r(cess)f(to)h(a)
-92 1981 y(group)26 b(allo)n(ws)g(signals)h(to)g(b)r(e)h(sen)n(t)g(to)f
(the)h(en)n(tire)f(group)g(sim)n(ultaneously)-7 b(.)-92
2214 y Fa(Zom)m(bie)31 b(Pro)s(cesses:)74 2446 y Fd(In)25
b(Windo)n(ws,)g(a)f(pro)r(cess)g(can)h(b)r(e)g(killed)g(with)g(the)h(T)
-7 b(erminatePro)r(cess\(\))23 b(function.)36 b(This)25
b(immediately)g(stops)g(an)n(y)f(user-mo)r(de)-92 2546
y(parts)32 b(of)h(the)h(program)d(from)i(executing.)53
b(As)34 b(long)e(as)h(an)n(y)f(handles)h(to)g(the)h(pro)r(cess)e(or)g
(driv)n(ers)g(used)h(b)n(y)g(the)h(pro)r(cess)e(are)g(still)-92
2645 y(op)r(en,)h(ho)n(w)n(ev)n(er,)f(the)h(k)n(ernel-mo)r(de)f(pro)r
(cess)f(ob)5 b(ject)32 b(will)h(remain)f(op)r(en.)52
b(If)33 b(a)f(thread)g(of)h(the)g(pro)r(cess)e(w)n(as)h(in)h(the)g
(middle)g(of)f(an)-92 2745 y(I/O)24 b(op)r(eration,)g(for)h(instance,)h
(the)f(k)n(ernel)f(signals)g(to)h(the)h(driv)n(er)e(resp)r(onsible)g
(for)h(the)g(I/O)g(to)g(cancel)f(the)i(op)r(eration.)35
b(By)25 b(default,)-92 2845 y(when)33 b(a)f(paren)n(t)h(pro)r(cess)e
(dies)i(in)h(Windo)n(ws,)g(the)f(c)n(hild)g(pro)r(cesses)f(are)g
(totally)g(separate)g(and)h(k)n(eep)f(running.)53 b(This)33
b(is)g(di\013eren)n(t)-92 2944 y(from)28 b(in)h(POSIX)f(where,)h(if)g
(a)f(pro)r(cess)f(dies,)i(its)g(c)n(hild)g(pro)r(cesses)e(are)h
(adopted)g(b)n(y)h(the)g(init)g(pro)r(cess,)f(whic)n(h)g(then)h(calls)g
(w)n(ait\(\))f(on)-92 3044 y(them.)36 b(In)26 b(Windo)n(ws,)f(if)h(a)f
(Job)f(ob)5 b(ject)25 b(is)h(created,)f(and)g(the)g(c)n(hild)h(pro)r
(cesses)d(are)i(assigned)f(to)h(this)g(ob)5 b(ject)25
b(along)f(with)i(the)g(paren)n(t,)-92 3144 y(the)33 b(c)n(hildren)f
(will)i(terminate)e(when)h(the)h(paren)n(t)e(dies.)53
b(There)32 b(is)h(not)g(really)f(an)g(analogous)f(construct)h(to)h(zom)
n(bie)f(pro)r(cesses)g(in)-92 3243 y(Windo)n(ws)d(b)r(ecause)g(pro)r
(cesses)g(in)h(Windo)n(ws)f(do)g(not)h(inherit)g(in)g(the)g(same)f(w)n
(a)n(y)g(as)g(they)h(do)f(in)h(POSIX.)g(Eac)n(h)e(c)n(hild)i(pro)r
(cess,)f(b)n(y)-92 3343 y(default,)f(op)r(erates)f(indep)r(enden)n(tly)
h(of)g(its)g(paren)n(t)f(unless)h(otherwise)f(sp)r(eci\014ed,)h(and)g
(ev)n(en)f(then)h(the)h(pro)r(cesses)d(are)h(not)h(related)f(in)-92
3442 y(the)h(same)f(w)n(a)n(y)f(as)h(they)h(are)e(in)i(POSIX.)-92
3675 y Fa(Summary:)-92 3907 y Fd(The)e(POSIX)g(and)g(Windo)n(ws)g(API)g
(di\013er)h(greatly)e(with)i(resp)r(ect)f(to)g(pro)r(cess)f(creation.)
35 b(In)27 b(particular,)e(spa)n(wning)h(c)n(hildren)f(is)i(com-)-92
4007 y(pletely)j(di\013eren)n(t.)46 b(Windo)n(ws)30 b(creates)f(c)n
(hildren)h(in)g(a)g(single)g(step,)i(and)e(they)g(do)h(not)f(b)n(y)g
(default)h(inherit)f(from)g(their)h(paren)n(t)e(lik)n(e)-92
4107 y(they)21 b(do)g(in)h(POSIX.)f(Ho)n(w)n(ev)n(er,)g(b)n(y)g(sp)r
(eci\014ying)g(certain)g(argumen)n(ts)f(in)h(the)h(CreatePro)r
(cess\(\))d(function)j(to)g(set)f(up)h(the)f(same)g(pro)r(cess)-92
4206 y(en)n(vironmen)n(t)k(and)h(pass)f(the)i(\014le)f(handles)g(to)g
(the)h(c)n(hild,)g(similar)e(functionalit)n(y)h(to)g(POSIX's)g
(fork\(\))g(function)h(can)f(b)r(e)g(ac)n(hiev)n(ed)f(b)n(y)-92
4306 y(CreatePro)r(cess\(\).)38 b(Pro)r(cesses)26 b(can)i(share)g
(memory)g(in)h(Windo)n(ws)f(in)h(a)f(similar)g(fashion)g(to)h(the)g(w)n
(a)n(y)e(they)i(do)g(in)g(POSIX.)f(Pro)r(cess)-92 4405
y(managemen)n(t)e(is)i(similar)e(in)i(the)g(t)n(w)n(o)f(k)n(ernels.)
-300 4538 y
SDict begin H.S end
 -300 4538 a -300 4538 a
SDict begin 12 H.A end
 -300 4538 a -300
4538 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.4) cvn H.B /DEST pdfmark end
 -300 4538 a 0 TeXcolorgray -199 4671 a Fd(4.)p
0 TeXcolorgray 42 w Fb(Pip)l(es)74 4804 y Fd(Lik)n(e)e(POSIX,)g(Windo)n
(ws)h(supp)r(orts)f(sev)n(eral)f(forms)h(of)h(in)n(terpro)r(cess)e
(comm)n(unication,)i(including)g(pip)r(es,)g(so)r(c)n(k)n(ets,)f(and)h
(shared)-92 4904 y(memory)-7 b(.)36 b(Muc)n(h)27 b(of)h(the)g
(functionalit)n(y)f(is)h(similar)f(in)h(Windo)n(ws)f(and)g(POSIX)g(pip)
r(es.)-92 5136 y Fa(POSIX:)p 0 TeXcolorgray 0 TeXcolorgray
90 5319 a Fd(in)n(t)h(pip)r(e\(in)n(t)h(pip)r(efd[2]\);)-92
5501 y(T)-7 b(o)31 b(op)r(en)g(a)g(pip)r(e)h(in)g(POSIX,)f(y)n(ou)f(m)n
(ust)i(\014rst)f(create)f(an)h(in)n(teger)g(arra)n(y)e(of)i(size)g(2,)h
(then)g(pass)f(a)g(p)r(oin)n(ter)g(to)g(this)h(arra)n(y)d(in)n(to)i
(the)-92 5601 y(pip)r(e\(\))k(function.)58 b(Index)34
b(0)g(of)g(this)g(arra)n(y)e(will)j(con)n(tain)e(the)i(\014le)g
(descriptor)e(for)g(the)i(read)e(end)i(of)f(the)h(pip)r(e,)h(and)f
(index)f(1)g(will)p 0 TeXcolorgray 1929 5889 a(5)p 0
TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.6) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray 0 TeXcolorgray -92 -277 a Fd(con)n(tain)34
b(the)h(write)f(end.)59 b(The)35 b(pip)r(e's)g(read)f(and)h(write)g
(ends)f(can)h(then)g(b)r(e)g(read)f(from)h(and)f(written)h(to)g(using)g
(the)g(read\(\))f(and)-92 -177 y(write\(\))28 b(functions,)g(resp)r
(ectiv)n(ely)-7 b(.)-92 55 y Fa(Windo)m(ws:)p 0 TeXcolorgray
0 TeXcolorgray 90 238 a Fd(BOOL)27 b(WINAPI)h(CreatePip)r(e\()p
261 354 25 4 v 286 354 a(Out)p 434 354 V 58 w(PHANDLE)f(hReadPip)r(e,)p
261 470 V 286 470 a(Out)p 434 470 V 58 w(PHANDLE)g(hW)-7
b(ritePip)r(e,)p 261 586 V 286 586 a(In)p 367 586 V 30
w(opt)p 517 586 V 58 w(LPSECURITY)p 1122 586 V 29 w(A)g(TTRIBUTES)28
b(lpPip)r(eA)n(ttributes,)p 261 703 V 286 703 a(In)p
367 703 V 58 w(D)n(W)n(ORD)g(nSize)90 819 y(\);)74 1002
y(In)i(Windo)n(ws,)h(the)g(CreatePip)r(e\(\))f(function)h(accepts)f
(four)g(parameters.)43 b(The)31 b(\014rst)f(is)g(a)g(p)r(oin)n(ter)h
(to)f(a)g(v)-5 b(ariable)29 b(for)h(the)h(read)-92 1101
y(handle)22 b(of)h(the)h(pip)r(e,)g(the)g(second)e(is)h(a)g(p)r(oin)n
(ter)f(to)h(a)g(v)-5 b(ariable)22 b(for)g(the)h(write)g(handle)g(of)g
(the)g(pip)r(e,)i(the)e(third)h(is)e(an)h(optional)f(sp)r(eci\014er)-92
1201 y(for)31 b(pip)r(e)i(attributes)g(\(whether)f(the)h(handles)f(can)
g(b)r(e)g(inherited,)i(etc\),)g(and)e(the)h(size)f(of)h(the)f(pip)r(e)h
(bu\013er,)h(in)f(b)n(ytes.)50 b(The)33 b(pip)r(e's)-92
1300 y(read)24 b(and)i(write)f(ends)h(can)f(then)h(b)r(e)g(read)e(from)
i(and)f(written)h(to)f(using)g(the)h(ReadFile\(\))g(and)g(W)-7
b(riteFile\(\))26 b(functions,)h(resp)r(ectiv)n(ely)-7
b(.)-92 1533 y Fa(Summary:)74 1765 y Fd(W)g(orking)28
b(with)h(pip)r(es)h(in)f(POSIX)f(and)h(Windo)n(ws)g(is)g(nearly)f(iden)
n(tical.)41 b(In)29 b(b)r(oth)g(k)n(ernels,)g(pip)r(es)g(ha)n(v)n(e)f
(di\013eren)n(t)h(handles/\014le)-92 1865 y(descriptors)i(for)h(their)h
(read)f(and)g(write)h(ends,)h(they)f(are)f(treated)g(lik)n(e)h
(\014les,)h(and)e(they)h(can)g(ev)n(en)f(b)r(e)h(read)f(from)h(and)f
(written)h(to)-92 1965 y(analogously)-7 b(,)25 b(using)i(read\(\))g
(and)h(write\(\))g(in)g(POSIX)f(and)g(ReadFile\(\))h(and)g(W)-7
b(riteFile\(\))28 b(in)g(Windo)n(ws.)p 0 TeXcolorgray
1929 5889 a(6)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
