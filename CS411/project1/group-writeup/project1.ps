%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: project1.dvi
%%CreationDate: Sun Apr 14 19:48:11 2013
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR17 CMR12 CMBX10 CMR10 CMBX12 CMSY10 CMTT10 CMITT10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter project1.dvi -o
%+ project1.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.04.14:1948
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 90 2009-01-30 10:58:51Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.02, 2009/01/30.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
end
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  /next ED 			% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge { 
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  GetEdgeA GetEdgeB GetArmA GetArmB mark 
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  GetEdgeA GetArmA 
  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
  GetEdgeB 
  mark 
  xB1 yB1 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMITT10
%!PS-AdobeFont-1.0: CMITT10 003.002
%%Title: CMITT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMITT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMITT10 known{/CMITT10 findfont dup/UniqueID known{dup
/UniqueID get 5000779 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMITT10 def
/FontBBox {11 -233 669 696 }readonly def
/UniqueID 5000779 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMITT10.) readonly def
/FullName (CMITT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /quotedbl put
dup 35 /numbersign put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 52 /four put
dup 59 /semicolon put
dup 60 /less put
dup 62 /greater put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 92 /backslash put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335FEDD513EB6237AC8EFFB213
218B5D59505B920425C46EA55A185ED268DBAE2AD127742473FD1018459B7E12
C21514D99DABAD554C53B868D24B881AE68B52684362D1AC0E86836194E335DF
BB6D37A7215F8F4F5C816783BCBD4DB6838DB92C13E514A1CC344B43D8B8121F
7C69BF2259D61B264AB5259DF53B7CADF565BABC47F75C56305448CDFF06E869
91043B33C8FF9455A99BF35290E48EA7FEE38D35BC1A968A6B9489068F78E17D
B4634A84F0ED0F884BA33B46FCE57168E787167E0A1E8EF21F7698BBBE25E23E
F3D6F8957E9C3E858BA10AB9CCC45271F2B23D423AC0AF934ACE0FF6FDC79523
20408F919B960A276FA88933B9920825E602C570CCE4C18BC4035BC59BF4F87E
6D05BE7CB7D0A77A6C8E666D73D216F04AB820F477809B8410941E00F743FB6A
55F98519E4B6DB552CCC264132BA31893928998BD1B95EA83246E90359D02566
715AC489733A797E2532AEEA34F3702B8FD10B35803063296A3FAD8DC11C0D62
13B2882C4C9B090AEA4097302239EC457537EE7B3BE94AFD5A8672E6069433AD
EA5F9A60B8DF0DE474067A65F1A845949CD12CC4E0919CB7C50C0C23AF8D6365
083C3D64103949AAD9A71FEA2C70100FCEE6E7DCF19A7AEF7584F329DD12DCF2
E02635F8710D976F815E76D3F3CF476655494394B44FADD9A9524EF08FC31EFD
A32B97875B55234F019F32EE4AD722B6669E27C2A629C3F170012C9AC62F612F
2A54F7B1EAB87B8ECE7B64A3BDA7B6BFD5B6F3F964656AE949F91F216FB70770
DB9F68C91878C624762DE0E5F88FDDEE03953A97BCF473464EE216293D360ED0
33AD04799EB9F1BF212DA7B9CF1F5E648ECFC0AFB4D935B09F36A752451930A1
D4B662BC214513D17885D824D250AC3F036BF6377691E603F12241E2EBD2713B
E665433EE1E6728C071FC10EF177EC0C2D3AAD49BD2A0BF511A722FDCCD196FD
BA28407F265666D7579B49FE701261B42A5D51AF3554AF92E3AC315C77801AD8
6690279FC8F5305AABABB620DB0401C12A1E3B216D9DF61BAA41557F6C61D3B4
B6B0F9049CC8D0A6A9BFAA49F87CC47BE9FDAB76B5FDD17A778E6F426D125C19
1D4DE3EC851B9D085A7DE7FF16C332D8FB9D752C15D737CCE72D291D0FD9AB77
19B670EFD87E8903A2BB3B04FA65A9CA4059DC259ABB70608D69967E694691CF
16EEE2CC15D50DF45AB5BE7639DB8E02835E748597CD52F41C780BAD637C4D75
8BF9493F6E5D85031896D58E53196CB0D66954C6BB4B29B488866DB16E261A7F
6D44373479B5F1E64568E31A96FA52B2FF83505F7B0C5A3D831063A5E574DC73
FFE9DD89032624D0808ED253F7209074F9DB11DC9D8ADFC0905AA0701D26B84A
7B90905365B60A5B1E7E1D1D2C7D636103200B4D6E3D8FC79E1F208CCD592792
059D48A1754F57377C6E95AC3B74863596FA34250C38904577C94C9F6DE86A14
D1EE7BD85FBECADFBAF2B8F2B50DC3A0C7617F485E4E870BC7C423F30E9D293D
E0F4A2079B52AC10619851C922E0CE39F579A549C20FD36B31583A21AC3CF353
F93030CB5809EF9841CA0ED7DDEB2BC0C5470809FCAB1F0327DEB88E75C3792B
97B32ADF930A9C6A836AECF66ED148DEDE278A713A964CA7EBFCD1A91BC05E82
EE94937364B43FBB091C7D2B8D845D3F92FED73734928DEC483D4DCDDD176C38
907F1060BB2F7CFFF2ACD615FBDBBD27173CA26E675652C9EB9FBAB2FEDC321C
756B74CCDB94B4E337598CC198C03E4B6FD9C5B8EF02D78830A1CD993FB37737
73C2478D1320A1490A795B841D4A07E17F010BC4BD60AA55CF4475D46BA73C9F
9FCB9F5FD22F892DF2722606BFF90881DEB985B8100B945924D6759961EFFCD4
96D20BC38FA91E1157736659ED6B10E6CCB1CCF5AD0956177D21E5CE5E0DFDA6
DF6A08BEBE85997F259999A0F81B43C52F5C087C640D03E39D7EE92B18465A09
D0728E2D72F3F2E620FEF720BA480BAC1BF591D0831D0BD7B190568F19733EA8
A6B438ACF703B2D73BF2ED09437E39326930D4F6A5FCE44F98179684FF53DE38
D6E1BD7484A06328B0EAA1EEB5B7C668BC52FB28292BD269FB34CB3826B7755D
488C754A09C3DE393C431DF62103A95813FC8E12A015B064699526B93DC36102
9EAE76B8524A638EB7179E2ABD01EF0AA63CFE6E8657A06FCD4762DDE3812AA8
D948DA2033B0AADCC2678316CCCC961A99898A3097ECEAAA2A62F00FDA24D6AE
B99EDE994759383E9A116C6E0976B5D6335D06C013F216AD110AB1E3D29BE6E6
050FBAB5403CB9BB44F832844113D4F707EC42F7EFAF4B7BDC0D7A8478B897F9
C9A208FBB21DC3C8B1F0A1C6887439D722C776E607D880E5D7DA1ED58EA54C95
96D6553444D2DE9EF4D2FE94950FE15DD1D3DBD1E93EF9754112FD3E12DD4D60
5A33F86A4381BCE6A9B839D21E658CFBEBCED50AA520CD7AE831F710454D4F7A
800134C1B5A8020F6B04F63A458B66846258D2A7E6D9BB7D42C4CD1F6FE607DC
BB0ACE93422A6402EFE133369BCCDDBD1545E9F62FD9BA393B7B6CDF19305030
14DB20C76A795AF5F8BD0857620445B21BB45B0EA4EA0CA064E93C5A09110763
DBBC92316D78AB52E23E1DE9F352AD691CAA35A4292A4A4D0C32A2FA2EDDEBE5
D84090CDC729E49688523C33DB37845C3FAE4D3DB438EBA6B4C6C72E17A2E7AB
985250467701BC4CEFE80097C8216518F09877AAA19C7784EFD7DA1582DC8D18
674C1CE784FA929D757219F93DE41F2C93C85B1AED40BE1DFBF8C635D9182923
07642A1DDD9FAAF8CB90056FF728161882FFFEECE9FE52A9F83C537BF10CF7C7
2DE5960ACDC3567093A8D8406EB87F7DD9C45DD9BBFB86002456D587C0BF5315
80AA0EF439B0C3423D4A245017241A9920C10F845CEA66A52B1B5E46E7EB339E
A3846087FD49C2082DF3735B331E5131E2C3ED5917949399A2C5791DB8EC434B
EB476D6CFA64DAADF92ACBF1F5859A1C3796075833C9DAEBB8E268F255A0DE41
CAEC50F0AD8CB83AB86CA547BA94188F7319DC434E3F03461AB05B6200ABEC31
86988DEAF3C34DF2AB79631DBA1D4B5784D625C91BE7FDA9AD72DC7DF522CAF4
F6290E4DB6E03F5416B97D3CA36A34B28002DC7E74C2DDE026A0BD77006BE221
2DC9BD8FAA40E2592559465481387ABF0965FCD297F9FD44863B409D2110C889
1C17F7C60D1FBE04BBDDE5D36910B2B4162D022A5AB901D508149EB756E69D5D
D85299E7FAD722737A643FF8A8982CB67639F5FBFAA1EE04C346199E49D19247
4823C1B6C6D96370D105A01467BAF6BA15523DC59B7D24D1CD02330860E1DF5C
9C35D11575A56798FB19DD271EFA4197287996C29C69B630A0D7C6C71E6F9139
49A9C6288C2570177FC5D83B9D92AA57737C69390FB5A9612F74AC68BE049121
D127044B65766D333533B89A400E8324806EAA38E62707CFA7BE67969FC185D9
CD71F986DE13748C501E8C2B02AB7DD160CF95D1491E67C6B0C969B4C6CA7065
56F3CC956AE0E04B2D3FAE8BC690F2491BB50ED4D6D27399499EE419BB99EA0E
9A5B38742CBCB86FF3DA41DA205613653F3FA7867D1DBD9694A6D31DBE1EB344
E7ECCDD48671A2A14A69262310D9C0101E77B16DC30EBE6A6E943C0444C1F142
ADEDA813F2C42E51EF96784E60F367F9E628CF4084C58747382BA13A961E79A0
9E304AC72827CAC57C6F7F0FA4A4D7E0DEB3856C7DB8B7BFCB9F19038A42B0B8
BD6D2618C854003CC9F262C19178CF03C8471AFAB8951C10C99327F84018CAC0
A25061D9469CDBAB2E8D32A086351B8DA78E5C31B48BDC6D2419EAEBB416F703
9446FD43FF9F84C7AC1DE7F956BBD09454855CBE24958551127DD9254E42B1B6
DDFA20D69564DE3D84B0F6C1612165CCD9811FFDEA63F0E6E8E575E61265D163
E5A25DE8D4A8E707FDD5EC670969A2FF06F136226476B891ECE1150442B1B054
7DC21689ADEFDB63D4B2D0A336A06648B63EF171DBBB3C2183A7D0F5F78FCA14
9A3F662DF957978F8E96441B4F364625B34406F00631FEA63975FAE9A9A8576E
D60517047C3079D3D714C1468063495A62FE3F10448EC1F12CF9FDD7C820B5D6
983D095AA4D7145A28DA724ED8B469EEFBA83A9A280924CECD570129ACFC31CA
8CD5978DF4FFD89D30BFF44A790A4DB3921C93F94E2C0D8C3EEA7DBD3246107C
22D1C007C829FBB2D092C305F0F8D04F559BCE33673E886568C70904ADAB6388
D6B856D5D945C9655F1CF281DBC959898C2A8ACF312B82043531F07750F33AC9
4CA9549D1F07191D00F559C2C10BB5C36A99858B5D6ECA376F894A1D2806F4D4
5526F5F9FBC87E390C96610D2F7CFC2AEF2534BE23D669D1B7C3BFAEA3B44C3D
02621F860E67C277C3505D3F8EBE7EA9D567C07AC8345CB65F6328BAA1165FD6
3B365F01B3A2480DA075AA9260807F5521BCF0209151832BE7EBFE0F65725D40
CC844FC72ABF7E17361DA3735A1389DBD1D7E2F0423F0074C61E0EA9767DCDCC
D5E3AC96AB964896931A33EF1E424DE848022EF0FDC932E146F2C9C6B4EE6EAC
EE710D0D17F4E3F16FDEAE6A34EC21BF9F2CA1AD56EEEA735DD181139B354CEE
4012222AAB65B5C840FB9F8768458A8560DB280566554ABAAD2E53692FCFCA69
751C47497C678C8E2F620AA78FF3AADED5D62CC5C4EDF1F5B4FEDD5129C3B495
1A35C854D1FDB793FD94160913EEC211DFA092123754F7752507DEA6D6E08261
ECAECAEA924B4E3F8A8825F10102AD1245158853886D1B07913BDE1575E5EBF2
FC2C47B69B1FDF4DF280DBA2AC46879925D3A8051DA88ABB064D16E170E8FFD9
876227436C8CA3D40FEE889E24623CC7EC7504B4382CE92EF2AC489C6D09EA55
9B9EF57A27B1579773A936DCC41C01462B47A2F134D00F9254250B4F0E7ADEFB
0FEEF8C56F1F50A24E0AF91D402273C42C5773D17E1D4D4A904C6DAE42ABCAAF
E4595A972F11C4A4100340F4C6F27C537E301A99A8E7060302CCA7C5E6FD83A4
5B3D7F5464D3CA4772887CD969C41EF5EBF71C02326C69EA2D33C734966F78B5
CD125BC689D296F13520F480B7230CF630D42496D758AEBFBD49E89ADE764CA3
FBCB18A3A598685457BC715D9C2C01FF65B49FE6868EF027B387EDE6A9AC96E3
4C5708B4E3B034F68DE05D68424D2FD79993D3697894AC1DE52853C9DB118CEE
FF9F5A035900B8F0A514ACE298C4FCC862F6649F2ECCBCBE0A739116BE381AC8
A1210EDADE29D28FD2BFCFFA4E5FC2379CE0B7F9E1ED94594279AECDFA07203F
786981B8BD8CE9F60C2EE64C87775655FCD7A0D15462A0A72AD6E470BE494787
7691704237FFD97CB3D8D42189B6B75DF93FE386F3AECACE3781F1BF23492308
FAB5FC3EEFC0FC7770FC353E31AF9ABF8A77E93EE306EAA3ED39CA973AECBE3E
1E908A23ECC95E9116832509868AA7FAF61A81C3097ADDC15C4609DFEEAAF824
1286F541EDBA5D164BD9A5A9C63DB20B7C0F9AE1D8A0643BFDC0270CB85165EE
65CF0CD2F04F692AB281984EE6000E4E63669D1C97F517F77FC3C3CA43BDCA99
6C419C732993C3CFB1D32F84F1A0841612EF797A532DFD9E9D560117997F5C08
17996A024064BF64F1E592B07ED95C52CFDEE1B71C31440015DD300966963077
1D27FFCD910A89FDF28AA041E391793D35E05DBB2FCD84452C8F80B9CCA45FBE
9CE32EA6114676B0EFFCF3D2428D3259CADC2B799EECD538E504F255BF8F6F70
4F7FAF59CB4FE0040A25506F380D6732BAF444BB326C0D5EDF22C12D9BC0CE1C
C2660151D1BFAFFCE42D634C0875085BD8823A439DA1DB10DC243CBDBC44F463
44B3891DE9F7112C848AFCFCBB5395DAFB00A7C38BF2F0A114E966F9E506E82D
05048162442D29761672477EF616A460B9E36064266E6F5A83C914D7AEAE8F5B
B96D4BEE71E7841A4FBECF5735CD72CE372CA711282C8227F3D2D1FB75DDE7F2
FDCB4ED998B35751ED6C67258089B85CA03266ED12ABDD32124C5CE003DF1E61
23FD0E3E8592BC01483D8D0F95B8214F2AFBD9E2CDBA77D488BA42C69B51771F
963FA69098655E678EEA2D3E05B556FE99B24408A903DBA329B2B5B1ADD6C88D
4E999C9BFEDE05628C71F54425890BA0B2087D623538898B0F4C297A0A0DC020
A38E480A6C7042DDFF33A954644D1C357B4C8FD73E1A604E48F80C86FE46E4C2
678A35AF3205703D661E8E8F10AE9214A629E6F20396F2F142EFE54DADD559B0
0A5E34290AF4A439970A78714273C1611222666B62B5FBDB15D03C6C2EF6FA52
A0820F9CD2C07DCD622CF55B3ACF0B3B130CAEA87029EF9979136CAAA1B40AC3
C5F03E91B30521C56A5817013121E7618F5E79D1D078AD7CA8EE2BBAF690A695
B4FF0D9B76B4EC54E51BC74E68CAB3067BBB987D2F5842A7ED6680F32DC76E91
23199E04BD7F5C127C4102E79AC36338E4EF6B05DA86C171B4D7A54BDB095D5D
74DAAA839BE46FC1F570522140D32FE4625923C1EEE643D5164889CB1C4B6087
A93D3EE63B63235CAFB2AFD870FBD4997C68258D3A9222920B2E267D85442E59
3E8A8D6122DCC45706E994D14AF1F816CFB685518A73B3FA0123F599344970BB
25AE6E9BC0C1E5143A5D268CF8A31500D94A12F85F99FA2041191C55C3B1B8CC
285D84B0363F08B5D302D673E6A97519A10FB8C8F323A40EB265097F70222283
15F91741AFDC556204ED33E327265736F17BC1FC0510091FEEC6E93E9CE29FFF
C089D72B146EDDA354C0354109E34F5E1A351C8667F5C2AC102C869C409C82F8
B36840D9F6009F796F45B580525CBA2513A21EFA78D2AC6C3636A12F60CF20B3
49CCD0649080C86145AEBD30E4FC587E193F7CF2746A298FDF9A25A1C5EC93BA
2AB9787E44D161DD15D189A0D8FA819033DA0432E50DD62605462EB2533734CE
96DD76908D4CD104889128BBA60325A743133834FAC298BDAD2AC2C42DBD307F
71D167DC7EB4E910B66AE55EBFA2922797C89F8C20138E0C03C539B50ACEB564
65919E05E3AF40F73F7C7BAED21AAC3B5B05B53C1F912060915CA37217FA5529
43C5FFE2872F49A6A1F9232D934929581FCAFB94338D896BC6FC3E75F18BDA83
8DA6CEE998B85F404413275BFC4622A8F30DFF60F816EE1A7AC6FE83097038A2
5F8E1E712433B72F8323058750E7746BF6F40C7D7AD6613239A1B393A7888504
2921B85A78E7357FFA2E6720DF76C15A77CF8EFE779971655B1E20EFCFF5E655
3EEB19EEFD31E308AFE8AB46246A76CF23E5D5F14280F01C93976CB28A2F8804
2A1B19D515D79DFCE41C8E0F47CD29AC7358CF42898A5BF15E61A1AF6A11515C
EC8DBB634492D05887087EB16A7C454D74FF8B616ED272305800C2E641F4551D
BF18711A547B65D5B795F2AEF16813E83EDF88CAB130B075A7138828098BCC0A
5AF76C809C60544A78DAF19EC0CBE959CB56E23A2B11BBEBBE0C90FE6B64B58A
F1A2C6B227F4C409A381CBCC1731B54A26E5926A33E21A3696E9A0A520748978
A2AC057DFF40A59AD9921EF9D6E267E38846279C02152F22AF9E5DEDF038F201
C5564D7638BDF48E69AACBE70765DDEC143507B4B02C4C70A291238A2D96896C
F18B3EBA8A228C307D204EB0F406F71F8BB500FB03FAE403FEBFB21DE19F6361
3C47DF5629060708870A9B2EC04BA9AE52DFE3492483333C903795F9C8C2A29A
803B4834BA651D200649EE6152D2161724FAAAA37535C75B73FE0751AFFA574A
1F09D88332037D91357C1943A6A7802093C5668BE1D5DE24299840BD9853A5B2
B8865196977D0D46D957775933750DC60D5C981536FB3FF41BB76116DB4E57F2
AA9C94E1102DA2D0D6E9B35CE785E1197BCD7B67E729AB31F3C194DFEFF323F0
613F45B31879C36FB7F2583055770EFF67F623D95932CBA217CCD89943CB5231
E527E27ADB1CE946396D08EC40AC5E6B10AADEC5D53CE24F1DA83C2699240764
3A3DC047743FDD7A68BA6E51EC9746B8679548662670D5F0E264054D2A7E8B15
CE4074A9F0A7E2A54784EBDC91C589819F41DE7DB67A83976B42E593BD8F1730
3ADD513A6D59A7F7181FA8D044F87977FDD66FEC49D6CD5A0C72A53EB28DB157
1BBF7975ECC74B74CB621DB2A8EA2E6D1F4AB7BAFDB39EB51EF14ACF235D6237
9986CA10B6E022578100FC731383EF40990157B19BAA854EDE7AF27570DCF39B
A8F38F1FEA11B0A18D62A44727768C5D7386099695E4D008CF10B67FF745745F
CA8766BE3631889334E15A550FCD1EC09C415E618F4A82925BC06FF6A3338F1F
2810760449042FBDFF21632B8F7749140F5955B4E4525DE764C26AEA6ABDB0EF
A04FBE23A117E02383DEF4894EE1FEBFC8CFA5471D1E5E3FB8AD009D8B8CB21E
1BD5B72AB580E72C69CCA44BDF29717AA000D3493CCA37CF66BCDE93D3A58660
74272955D9CC0D26B852BE76BFFBEFC11FB98023D5B440E1CEACC9FD358BC038
E59F58FFE156D1F83B7E5BCD3940EBFE795620905B13D5627F978A105FF65E36
798997F205D7FA7E50D66E84D2FAF64C6DB855F1873D64C726C983B337AAF27C
45413C5883D410E9DF21FC0F8C66E19D50A14188CAA7965FA894ED3C56602B06
E6DA4065B768341EAAF220BCA100CCA24E0636E3B0D1E17DB9277F075583DBAD
9802D329A124A91220C540CB8DBDEA823A0EEBF42D7622B616F88F7A4B60FB2D
94C847114D4B496EA2DAD9C3BC66769DE489DFEDE404DAF83416D96A0A99F1DF
6FC4B28650C7F71CF01F2C35A212536BF2BE1E3A3F63A0E77220CED013FE37FE
925CE9140675C659D1947584C1F503541B20604D54C7B756AB4712FEC09D8852
26AC5745ED3D2BF5A9BB91936DD216A4A0FAE1170EB7E4D757986D50385E28A7
5C2A03F137BDAD10EBA7854F7A3AA5D2A1A44A850B87F64E1A855777F1D479CA
6D85A73B517E750DA037C3D6567CAFA2E72D657F934D8790C8DD4C7B729C7C02
609984E3D2F8551A87FCE334685F9B9EA5E23CC2A3BB44433F8C0F8045CB1B8F
2254D99FC7720409F455244C53EE1BA427EB783ED9C0BF4F2FA9C1EF14E05936
BDD5F9744035E7080A6FA41308CCF0C1B9C4F36FB010E8BC81DA9E6AF4CE885C
A9893A6E3A28F8F2B1590B5675E9C071D808B6E103FB674E6A952B5B7D731E07
7EDB541E6ED7335DAD9A914DAC59DD8B3BB9BCA44B539A32AA16C535F216EA6E
BE9CC80DA6A5FB7940F8411F4EC36503BC347F060ECD97E3F5E5E773D2E0D7A1
4E502F6A30E973C56FA79FD8BC7A0FFCD76509ED23825F6CFF407E21A8699D66
410A656E385A70365FC0A0A3D9F460456FF5AB175D91EB03F7BFD9966A6E92C7
6BB2598C2B7CCCEBA66453779A63E253910E8FECB781466D979FEA12805D9E4F
F57D8A31F2E18E22CA2641707C9299CA3E6C61E4F4CA894B1C0B8B104AF01EC2
760BCAFBEFCA12745EF080274BC18C628E4EECABA5B5BEF5BA7E4C0A0938E208
0AEE527A8D56AE04CD9F7F441A2DE01061179FF7E0D53AB056B9EAE66985B22F
5DEFDD4031934CDD653D25CBA599042D753765CB17D17E22D004BE09CED5D658
0619FB530DC147177DDA441378DF2BD4B27034DE76EC2DCA12CECF342BCEA38A
26A2D89F6DC928C45C399F89D17089B2BF1DA0C1ACC8A8DBE5DBDE7714383021
BADE9DD3961D1FCBE9F790BEAE4324933FB0D62D1B0C36113520DE43C118FA6C
9E95310A012585E21125E5FB94035D6EF545DEB3A92B4D2DFEF242CBA7E76971
76180CB5AF65A432FF0E864100513F05010888D8AD090139FCD5BB29608131EA
2F8BD224E3705A063F3B562F5BB6E8203558DB4340139A3F49ECAC945F31EE06
F6EA1230904DF767C137F248C85210CA337419C28B168B10254843CCE45DB507
EAC8949208442DE39C54478A55723FE97F4C54F6C745AEB86A9B49337EC51A34
BA8065D5CE0D6CD58987254B2025FDD6948CE6DF8661532125BE60E5FA934A77
961156418C6908A8923041BBC07F3D5A0173429C0B24631C0582F302D2296A1E
EA037DF4A1ED4117A8882B4D6204AC6C682C3F4E46CDE37985783B58EFA47275
D207E441FD42D11CA6940D53AEED904B5A6FC0DC20464AF6E47941A7B7B1E5A9
DCF18BD4341FCB715C1D80E2F721930300FC99BB967B62F8A3FAE8E2189138CA
6EBB269F3BA80EBD105DBC8B3C8F0EB5D41E01D6662D3582588914F9BCD4E7EF
A4FB82DDDB5F737D351FE821DFD21C52B70E3EEF53D1A1F31402F0427A5576C8
BD5E7DD4D07B30A0B55C0E57345B40CC3A98F26F6377831A8648F3D5D6A4980F
A8ECD0EE32351FFDE1C4383C87A4134433C2221FF65E49BF163A248F9A2052CB
3C9541B38BD655DB49FD7C2E64F646452112293F42EA2A6B06C0A5ADD1AD85C0
37EF2E01AB2305F341D3474F72CF567E3A7945AA642622942E768566FB98EF6B
4E269B60D05D4B5C737D560E7C4B1D5B109781F7A310C5EFB5773C7F8F47B8D1
5ED34210E8A06C48A070F099AB1D326A9B278A582F4203803A853D0C792BD9D3
025135FBA88E4D44A333FB06D85E2024E4DBD9464BCAE11D1BF2E11487802BE7
4AFF697DD813EE61623B9440EFF677FF5CDAB8105AEFE65DAEA7196AB1ADE75A
4CB2EE478C30963F3E463257A7AC37C87A1B4699D58D1CAE76696D13483EC465
CEC1529F177D2C3CE7B7B1C63DFD4D5F82DB118F4E2E62619B236A4D445AB36B
71D665903A92A1EE40597F8D1830A687C6CE7B8438C0F23F105225D1E3F47A3D
6217513A37ADC19A68278B8A734AA603C1DB1B3E3C645A12EB4F820A1441D422
CC555FF8307803F3ECAB892D738B0EAC771DD90C107C8C7CB361B8215B0F60D3
E1850865CC1FBCEF2C1B7203B9728FE45383045D2D16D381547D04B7919EBC35
58AAF416A81E06667A97EE9B0D661275DC1A5D95EBE91D6C6F8CAB8218DF587B
D534F0D5BB112D30A8552201D0A70AF48EBA50884B6F9EC8B3136882F6491322
097947B4F4C0DCEA3BBB20BF9271199685AEE3E5B3F024DA7BA4D36F07D3C1FE
B06D46B8B42DB8F0ADE0C76056A1122B5AB13695A92CF86B5EA4C36A3F4B34F9
8D2BEC3A2B111D6B34CF5301C2B7BF09B34012076CFD7F8BE1983AEFF34F1C48
33101526064922A69C75182F8C9DB758F25ED9C4F37CA0476F432E0D88AB67F3
B9EADC9FE3D2E476999E51375053A40BF8BCE355CE40EEB3A482A2FE3EB7BC17
32F3075F03CBC04E2D346CA6D1D2B2D15681C1C48A6EFC801BAD92AA83B78553
688E6BCC6259A9CE1EE98AAA2554F168597EF08D130117851C53AC879AE2032E
AF7CE0B126BF34C118F16B9F1D19D4F84DB73CBA26E74676AB1EF02895489FC4
902CDF71EB669527188729321368B2F5E52F7E81293301C2895765FD9E103CA0
608E910F2F733899BE95B935FBA4CBCC86B68697BEACF9EB6BDF83234D309E55
500D8B09E386AD016131FF7301902011288D984B1889E16154D0B9D5B6598719
C6BB9A25FE6F6F467513C6D2EA3A1E90662208E12FF97F45F1C153F22C13C33B
F5E384EB02AEEF46223BFCC1BF043292D359C57150D1800E33B9D8467909A822
1C869B340880D4C391553BF0C3B88162947CBA57FAF90055D0A011A5E26B1172
CAA1DD3ABDCE975C1E434A1A764ED9BE3F2FA2C9FD89B9E09714236E87D5D7E6
1E7353FD8D7757B292669C24723333E169E8C9526899F9658A5E35128FA9F8EC
75877B055755687FC0903972DCBB4C00AE61DC57642B48BF30E7453E59355AB6
55CE26E79758D372711B6508D9B04B1F86296F85483FE343D5B2A79B82338401
4495B0580DF47EBCE8817FBAB17D38314D1CB19702360DEB20003D548893A1B3
111D17A4EEC1352EBCCD76252D47CCEAA83D0E109218FF14E5750ECD9EC88105
8B9879300BCECFE6D6F07FBB17C867F73F4872746C1D68A40C14CFC964A500C6
5117F9A6FC16260B46FEE45D8BFAF6E5E2B765376BAF446CE03B203B6A043986
AF53B73994AD63D63C43275C02C0C09ED508F10B00343CC9C86B9353028A27E1
813A406ED87D62602EDD9052694F1CC39868E1F9C7FCC7D337A8145BE8608BAA
4152B90C1E8A031B8C16E2F3D108FE3887A53B8EEF23DED7B98C750F6646B6C6
1B9154840F71FAE4D74B4279A933DE40A8A6022AED645B726A249C8DD0BBDE63
5BB90ACF16F7E06B17020A4EA887DAABF5D8D56C031BDC80F2246625735A8938
97F71397A3AFB3A238B9D7D25509FF5D80FB0961E846DF07D1E57B2AC65DE085
1BDC1A574D9AE18C0941B2B5719A0B0EF0C116A96A4D43BC5F53E1AD536E98B4
08BA5F9705888641359B8DA8311562B15D5AF1D3D0024A9C6796B9C52C474C3A
2A71232D1358D91DAB2AA5F6F762F0EF7DA8E3C8DAAB43FFA6C4DE588EFDCF54
9A7031DC07460A95862305CF82729160364569E9820D7247F5AAD7512C284E31
5A0D43689FE1797CB408DC3842E6C7DBF4859575DA529D3AFCE40F095EB85878
55ACD3FA052AAFBB64EF2EA43D7C1F42809BCDE6DA82A3AC3626CFAC3C80396E
01B9FF91EC257D8EF30ED8DF334F71CFF3D02F580163E74237DD31F593FBB7C4
D2A3A25C2B17D7F666BD556910B63B09F6926A916901ED6D673D9889F2FC4F82
FAF8045E7D3453225C565485A4584EBE9961BE45924B84D545FAF90F34A50FF6
DA38D9FF3C786AB7966BBE00007FA6889E88A79E934535AEC86154BE4F0F5CDF
770167238915C8CB2C6D4DE80589A5FC41B5676A2EA99DEB722C920C6DBAE7EE
225FB00D70E747A9A7E3BE710B8597A7B07EC0DF38147784C23642469F9770F7
20663B5E3C909B2779C466058A62BF84A0B971E20C6A2FB7BFB3FBEADC39982E
DA3A431E0C17165422D4260AA9631FD2B88F4EF68A80B374F85941FA658CE3BA
A357F3F3BD4732720F8E3651547A7D612C5DBD2E5BC7E0294FFBE0A86234E5FD
94BEE2BC179669DAAB6FCC7E9A54E15AD1BDD5344132B0D854616D9DC007CBA6
D2E65C25E8BF4DE0920D36D165A873DF7CCD13907F6D44F2CF1EB8633EF3A088
CE74950DC44039D0B72D597A50158467C5427A7DB98E5302CFF60D2061B64665
C6244525DE8A34150B471FFE676204B4E698D7321DED580F8485C7DE8C0839B2
64C5EF2B0CECCE412888325618D6167C1C3E03AB914DB8878D7C959D43EBED20
9DA4351A5373218725829B781BA926C5FE64017702154F378893E9918B631923
85B0E4F7A905023DB9F9566AE8401F4C10
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/UniqueID 5000832 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /exclam put
dup 34 /quotedbl put
dup 37 /percent put
dup 38 /ampersand put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 52 /four put
dup 56 /eight put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 88 /X put
dup 92 /backslash put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB28702831270DBD25D666FBB0AD7B96E
A44E891EA1EAF0F87013AFC982E33D67A28E96E0C9CB99B9E4192536830D9901
931A8CAFA41289633B20BA3BD7AA3414B6DA8D57CCF2FBE39920CC06361F075B
CC40335DB9A0071CFF77F6B7BB47F3100DBDC9C4A58C2B81EC99E8E966AF3390
E3FBCC28BA1D79961C8A1584266454DF772FBA99664D74D4A89FC82FFEDFCFE1
4C9E4A04291E803D142E37E7ACA66AB279378F2F192FFB2B5BBAD18B95F03136
2CB594A3D6D3F8576B90A6C4DAD6D6C8EE07AF682F925F01D0B26CBA347C03BE
F3B0585CF4539FDC66915E22117078CC94D621F31DCB3E021998A5D6EE94CA4B
E214D07517283D56973D8E4367392BF6C1150DEBF459D141AE0941C1C8C5CFBE
E735D796E365A1B0F60BB4CF2801EAFE4889EE5F338D3C4885368281B3C95CCE
251C28A90D318A8A0384439B38D63B94757252062EA44E88509FDD2E75FAAB71
7329622828B2785C1A8B26351BC7448C1719C88FE99BCB73F7DEA427FBFCDF4F
00EE079B0C712F7D2C8DF98D4830A9D8C8B70A8C5D54BC1DF3171135278BED55
DA1CF0E696B12935EB59B606AA3C0CC50C7A259AF32F4C81D9B39470D9993CBC
864447F6C0152DADAD834A432D6E854CF5C0699C00D11582970C19B07B9D9390
52B29327EA0B6468326F9E6BEB1B8B2ABC98B7DB4F5159A408C77D206AC61ED7
5547F61F66F43106A015B4BECF94937CE559EA660C9A7A54C91039E273FE0FD0
0B499E22B8CBD28D1AB371BA0BA4C3FC5B8B10AC5362EFE6A4271F2B6A9F61E1
A4AA6C03AB56400180B75A10B31E330BE53C3001FA084FA32F9CF94CB93E36AB
BD6939CCD8052AA781020B93B0A8092E176ACF43E5B1A2959F5170C0960B9D5D
0ADE6D94FBC741684FDACCBA63D48B1686B81106FE5DA56E84A194F9D737D82D
052ED895A36685BF7F0543C503E9D0D8DF0356D99ED3D8A66634B8E5E2BCEF82
82ACB06F53D5E9AB73CAB5CE879106941CF41BE5A03E1471FD9F140099BEE013
F496DC5120A582968548D1C5647C488B2841D51DB4097B9D4A8478470D468152
EC5EB1D04367A1F030A6A3D68AD509908ACD994D3A8BEADCCCECF5FBAF823802
3D27101022D0061602996C15700CDC5117D4303EBE3272D35C4D32534685FAFB
8E2FA5149EAA9885472587284CAE46FDDF5CD68DF5A2AA09467CFD63659D9A45
853C24DA64559A8988D8B048EB891665AD8166379349E20E0E74769685BD6C60
02F8016E453C3DC03DEE2825051DD10F2AE636E24DD92FBE497811F84298EB5F
7C9A433ABB0C95B097B105C88BFEAB9B506088DBBCE80B0A49AC17FDA160D85C
2E452BFCB5BCCB27E31E6EBD2ED07CB68B2B95FECF3723BBD8F2978F16ECCEF7
050CCBA908A6FDBBAC3AFD0289D614AE0763D0151EC12F912FA4115BE17055DF
8DFB9F37A7FFE09897138C27F7A49331BF9CFA486D25AA7498DAD7B661C04119
FD8E48AFAAAC6085F994AE31D88866FABD2D6CD8DDC5CA41B48335F6AD7ACBBB
BDD95896F7FC3CE55882B99214176BCE337B4DCD113B464A4D844939439764C9
5C9A28849405004A6DCBF6E2D51E6E5F8AC5600F2E510B08F6DD1C272287785F
875DAE598DECD3C449FF76063D942FAFF042F8EF3EB2BCE6D9185F37A0B20E87
BBBE4B2BE6F8EDE15B5BA0B0D168F09C7C58A544F8F37056490ECBF3CF7E895C
EA09FAAAA2C949F5998C36A028B0DCB56D7BDC42EEC666E45CED430992D0D7CB
BED4B130E3CCCEA5DEC548A6F7C52BEB0C415926F6B7FEAE9664E1CEB751BA8B
96989AD181EB8EA405347F0F0C127E378C283D59B952E5C6A1C86981D502D995
B62520163E9BA858D54F38918D652DE4FB53A6555556089ADA3AC177D6A8381F
D6036511661A6F1A2E59AF950D2C509270C53B5EA39439E3BAA7D280DFAB8B0B
3A4CC404B6C8BB7B0E293BC27E491BAFB99FFF75DBCA51BF533F4F66E97EE892
6B8A5737F03BCE6C46C87DF0FCC2DE5D1837D9B210615CD2986E95BCC46EE0B1
269CC8781B94BA45B1A1C11402138F3DCBA49C3308AC26C0EE2E9ACF87D19514
427F06C7730FFCA323C3F962FAB0C19B7B6C6A3BFA48B36AFD3DA2D651734760
A862FCAF0B7ABAA4D4CF2ED309FB5E1003295ECB1BF2E8EE4398B7546A7652B3
689830029D81871A0D525A437F4391E79907B68BF24A22EA6052AA43C7411347
DCCA439382D1E5941E62C8B2278E3132C7499FE4278E9DB5DD1C6CAEEF86A534
9CC4340D7A5C25540323301C441361AB213E4C1C0062CDA6EF5CD1F60AE09976
98C9836E885B023F5515817D3A1DF231382E4E32D290F9BE6256F9AD6C113F23
9B3FDDB4B2F1BE16ABA76F077805DA19D2F197E899C90D3E1942C400E92B3D0C
D69157AC7312FAC9897FD6FB9C56AF461388E4BAFF491B08D21C217C4A80C4D8
0AD24605AEB942EC374763BBA1AA81F9D7CBC344FD7F3721DB44519905BE7BC8
CEBF075B4B37407B8B557E09CFB6E372ACCFD32F670C45D1D407DF685BE37064
3996350B34250B0A60A045AE5775EFA568C0FB83C522073FB1D7F6218070A84C
AE292F945BA7ECB1E1127F26AE7DE624006CE68CE51B3BA6D9E78E54D2667ADE
906F2921F731DA8327E942FC17C540A41E43D32163FB04B20374599222AD756A
94E1B466D72162EBDB15A6E40E6F5EC48F68918A4C0F26229E71582B3043182E
A2E95168786DAAB51E61A2DD28EDA14BDFF05092DA2674B2067D2881F67A9620
2776B5B833FA120AE3574B6EE65AFFBD0A14469DBE8494339A4C8EBB4195CF6A
851186DD8DE5E32E0E8CBC71BF25A5058FB1CCEE38F5EC170D3B7517059DE34E
A1E57429980C2722B733AA83F37FD4D440C91EF380EC5B9BA0D7E90197A1A353
0CEEBF9352726282CA30B128FE3DCD85073376B5C15772AD3948C94107DA1B4A
6EE1F8EDE4E4CD82B76D2298A105F8F0E52828B2785C1A8B2632F5C150D6BD66
1B312D89212807F7551C8EC51B4290A36C4FFFDCD1E22D1C0802FACD28FB64B6
73EFFDF8F0815D7853C6F61278341A1018286125489135F91345BEBA6ACB55AB
01A0EABB33CD1FDBC0ED08AE1E44B6B7857EAA43C97554276D1F8780DE9C3A3E
78D8E158C2A80C4770E62A0C0D25EFE4A52788354B9F041ACF627DA409C3BB18
E2ADF85C9F168B9561D7ED3F9424B8B7EB6C9731E7F822DCAA6C0C4142048EA6
74D3D9AF40D55395FD7035FDC66468D71E0116B4C7CAD0633427783027AB7183
E79935AFE818289416A7867A51AE1D08C0C24C7DEEE92DF84CF5967CD2F371E5
26CD4846D3276CEA3B23A41BA601AFB5AFDA2A5CF1E22836542E9371C0036324
FEAACED9FD98911D6831FF97EE45AB7C28DE2D60FA2AC8D57B0F8C757EC59BC4
BA2C6F08995BE1AEC54C18ADF642AD8AAAED869A2395D57DF91F232C8D53897A
3A99469000B23C8E5B988447FEA38881E4A7C0422098C5C0BBCA9C960AE49695
45DDF8DC0CACBE9E972EAA2A868E004E417D816DD267E6B1D639495302106845
96834C45E86D0B4004B0340AC66467DF2556FE9B4AEB04EEEB38EFE801F71407
301D54884E0CA12A092840A740F37CBA3E91AD7EF85B362F5696113BAD9C9378
7E245463DBB8E6935B1EFCCE0E19756F02F17F0558E5AF5C10810A93B73D4A10
536A4C7F743CD09B432225CA14A00915BAC57B0F41FEA67A0CEB9CD52D563CD5
E4578112997AAFF356BC6ED2C0218AF7BB14336F036D001A33464FE70C7CF03D
040CD0A8423EEB09EBACF9E1474E7EE0ACF14E3DD140302DF036B33AF27C7727
EEFCFB16534D5A4B0FEDC7C8AEEA030064A07234AEBCF8BAE9778BF3CC8A7434
681EDB32F3728AF12CE990DBF82C5764F0C4AE6639CA04CDEE62D8DF6BEFEDA6
5EF2DF3BF895FFCD2FBC4EC846B98CE4AF66EA7162A92BB1987F960D4A1CD0D5
6C6285EC4DEBA9EF2CC48EEAC756311223BFCF40AA7467B88A224D9CC69382FF
B541B2B74209B9DC0BB659B2598C2F993A3783A2F460191C8860F9CAFF63188A
063027848DBB84D92CF0B4F07C4C13D45F73B06488EFD918D832F47115CB8B53
3AE31D67DF47E46F44C7024E682366374786DC45BC8ACFD694615D55F8DC31F6
C590DEED3072A92519A5663F2DF79C3BADFEF8FC2EEA10F971603D2CAFEEACAE
3C419CAEA7552EDB8F49704472675362C61E8BF5ABB11700E4A01E5D5145D483
A520D0A332149C692B07F811E6B9ED7343FC2EA40F0595ACF9EDBDABB4F69223
0E8403E8C4E49A5F647B9EBEE351B6006BCDEF389E609E61842A53247A6E434B
77E06D31808EFE41BD14D92BF7832526CF5D001968FB524B08C72F7B13525FD5
8090ECA7DC56B160D266698A09098906CA70803011E1056242AB6767F0B10614
2362ACD0C57B1323F90E77A14BEF6FD38460DB57C87791AFFFC8FDD62C674EEF
F7030C0E6F0679EA8AB3A626E35D147863A18C129C128C09A203189A3B2CE80C
7CBFD901771F16C97346F51FB3240EE541D525875BD7EF6C94AD176B589E5A68
1F75C1F058EAB1709EC66D6AD2D86FA99D45B082D19C5791D9575DE62823385B
EBA5C39B81D841447B566E00B3003A85F03A3087B1F1E5B65DB885D795C84009
251BD32209A03F5302A972470FCF10D3428C94B0B4F95969C72E4460F98FC384
30DFD596EC46BACC59E7DD376095328A77B13BE29C32731E78B9FD005315F7A0
13394E4BC269F6C5AB93D8BF5157FC104DDED5BFBC5C90785711E4CCC2422514
42C9AF80620D84C4FD3DEC1B5FA128CCF4CB7C8C911514A09E7B1095DC53C042
E269D3C24BAD492C50057B71A5B2CAC668D4D075720445A155011335564D2D16
C0833808D6661C7C9EEB21D8B906DA0CCBC1AEE6F15881BA165082A350D4CF9F
85800D00C9313CE6E67018858777466CADAD354DF41A720EE9A3FCB74782BA8D
A553099235FE2E104D779696481FA8FC1F61B3E1FC4DCF3C5CF7C56DB4A483D8
8755A9DEB26B2DC5242722685B74E6A394F345EE2AE61E123F6A54BDC0CD8169
8EEFF19EEC10A7AB91E50A2938277AB0AF5F72BEBEB6DCEE5AA6E2D1214828C6
EE77CEEA57F43E1D10EDC94E3079D4C5620C9694AEC7634ED82EB4552C48FF2D
22F38CB2037ECFF18C13247DEFDEDEDA1C25CAB8021CE3BBFC23F7A8D5486B15
EADD4B7C852C9B436A3EC91395B082D725EA440F51AA2B898E624E88281ACB48
6CB990F32B25526BAE77C3474E4929E4AD8BC7EB5337841C4C77CB377505E2CC
A7023C4FB18888A16852D0CAEBD192C1103E7EA3A173B893B5110B1E1BB05579
DD5892D816A05BFD3BB8FF4C2A335161FAD34EBA19E58C5059D71248217038A4
CA6866B9756C1B5864320B1DD7D20FF342141CF82FF91DC26B04C6552A6689E8
454082C0C936EC1111182B03EF35DD87DBDD78AF6E3403AF7BD9D9552621806C
1EF383B3786A1535741FC539F138E7049E5A5DA710EBEE976EF44DAA3BC7C3A5
B210E9C2146CB16667A4F33B7EDFF3EC9EB77646527327859BD80E847B441E94
B2EC8CB64B46EFD82F2C9F95049412C34763D0802DA0239ED848EEBCDE358AAD
EB988652DB5CCEF802EE7A42C6B39A1EADC98825E84150891E9DCFC9252AADA9
51C932B7C769BAAC221B98336E57C37939400EDEA2448E3AB85893BF40F65184
6497135BBABE332664B56802718FEE30B45784DD96D7E10CA9E3ADDE6CE923A1
83C123C6EED1277A0043E696FCA3ABF459701FBD89B288E9448A7A8222FEAC25
58DBE09D2FAD61AD6E6B21755E0338033E37059ED71914B378C45BE201DE4C22
36D33C447E73A49C90A37D4F87994BB193F8C3681A032DF4804168133B9FD9C3
28A6C48F9D260850EB890157E5B9BC6BBAAD08D163F3D0417B4EE689A9238405
591A0965313AB067707CBAF5FD0C6213D72BAD0CA8EE9E89D4B83CE94560E2F7
7C8F6550648B877CE38E2AA191BD576C259880745CFAF27B36A11AAE47124F7C
66E4F06A1885BCFFE3D40469537AD3B43C6F3A90E9B4613D1A71A59A9DD5E1FE
B9B80B845E6CE3374BBB97FD05033320FFA55B0903D65061CAACB42E25A5AE6B
4841BF5C20DF8963D2B7A3ED5EDC6AE34C2C2C6B30077B78B798F3A583911CC1
0E91D015428C132E83959DBFCEA58F525DFD256F9D1D05AD9AE2907602B4F0A1
4214B6B8F270F1AF84EEC10F3194685BE40783491FEE95EE5560BD5213907376
65877E7136D92845E5DBBD68CFBE3413D1839231773589D17E2117BE87B438B3
2FA033AE35BACBF17055F1B8A161AEA37081D7529F9449C2EBEF10DBF519BCE3
0D7794A256A5500892F9B965B7429C8A866F149161D7AE0EAA7FEF8758902BBE
45D93351955B6F9005FED7435844990EFAF3CE56CEF64D5026BA2F95B01BB728
1FD45015CC47672C970844109F528829D673CBB6816A0FA618B359B7915EFFA1
B09F8F2328299DE9956BB99B619F09935BCE2805A550260A67B2587BBFBF10AB
EA7592596830CE439A296ECF7DD33A3A04E9FD58DDE19383062598B014C6C8C5
BFBA9C827ADE5D754F00B848819D4877E0F3CEA7CE7763657FCCBEA37CE034BA
2CF2F3746AAA6F2882504C2E946F11BDE78CE5F1BFC6F9BC032D4CD51509ADBD
07379C3F2260BCF07A8DE74C8D7346040CB3FB62945E33F7F0E4BA96BA002AE9
773F51FA7A1C35BAF1B265A46381DBCD94EB451FF4B1DF0930F442109122D64F
BA31200863D83F30216AF26D7AE19D74A6317A21855716BC2D6745EEF074D19A
77894BD8BC315369AE6AF8BEE1408A740216D8E9F6488AC89B3992DC53A8EBD5
1C69FE5839D200C4C611AFFB83CFCFFD3EEF01516754FA2ECB5624E2A4DDB998
3A97A95C1D97EA8FA961B8613B5E9B6AC018D7C66AB35AD15F63D7295E707B72
5FC0C768531379A828C1EBE5CD8F8AC035F16FCDAE620BCEFD88CA17CB299711
C8DD8DDD0422987E2405C1D4CE4436C8B0112373CBCD8D1211CB0094CC917A16
B78DC1250492019EECF2817FCE8FFE37206FE8DECC0866E64902C92C755FEFA9
CD1310B01667C7749DA3F1BB0EEF940F16B87D4856DB7836D1D582BDD4ADAD3D
E049DEB02D9983CB9598A6429B481E470A52ABD283E605958D4062948822180A
E9984EA6F8D62FAC2BC593A67DE6E0E48EC889B7972FFB740E8C500F779F840A
096F61FEE1080B0C5D5A344371B1D0A651866472D23A82DCD36FF25180ADE000
83DCC22DC925989D310E2DB019E66F5B4065EEF57EB2E5B619E40CB0E50EE833
DFE14BBA53EA5DE97CFE82C417560AD0765C4EC249909A0470C3737D9095977D
336A1F1B5EF8E83D732B515829560B923A15850237F2E68DCCE9B14D86016CFD
2630041B408A42E73BCAB40D68F749B60CC95ADD7773E46FAD4D00F031710AC7
1081BDC31B2817EC57C417DE476F3003A4B3F4A5C233901D3F3EBD255D4BA03C
381F81D1620E0AD063309DF953A6555556089ADA213E30DFF4FDCF53C332FDB6
EF4334F49E7FBCC31FBADA1A2F43063583573D70504EB0D7A1A4155CE4D72857
D09BEAE06D0012BD949A548CE487754B66516E6818EE02D4034E20C56734FEE5
8CA6135C03C25F9F377C7314C95C90286EEBFB2CC6273DE16E6433C7BD037EE3
2B65CD176281C6352BE638628C783F2BB9FAC45DD6CD28C9D2C37A94105F2F6F
599D59A154B157012E81B07D9B857FE90D79B5E1BCD4A0146163DF097D18F2A9
627ECBF978D946E002B0159FC3AC74938BC6F6C4C9C8E8EAFD3C72ADC24E171F
364B6F07DE1D4ACD0CBF00063B94C8815E3465B3DBF451021E691ADC0F457421
0770DD15EFC8A7CAA9844BC378BB858369D6D37C244352921D02382E7E571F2B
5686B797E5BDB5962994BFAF3D115AD2EF47D5E3160A0CC4CF15A6F848ACF298
5F1A9427EC5D6B6F7FE862A3562951543CAFD8382AE17985795AAD3C4914CA64
1347152C95830CA044C0F9BCAE8D16A6142C67A4A117FEC0FD362F7798ABF732
D665DD7F16068BDBAF3AEAC71373851A1523C9497EC8335C5B2E7A22A807617D
891290A2643009F778D276AD8A32C73173121CAE02965545CED579942ECBF47A
17CC25657EB9A5B1DE7ABFC22B173BF88936748AE023519FB1D15E6450E1A737
2505AC9021AE39E2C0FD90F74587B4F3BBBFE244B7C445B1AD04E4BE667A458E
067A5F053D0D65A1FBAD38885071CBDD2417B266FC96710539C9E0DD7F173945
5336A7FBF142AA15BCB5D6F0AB00A4BD02C8B4F0A17DF27FB445587AB8DD8809
B95E30ABDF8E62ACCC46D24DB46E3398972F90AC3EE4A73D299BA0B15615C068
994393DCC32FE75EB17FE048C9928DAB1E26316EF94DAD222154A57C7FEEB929
D7CA966A70987EFA2CB5CD7575D975EE47F6180C55E9C0AA94308A71AB446966
CD9E3890590D970082ACA3F19221E027D579310AA54E029D45BDCB7BD728994F
A7A3C947F1B05AB21E3C83D4DD1F9626B518672BD6CA4C95A37C734732C29523
A09AADF816CC0264EDFF896F1CD1202677B332F1573011A3F657C407EE3E0482
536976B9CF2E1D8ACDADEF79E5359279890DF6C4FB5CB12532C8D025EDDFFE1F
27FD030A5E236933D2280F063EB5E0D1C343A45B0BE36B3292543162A3B12799
B834255E169CE06BD5941C97B625EE5B57A297A6B1B26ABE79371E2AE2AF299C
26DCD463A995C2AED7F91945D21FD1F4D947F50D79549179F0F95D40A2338866
36B8646429E5A5B893A3DD62AC1DD98693FA4FAFEE3A3FC0235F6B5D9FCB79AE
F929EA207D1EC938D2BB2FB2F1B44E2F020DC15BFDF59E7CB87F1AB52D8B496A
140726B0FFB9E9D7BCFA3737FB98BCD2B7BEF40CEAA39C4437B1B20557DF8F98
CC4E88B19F316AA558BA0C9C77A646D9E3A325E95D8309BE63CAD72B898E6EE2
FCCB80518D01E4559A9C3DD8F653CEFA7F86B5955C4714268CFAAA40F88C2592
0B68130864D9013A4A75718433B04E64371E7D4915AF54434632D7386DC89DE4
9982B3B4213BFAD698587193E1D4ADAC81816A4231020D4801ECDA38A048279E
50F41E1D2CBE30317D941D0BD39B7C1E5F38DD49FDAE75FCDEFF3F9F2DAEAFC7
E3239E68316DE532B8437253005D9BD094B71572A299C51BD31D6D4838970493
2AE9024A9A36D66801D223C85D09F38F87E7008CB949852308C9038EFA6B4C88
1801DCF07E1A52BFDEB6F7A36C2C5D8DBC5E596FB24D8CFD6F9E1B523286B545
5DA2C5A76CA9AF1121B275DEF0A80F10B6276EF6D67B9D92883B35877F79BF3C
B2D5FB728163ED007DAAC50223EFC4FA1439E210486E13D6ED93B672C388EE39
66B29E84178A18A067565891A312636E191CF8A67C753575CABD76B717A8CC0B
2375217C3A320583ADC45A48F645CFA7DEA6D452DAD94617E0B052D6FC1C2105
BF120BDC34B2E87A6F5DA540C0F90781C3794BF46DCA0938EE1D34CEF34008D9
C2555DC0B6A7B47DF96E57A1969472AC82A55707CCF5BE93AC47D777F50C6EEC
42980841DE0FE9804E3FC46DA20C6160E8149C52017AE05805C5B91017FD0FCD
06343CC6C4BC7133DC0B4D78ACAABFA7CB2C670B71BD259DA3E9F52267192F2F
73E04957EE2FA9938A0D2A80A15B277447EBDA307D1478F953B37E79FA0ADD2F
2D23E246716B6B32DC81C421ACC2FB1AA3A2B02497D859AF05CA5681CF83A0C7
1F92C082D41CF0120F37BD317721A1ADFA1D734A9833A21BBACD7A3D7D91ECD8
8F38AB70AC3BAA7E96C5F16C77C96E9BE0FD4CD2357B415D9A43BAFA7B88DC37
C80EC528511763F34010246AE3F94F8FB90463A5EAF6083E6A4FA53E1A5FBF74
CA775B574E09D5C38FEB913C478AA74A52BF7D7F3A8D6467295671B9D23FBD16
0F772A5D541F468AE01AE54032C885E5649DA37689153341BC606532644DFF88
C599FBF2D49FB0470BC40155CF8350B0140BC033A1CD15A22529A864062BAE76
64E909E3E4D36B340829C8542B276573801F09655AB19BFF40F604F1900629FF
4284F2CE193B8E72F9B9B1D2D7A18F927A8E6146C7512579D1DA771B4C9BB52C
55A9EA9033A36F46139A4BD8000725ABBEFD58B5115149742099A066A3118044
87B8F30DC1DE7D40D24F4787E25C8AF3F50F517911D6A43FE12D4E073566FD64
D1026CE164C05D33C8569D7277A7E48EBBC0C484315EE431801D319AA20A07FE
6B51E91696E4C84F1E811F5E3B04E89CB8DD96FA4D53390DE6F9AE8E985DD9A1
8FEC15ED663A772A8521F95D3194D80AAA4CD04EA3D6BC1ACDF2A2C290BB39B4
49F50528E31D149344AC5DB8FC79CDE00D1CEE43B59A29580BE09D5ABB3E869A
1A8A2626DBDDE8B6F0A4AD51AA3BB511EDE8DFCCF2929AF7F92EB055DBCE3F99
F6FD9C4905D8645C63C85309F01D36031C2832087BA9CD79AEEC8E77ED7EE9E0
1B618678D84C9E8255B6686173C51C6888E5A4AA9EEED46E887113A4961AF5FF
2E86AD39ED71F0A489D4431DA38F8F717501CB9ADC6D62FDAC0A15CACBE0A85B
1D3CFE40DBD41545C24ACB8CF462B4EF7AC4C889946501C272C57332DB647366
EF3F2221801D023428E553CB8A434EC62E5D0A3DFB5B92B6D3DA36D430709D38
1CCF266026A8F5F3F5A534B6F619981FD9E8EBE5672222667FF56ECE4D1E9B57
E0F2AEE0AE6A75997B9DDDF82DA7D13B53EE6F86BC4EC2403C18DCC72591830C
C840B19CCCC31CE978E7254B8D3CC0CD17F94CAF802DA88A00930A8D98E08703
0A18FE1BAD45C8207639ACD27FCE281FF9E8C6FB7DC1FEFF480B49A0C846228C
9FEB3206611F133D4A1A6AC3B7224E2237CE0413A4F2EF2B3789C95061557183
A4ED7A09E7E55608314D02BC01BBDA67E33C8575FAFE0259F2F2515A4667AD65
F9CF7FEBA14755AD9995EE4EA453998A9E722D5601D9E470D04CE8BF5AFDA584
59C8F5B3FBCBE3FECF767AFF1BCF8DF84095357FEC9078F658D51A30D1C62632
CAEBF9DCB49A5BAE3E8AA9360D51C912BE7CBA623A6B95D71AC800C51A49211A
6EEA146956388990379AAEA08FB3809DE1A1AACAF553803DAA7E630E0C05FA95
90BDED5909AEAD033F6638D2262DC41BF1219986D238A454EB0A2C5AF7629F09
44784C30106447D03B07A69122101985E42D56C8CE92A01F33060684DC74CDE8
5DD4936B1C9504177D6DA3928358F8B303D459FC48DC7AE0372C514CA6806E2F
D6033F5BB1418F1610B23B31556DD59A5B1FA1324F8F49109FCE8DD1D43E8C7B
81DE8FF1F2C4917E7AF7E203161A442CF60CB7177A8121C00DAC21A62C6525C2
50061C8596F65AA914A4E14CFD4EC196F57F6EDBC24E2AB38925A0D9663FF104
A3C45FE98B71F7F42D79AEDF80F207C605E7BE7BEBA3A38EE6BA20636E9017F2
AA6DE29114D54D6B05DECE1DB6FD09B53F918BB489236C74DA59B0240FC0E7C0
E410BFFD30880054E513A2ABAD82F2424FDECD6DA18A7D965644A5165B427D74
5BD5885C22AC3B911957BD35A57C070A76BD33BEBDAEB2ED58C5075E8DC0B9E9
787C14A043EA052D4A0B77B40A6B179FA91E2924C62A69B45FABC316FB3BDFFA
1CC14C9A8007CB10DD5EC726BC9271F4CA1553449F21BF053311297331E01446
9A46F68D8F0A7681EC9DD5842091C6312F216FD5DA164F45ED5A5FC8E3F4093B
29B9A7183AD34AD805B32AF254974F312092F35B91D72B36EABB97FDE6EB493C
B0073146CBBB3F161EA82254C86D2AD4D945C89E4DE65EF5EDA32313BD6BD935
89B613C9B6B9332E25F20D70C245654014171162E989F1EC814191D8B0BEB9A0
09EB04091C15DAC8A63845B257BB1EA43CFBB33DDC5FB7E5E81D3AC401C254B1
C238109C050FBD1D691E6ADCF5C9B3D84A647C99635C039A039814B46CDFE662
57BD3F9B2B4D3FD566995CE3B1C84CA53E73DBD746E950B7FA4AC7F2F75B13E8
BCDFC6B6495856F944FC309B77CA4A883494B9EB9AC1F74CEE50D04F3EFAF83C
372452151B0C97B70E94BCD7D6BA0BDFB1386659F5AECC8DBA54532A22614ACD
23159A6D99B43A5D3A95910831F3824C831101A72F92636EAD2C5F15F83A9230
738A4EDA1C488ECF15E7494C5A7241050AA9B56EFC16D9D7875681DB5E688740
BA1468D6457A29D3F96A3BBBCD1EA66E34400372E1FE2DF081ADF8A411703333
C6AB84279CE15D49D20ADDF2DECCFAD4AFF5E40246DE10DF2B3DC06E7A919CA3
06F0B368B2A220FDDBEDC42168A33C0131737B077722F90378E8A2046584B631
879AFFB0B19005CE300048AC98E14259975FDAF27AA6EA081DB5F66BF2921780
5C2A51B7F46EF22AB10D3586656D7DA59A5749DF511AF5B1CA5BB9180420834D
668E2B0D926053B3573F69F1F0127C5A92A54E9D3083F6AA86B97353232BE8B7
0527E441C1DE02D9261110864C59D6C191B502A354C89826BEB16E93339F34EC
CAC34310ADAEEBF63044B495AAAD40DDA08918376287CC12B0813CAE0097172C
D0A7E819BCDB702CF523C217DA56B218FD583FFB213D90B5F66E8FBADD2AA6FA
A328A202502655AAC3DC29CEFB7B852EBD5A6F7C6119AE8FD72E288AB83C5F49
9C085C39D4C47F560D91622D46704CAC33CD0FFCE057DAB3297C572FA596F815
98F33F25EF0779592753743871544585CC5AA3F7F7386902539D7238117C2E76
C04DDDC4EADAFAD6A89A586E8CAF9B03690A76994B214B3A17C2592D8ABF177F
2F29B8CF92729CDBCE3AEF19A371232C7B859947CB27B2AF6CCD52A93EE1635C
A583263C5D4C51E5F2A8CE4EE1FC2E8C34EAE9CD872C9F0DCE0B55C6CDFDDF1A
E38E81BA154449004F1DF05E244C7F7A7E95C730DA2AE5D03FC973EDF475259B
8D67DAF88BCE00CBA99C4ADFC8F3F46E5FE4A012EA760F2A3A9F3E908D7BB2E1
05F7BEB96888A625E36CB1C3D5EC0B42E5C795F9700D4EF6F7BC773E739D78A2
C3565A2F35E57A118AFBD871DC41C0AA12E9877D7D64F392A8A051639C922398
2B177B2087DB055B1D79DC0C2F74DF274535A2BAB1268C1E48843B35783F32AE
115DD8ACAB76B7AF6ADD2977EF4C6500E06D93072BD583579A419A17B2EF4B24
71156BB6AEA7D2AB8ACB23C6D9FA67EC085959730F880AD275A74814257DA741
653B6DEF9E37E9E116C28544DE04B6FA34E2E1AB609A204916791229C5F5C5B9
B4837004F52E86DD8CAA9E18C0930D88F148F428738A8E434BADF586A28E0457
697EE2833F629493BFFA1E5DEF1C076980245EFFDAF6241E0634C0E5FBF83639
43A6BC4F4290B17CC3CCCA5965F65091C601E2029FCF20DAD3C5F7CA3C268556
C7963E24D2385B66DD51A36DF8CA4549464395223B318663AB09F73682CF7274
7CD7AFEB36DD310F19D8B756EBADD8FAF5A38D1F52E4F9133648C879264DE5AA
7900D2ECACEB9DD1CC5E88F16F328B1C0F324052FC250778C41092ABE2CE68BC
CF020A6621529B3DECCE73ACCDEB1592F46F64AB11BC76CF03390D1DA6B64649
E70A2ECC2876BA2A10885E57DAE2D19F17DB4FC0629730244601F8C10FD2DC0D
0310E43982A768F6C21F1494D88DCDD2873D0459CC217B83A340064A2395B95E
522D7092AE66BA4DF89DD661022E074C57ED25616CC076DC727934A1B496D936
B9F35140BF370DB422B434E9A316E71582FFF6C0AF74E08AFDB26056A66426A5
92E37D97ECF277048F14EDB1B2B9B47E89DA3E2968204B3A398EAA3038C7AAE7
8B6F65771823E36EEA0D05B88972BE27512A6CF5511B73092EE24C4FA26AB5BD
5A93C125B52D38E48F9201B9EFA439EEA77FC06E792028F4EF70A52AFEDE4F4F
FFFCD26F1E080D4EE49CF74CEC7BE9FBF80F1682D4546F4189145F21D1FA7C3A
43AAEBD35D3B59047C33A80ABC6C1BB0374924D9814CA00A83CB63F83BB6260B
464D19759C3CB1543A1B630C5155422D3BDD12542C2EC3C03EED2934B3F31750
776DA1EFF187F5E011658215BC2E7A1ABD08D9AFB1ADE3194C1FAE5CC85EFB0D
E4F1614079A3233D41A6CF338B4232C935FD690A6F960EB4C6B585B2EE92E52B
637E898FFA99E9508CC5E607DC3E8204D603D0EBE01F7B332327A2B00887F53C
B3E527943769903DAC6DDEAF59639F09E5F52CC81CCD3C4C77BCDA5CA72F33AF
74FEDCCE18D818076B1C9FD8687D008B7BAB52BF97460EF2E8118402E6981F53
FFDEBE5EA676402789BABD7EFA7C503DB7E5AA6BBA54E3F3F06BE43B9DB1F26F
1571346ABD5D7C21671100D3B55E638455EC9AD848B3E05329225787614E0619
5F628EBB2DAF2AF79B79FDADFD37C02211CC76CA6B77845B7E12263EAFC58B40
DD704680888D15D2F63DAA7F83F636D52A925FBA6A5AE2AFD09A44A532CC2A0F
EEA2F1A94B6FA12E06397D59885BAB9E18B80E23EAFF97AB6F904B108E973175
0F845CAAFC8E5582332AFAAD3A3BA88C43B9A05EFDCA43C6A4734C8C98D32E28
B3E539F9CDA44EBC4D95EFCD20B6BEC305A0B0DBF01C7B4EBB037964700A231F
EBC5F3E965820389146607B1932AAB4DE6C249F6CC55E4991DBA1E81C2A1BCE1
24E88EDAED77EFBB2B84C1636FCCB5A0EA39AD2444EF98D500BE765D8FB4EE0B
1A53321FD4BAAAF5B5F3E49F9A83F898DD943AD80AAF8C17A3957ECCD9014E9C
41D62A8CAE1ED7640DB040DB3CEB2CADD1CFEB14940FED73A9B06719F9FBD7F0
BED0D4EC8C9F23674B1BCA55B3C6BF94D317D5F04E3A2BD7295DF7F18812FB47
1ED8F24AC355ED4CC7B856B2E47B98F745AF4AE7845CE8D46EA88494EC257FA5
604998A935AD69E10E41CD152E1496A9EDE1A94230FC9732BF17D235DEAC1596
0E9B0143C7A980A87FC04A28720FC5142AF5CEAA7F05B46FD7ADCE59E2136540
09496A52CF53A09ADE233E8B083BEC4C8CCAFCE16C6F0F1321194971E2C6AFF3
5F3AF2646B361164E102D6A1320B027BEDA5F3BA820BA2B9A87ED4F010514ACD
36A8933C13BDB436A5A00F1D538CB5006AF656938044F50ECA5A54C6F60E8935
FA2C634DB6752E66D5BF3345ABC9A5E9FE04F04A01EA07D6632603C692D1412F
74FCF39CB45FC03113FD0B416B5C746763DEA323D9B4ED8F01CF1B1271046607
49DAE0037125FCC673CD430A0079765721E42993EB0A671695F6271B79C808E9
80BCD93D9CB400FB62C8C4E40AA219EE88DED3F7C09C983FF990D3D03D292871
00F3D4669EBD9B12E03ABE746DBF8A14AB6E55B0B8F97D12F7E759AFB9379D97
F95AF9F48EB7610F7B14322C8BA02E1B99EF080CBCC98CAE135445F14A849A51
AA793F54402F4C46D2B4780DD40A28B30708E8CAFFEABA1968BDD1C019FF655B
EB062D27D14C48424F09325386759D6364C4B2FB9BD56DF7643F553A612541DC
817F235966B245C4637653261B1EB6D24B17DC8961684B09760CEBEDDC3F4061
B25FDAD9499249EFB0FCE49C1E2122EF8DFB31B4390DD2F905003F4C19F8208D
5AFD3DBC5E5CDB7CF02B3F91C451F061C8AB395B238CD9C2D65BB443579077BD
FF4FBF3FC2D52919676130B40A47043AE35342D1EE5A4D146EF50D1CC604A5DE
B8C725DA8FFACD890A14E8F73ECEE6953CC6736732B0A905C0D73CDDB106F7CD
D3FDB94DA24BFDE2F3094A851C8C306959250C4D02FDEEFDCFAF341974CC3680
49BF932E05C2EED883A91C6BE11E40E6F85133F46BAD9DE2E9DA87E220AA4F03
A709EFE8EAFE35E979D9B87DD279BA091943FAE44C9A3FCD29618993AEDEB4BE
F7AD36D5F1A1186550265F4EA7205D308435D96BC5A51D8EF15B6C1279C11149
329CD076692161EBB6F60E4168248368637A17F1BBB438341134BF471716A2A3
6E8C9C0962C8F99CFE977013753E599FE4D35AF15605D0077A39C2DF9E510BAA
EB39ED04590A5805294C3381446188AC976C388AB269505D27890FA19B5DCCE1
BE6F94662CC5C8F36886D63B4F473AA470B0BE24F77EEB2194C087CD5CC85C67
082A0C12AF0D9A19A9C032C09388BD1201659E84D0AD6FC26CF8980E39450B26
6409574B70DE1E8041A627FD483BBCFB9D5F6FC5DB5DA05C3C3EBA8A4F1C6FEC
E895E9070B98558FF1C39FB52033F2A9FEFBD73FF00B9C7552555121E8BF55DB
4F3BC5E4DB7434656008F6A3D55E7FD8124C6AB6EA70CDE5B4F0465D0868933D
7BA0A9EA40C28FFF509F8C9E7A7084572E63EE4384F54DD1C35B1ED3C1F795E9
51E4733BFDD81EA0AB20E88A891F6BF62CC08B11165695A6A030C85AE325EA68
D212363374EAAD0B902E67CB2414089E5649C19076F91846FF374F36B181E9CC
C19E2BD1E909693B57B3DC90428EF0ED3C82A615732A412F929DBC5405F95715
94723AA20F3EC5462AD8228A448D90E04D9297D8435F7B98A2032C83C3FA60E8
BF735ABD2405B661D1E3D64FECFA6785184304F436AB3E406198E496BAFFC83B
09E273BB76E1A1AA7770AC9FFDDA1550ACBF2E930AAAC297750F939287F13DE3
68B525E5DB611E461BC168DCB464002457D91F6A18997BFBCF03E0F7B0CF285F
B6194AC6ED0DD027D979CAF0B552652D30A1DBF9F3CF6431913685E6A7476AEE
ED40379DE45A8947618AAE1C84F68DACB87CC450908BA380D06D5C6AB1404F77
AB31E235BACD82B367A869FDAD8C84D2F278B5CADE8A122B7C49BEB06FBDC592
A2D44539E206231FDE68BEB3E17E0CE57CC250EDE2A276D3153B0F5B65B1AF79
EB8086E476C2CC70D2A2511CF85C1A29B4890FE8502E7C84C2B148847811A151
BDD36CB4D3CF5234ECC4769B1FDC89891C67B16BEA4F69CD9AD0BC6EC56BE878
1350FFA6EE759B39F02544AB7ECD4D992D545DC6DA8AC578F8AE86AB5E02351F
FD00A4FC11A45570719A8FF407970646C008D67127BB0531420094BE93FC4D59
5058BF118B6B3EB5AC4F5C6538D129012F8AC17F864FF283DA42934CC91A8E0D
0F16F40658B6DAADB0C54CFA693CAA3FAB504FCA1B2FC6345BA3A50C073EEA1A
0F4C2B11303C04314BD2A2181F4986222B62905EE6DE11C060E18513A67418
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 106 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D466924806C40D48A5197F98F3534E222F7A7C8
219D9E38CF980AF2BDE2ED50BB1C79D314B80C445825CDD4C6A2DF918FEF2EE8
37C3B5169BFE13C15932D00C59D60C01957AE609307166266E31D311F7AB9455
2E23D693F74B98D737A233001E3DA7C2AC7B4ECBE5F04A7399FD57C59B82EE5A
C2F7CAE176169589CFBCC3C31C71A51E191337779B6568F13B9FF09C333264AD
CB4B3E7853
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/UniqueID 5000769 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 67 /C put
dup 68 /D put
dup 73 /I put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AAE0FFD5C119D11E5D13743E28D843B0F2EE315A2ED05A510CE53A2D06A7
0C076D4B6BC2B6A928553E7F0FD472760167DB486A777259FA74245EE37D0125
47314DEE4B29E5D22180BDB1BDA7D33406FD340DC3991F50800BDC90F7678EF1
1064986DDA53A77FBE2EDD38E20C41EF86CD50E8EC167344A3F3B3C3BD83CD80
87BE64CAB702F965FE44EE1E0AE678DF66397F1102B40DEFFD9C53A2C6EFAA60
18388C7164E96AF3E79B3EB3836B1A0419EE2198FE1D5A0DDA978FA7AE513696
9F1476E4248C93FE1A6B29B5B97D9CEC9E6E87E40858EE27DA07BF863FB6D5AF
08722B9B60EE372474F410CFB7A5DB32A49D610084879C8B13E4825120FCFA2A
B97A6CB3E313CBD369FA35C08CB046A8465E8F07F1E58C2097C496F99133C45F
AC8128685892B0DCE3D4C445C2D707BDC8BB241990FF81DAF4A7EB2AF2488D22
883A4EFFF38198F4497F5B7C3F462D38B6B602613C6F3DE3A1F44098E7A366FE
4E46C0D34CFAD42F63CF75EC5F0BE873D9507C05D0E6C8FBCF00D3FCFDDF4591
592A91766AD09B58CCF8A709281A0C7685AC1593602007C44B09C5FEF074E67B
C162B28D892F8EBF46ACA8A66587DF9B75672B23CF72D902B57D6D9B23BBE859
E780329F0603BCB2E3C520FE72F56DE75192CC1229FFE2C38B53F3E0B6710984
A247540BC16088331416079CE4AA2F4121362176AE1B7DC6082F82DEC1287438
D9633A4425E3EE12381B5648BEF17716C672C5FD809A4B98DA933111B583BC4E
54DBFD1D5567AA9A33B611EE5EAAC8A9E6914F4A47022369E3E6FAFF16291421
32F2C74DC971E06E77C3F06A2B0E1E00C41E88FC2B8FB49EA0D4174C5C1244C0
BE8F235DC858445C28FE633F7089120127131D0CB66DD4E374D6F42005C13317
4B5D98ABE20DFEC81A9DDA238C65F732609B6C0F8AD532A262D7DF4A9588B2A6
2F1302F785094C44FC2EBF9E48769901A44E2D962E7F75E458E6BC49B5AC067C
574AC5A5612C9CDDE04AA05A6BFB2C88544B8A4F21028881CD07726072F8E635
E9F1C11E81E49E6A7D0C3CADCF3A4194F7EDCA6988E69B7CC9B857F064DCC36C
7D3E0DE92D1DC9967A27D56B2E5BFBE65FFD1E939D1F73E10B4A33EF9A40452C
42780E0C6204972886A3272EEAC45A696B67256DE332D4A8225C15545653E9F9
010D2AD94168B2D66E4905F443432C23E328E76EADBD65B4CBE1A2FE37AC289E
79C0794F4455A12BA272FB5C4C166863E99ED663328537A8D7CC08BDA464E06B
45097E6CA9FE77F5387A8F420E06060A030017071017E9A1B9338A43F6FFEBD4
8D1BEF4D7F559CCEA6363C1F88ABC92108114B3DAFFA69B4ED1159207F29FB9D
628520445C9481BF13FB783B3234A90269E8010D6CA4066AD73D0AD062AC116B
1082C3D5872D5B0D7D23F945FA29EA031F8170EF2B01EC339ACE8C3875A0CE09
0D0B5557615068B1F945A849493C359DA57224C207F3921C02942367243D922E
217F62A1CABAD2C77E581C7D70A873FBE3619C9F673B7F814036E368B265E969
4B048F4D89454B19712146A9A7DA7C755D67838B8E8B5A9353FE5F1D52DE1A13
06E9093C5C692A258C524C70B6F24AF628757CBF3E7D0DB0707147D010CADBBA
06032A9DF5B68B07C3BE7D20031FA07D79DC16391E92225498927297D1FC77C8
687C380E067789CD379D89188C71CACF3263516B9C2357554CC4EA893342992E
735926CED821B935DC9B20DCA32FD20E9B698080109A829805E8BEAA5B1D9800
CF5024798884F2D897E5F6F94560AB17B3A5F26C726618EF3005B9DC4B7ECDB9
13DDDCC967F50420DC10A7068878DE803F6F1712C9702B41BF5FCC2E7DEB9F22
546F1F738F177941CAA93B2459D81F8EC30C3A517FA3A68C98C211187B9880FC
8FCDF6D6F2B829DD24FF1B6AB2D589DECED737B64FC3417154D9BE228A7E4EC3
7D8A012EC3218E6641ECAD17FB9A885BE629B5CEC03D61EA86493004B4C60D0D
43F4A0999B39D174CE71DF5244F5640053CCC522ED42CD02330D91C599F72F2E
F7921A7A2B3DD71A044948FC99B5B514D3AEAE8E65C4C88D6BA62AC73C71531E
00A6288595D1929A71237DF554B1106D4B95579D0FEE9921CE8890DDDF04BCE2
4FB938D0BE055F523EBFD94B00BC92A5F0169E9F8099C3318A1DB7DBE6122A6D
F9EA19BD9BCE5DDAFF749FAB513205F0A86E1B98B9E0CED59F8EEA66B854B6E2
31050D44505E29CABC76736B1A70FDBCE9D31BF906D5AD085E2FDA058B4C2008
6753401852754AA4E37E16BBE6E2557B1B57E2AEFFA71FFC5A954C17D0129114
180A764F37717E4B1B5D7824B67C72B96D1E436981A23B8606A547FB52A056FE
CD0B59E1F68232A56FD9406FBABBC4463F6761966D64075A3661CD4248CE33F5
CCE06F02B67D77646CFD29812437BF0281465F4F9080B4C083E594DD4C65D5BE
40258A0E09CA188586D8CE6FB9ED053793699020712A4303F90103E578AF2AA4
56140D1B51D7AD581E72A2A900CE04E7C070FA7F75133705CF830B46BD1B8524
404A8EEDF0FFEB7DD80B2A4CFA4CE38053D4DBB79B193B155171890BBFF83A08
36494D4A0FC8F1A137BBCB821C61C3A5B995B8576241B21503FF21BE465EBD12
8701D9A436834CC86C47B2575544799E997F2FFE64D19EF3252A365C7C6ED52B
AC375FC73753B4A2DFB4EBAA1D88708DDD99CEEC04161AA3BCF6A3D03C73EC35
8F57E91094DC42ADF7C701390274F4A2330B84A700B0071C8826BEA63F6DB285
78600DEAAA0F68D037D9475ED18A34936ABC6C894BEECC91D70E284ECBF39500
59E54B6040DC3BCB73C1B37565ADBB2A5EBBA08CFDC53A57DB87C3D08E7EC9E1
ADAB6D181CD2A99D3FBDCF18ED10B08444B2A63B0039BE04F56538A5B350C9DE
180FC34C4B30CC014EF9BFC90AF6287ED5957E68109E0AF5AD013E59A9A7D231
E7F4C085F490188ED68B31438BF87C7604FB30F893F0E8448E9622FC9782C922
052C82DEBD88B5431BEA2274A80F1815119F465590A8EE8F7F869F375C355AC5
CD30747C4161184A6E1ED8BD5FB2EAE7505B9CE8AE5D020B2A41BD149D464A55
491F8C0A8854F93E8D6263F956216828810E7EC755FBE6D0633E68B31DB50F80
B59D58371D00485F4BCB35481E580F0E8D41C8CC6BC091F7CD7F47827CCF782E
65AA777AE383CCB00B25BF573E32FC311D5D9844CED749A525B081944EAA09A6
08C1994CBF949E7F7055D7111D02EB389EF5254C0974B8E0196AEC2C0D043CBF
90766C7E676E4871A23F3D621CEF9E6DE86A14D1EE7BD8E154AF88F7F5700FC5
EEB8083C2B3B5C2C19EC1B6C98EBA79D934E10963A0E39FE3D8D513ABA73DB8F
52459A28328040F385B43712DBAE225C2AC4324B2E2F256C978ADFB6863C13C8
A3BE9067B1F35C78B0455343897D1C46D0388481F25F85542B6D87BFDE8D06AF
FEAFE001A07D956BC4B9F2F741960287ABE490887E3F216CE4EA25BF12A9A14B
EA0DDC6BD8EDFE408570DA96A19B099A6718B5193CDB710F80EC6EAB31630A82
C2F61E6DF06F1FABB9822E25F4859A3A7E1ACD4D48177B0724F860C766A02721
DED43726C25474C9519B31721F4B62EF8C989D94AC6441233034B0B02BD43129
BC2967380023C0927E74322EC2BD0DA1C6CF858D7924272B29CBD336C63FC618
AAC9A7E39F44E80200200CA9DB0ECE6150F1B33F66FD596F5E3B14662323AB01
180B9D1B8CCEB5582C1A3EDB5D82040BF71A9A9B3699D3153747DA265DC570DF
EDF9DC6AEA6A9A6AC7312906420AEDA619CCAF1B80E2C0B1DD31F427B91CB2F0
F92AA87DA96607E89433A73723E2D4412DD6C364E77C1E12B35E3497A2D5FF60
F237B00E654FEC7EBA61E4264F03DF24778A03F756EA959EC429682CFFB58949
EBCE25ED869BB222EC233E3B120CA29996387EFC58C9D3A5150C62BD688C3CFD
A394CB170F2488CFD19071320F394259D83F6405FA6554BCA3A7FEBE36A2BA99
6FBCBB36B4B1996C6186A1F43330252FBB43898B927D9AE67B5282FDD27ACCA6
9F41B810B8A90E7AF72C77020418A30F703DC961C8546BB0192C131A328FF18D
350955DD9990418B3BC0D1869FFF96B14680373662FDB64319DF62F6857433A4
949F4F34D85BE62809B7C9810745A25A798CEDD3AF71767FAC1FD8AB11B1AC9A
8D522D4C4F7E8FEDB51E195C18639B8CD4D1EC7D7259379982ECB52083CBC981
3D86E4EA10FD83B43AB1E928A3CC0651332A9DAC5E1E6B371656A9A22CA234DC
BF506FC8BD4A81717397F562A2DC52360999EF908DCC45F26D6B9B21A6559983
540EA3BA4AD18E3C554D4AFFC7B9EE39C867488B5B4A7164E377BDF03A83D5C9
EBE01998714C9EF9DA2DC5D297DA205104C2EA8DD36A3611A48547BA7DC51D62
7650BF94BFC8F8DDC90C140FDE7CFDE1DEC8D3246EDE356281B8ADF412EF1D91
887A6E3580F09A121ECEB09D0828D36F25CAFF0B5DE081E8AEC62E32D4666F36
DA73081A72D0027298618DD277F146DFAD7D574F33D0332A9638A5BD39561B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 62 /questiondown put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F43F9A1290E91C463895BD12E8A831DAD661EF23CB9AD2C26CFB26
71B72D15270CD8CB1D59CA2D9DE884C96BB923B1EC8208BD7DCEAB0FC2293629
2AA1F72C6B470701C381E335C2364CFCEBACDD20CA36182CA7E70AFF5B14B02B
75CBD0738E35DAD8E60CB3DA4DDED557FF9ED386DA52D10615E700751C842FBC
85D89C0E713F556814E051C6CEFE7E83C2F379B88A801DDA565BE73013DD56D9
44D97798564787AE6D5A6A9FB777EEB850C7481B4A353EB9279731512C9B95D3
2ACA3A0D44585E55AFD968135F6492A9381FA2D126CF50373AB7D47B509AE6F5
C4B100BE8334ABE2268DAFB7983BF339540A8D8280F3576CDCD4F21408AA7D95
D50A7C1599E62D4FCAB001D5F9DA84FA530B88F2F8746157E7A60FE8610C87C2
9592E30AC21163023C7898F2DA2A54906F2221C56AD7A9DF6C2C6A95EBD915BE
E2AE4770EC9BAF986358B661FF1620D17527EF0EC2614EFC317D9A778DB1DD2B
545FF4B9938D2EE9029BD66526CBA334ECDDF677ECD1AC125C7750AB21E30695
7C52294854F30847A269652851601B1FC9768FFB51F71E20BC6767618327E1F2
FA81FE54BE900B5B832AC1CF40C827672A3B732639191B3F11E6DE64849AF4D6
FAA41AA05CEBE7DD4F1347213C9327565514E04550C0C994D2FA8F4E50A49BE7
0F6703D3DCE3D4E28DF73A2455748A51FD8BCD0CFF5C14B05370837DE81C2196
A14A4D6F64EB2EA109C0C930740CA8D60CD047E32962E0EDAE1DCC2AA5081B91
5F18B901909FB1F68429124249CE418A2EDC93133B8C70F4C7190438737FC546
D8229D5198031ABA3E6196D81EB7A9DE66411EC1180A927A53F054D2373ACF0F
D5DA84C5EEB6544B177862907A96739805A059A5E081E6A9504379EE68B58B84
0C6D14EE78829951FC18619EDA43CDCD742109A379F82431C06507F8A7896B1D
00E1A60488C0FCDCEFFE30B88AA50FEF47DE1D954392C81FC6850F91CF1364B3
F0EF7DA7BBC0753ECA375410F8D18BA678F4AA5C96E4AEDA4F5D6EE5C93AF3AE
EEAAA2D2607E2753F73D64D3B9E5493BB7B55CFC559F880691755882E751A70A
0EAA2905D00050702826C0166B4F26D41A48BEFBFC2901CD0A9047CC3F52596E
8D91A148781D2064BA0B2EEE00A7B7FEDD5D38A5F34137558FBB301FE4F37086
1417F54A29711BAF498A0F7732289A34A1A130DD76A67920DBB79BCB3722908F
C65500C95AF2A0942838E28B00E49EE6DD62D2DFDEA0DFACE6D3E67DEA90A16F
F6950933F2AE2A1D003242430EB681791692695793874DCCCC596126E33881C3
7C91F10FE3D43BC2A56C1F58DD7D507EE6EF317C39420BD2812EE3AC8127EBC1
2072DB9FE365D86F7BB84280277F207ADAB8965EF7C29AB7E8110B540C82CE4A
83BE3A6390E8680A86A2FB1CDF08CC7A151B869CC3A711DDE88B08FF59908F83
0776FD55AB6528318A5DC7647ACACCC1BD1E0E3DAE216BE2F3904C66F47C17D8
A5BAD6E5B40F3CB195B3F8C1A49E900DB4330C699ACF2530B98E9CB3B6950AFA
EB151B1CF06B7268C88777C1DB8F5B0DCBFB9C8A95985A0571E67A52C39B6A5B
3AADC961CA7434A5C655F828BC8EF81C3A3C7ADEFB46B575CCCEDF39C77FE74E
5AD5C2FE114898A4431060C062AB6CC3F552CA7345C7004C20C92C642E7BB2D8
BCC63A445840923DBE82CD3C1B41C92CE461A72647D4D37D31BCED986A271028
FCDC136E434D7FC5E7710559B91756AD1171ED39CF4BB8BAED589DC8B9172A07
52D4E0EF8B8C63299A6DD1B0F020002D182AF8045F63548ABC966820C444CDF5
5E35A52CC88F46F2383EC98F8367ECA28124A5E209FA3AA93A437BD5C608A3C4
6CA9D9CE2B863F9332B32C6214FE0E32646345C5A43825AB19B2255EF8138AC7
B430553ED396C70E279568E4925DC79620E34E1C6BA272753E307CC054B7288A
7C57DE0BC5B2799B4A153A4A7C5F034AAD2BCFA0F8626D840C88C5871E9038CC
6420C2BA6B2E0C810759593AB1BDB8C2F50C4E8BD601807D93540E890C37971E
766FCFF7D74C648A9DBDB613E8D9D29D53AF3EE71A2C1C2758596AD40E704DF4
7A501B95E8BACB0B04A333B64118E5AA3D95BB4CA2489CD22A7C5927FD0E40C8
A0F9B2E12E48C263C9319CD98FCE5A831DB1F5E101CA9096F3414D8B6EFD08CA
D8C37A8E9A97D2774EF4D5FBB6449FF692CE316E092043E5171CB013D3A8AEA1
E3683B8996F23C9208DED34537CE2D914362D363AA938D96A6FC2785D6D0FE92
300E5D681D9F339CE0D7C9666430E4FEC39C47402D8B8313FE2E3E85F329F8EC
EFF5BF0ABDD5E17ADD3C8AF3A8BADE1B060F654335981214B5FD16D44724C916
7C7F909DCEC3005810B42BD9CDB6EECF9081DEC277C2C3488C24B6FFB6FC050C
64203AD829CDE61D62CE0FCACB726F46E5878743C409F9EC02C1DA7E4F4D493B
1488E4D8618E9A2F20F932557CCC2FAE2B1258172CC02FB9B6A9C43624294960
8D6F2D67DB8CCE7C9EF0230E17FE4B0D935653EBE8902AD6D871A4716FF440DB
CEC3DB27206C8C6A322C7FB4E132D8D2ED103BC80507D717B3284A651385CD41
A651625D2C9C187AE05A076E9A968A4EE7AFEF5FFA495EED529A1B1BD19E5A54
8CCA66689B33D669288A08B03D8BB576E97935C2046E3647271CEAFB80235591
D8DA215FA13186FC4C393CF263E37AFD3EA0C19E7D67C5807A44F7DDB6EC2619
93A02BC2A06CB9A38F33743DA76976CF53F5F13C87E5D4B168DD9FAAD38A467B
4BADE8CFE6F597810D1370567A799DDA07F3009781B994681E7B36B58ABF8937
C686BCA7E5FD388174499456D12A52F35DFA76D8BD2839469C27FE9135AC04A3
B69908AF08AD8084D145632E21D0C09F9B76B4407B84782F84277397DAE6AE02
CE1420A4235308AAA34774E7F61B90FA624455C2B8BA0F91B473BB95039F0ABF
2E14210890DE2F5BE9CD710A2DC3AA85C09B08A33F9BCFA2416C9F93C1EE153B
96B8394D47134C5C555DAD5EEEB9E1614355E117E2F541B2F97EEA482E9D50B6
7118BA097A8320574E20E04D153A1E154436DC3CB8AA2F21FB94C2D83DB8249D
66D2068828375E35F0FB7C042FFF7DC8FE7D79273E175BBC50F3077109A1C4D7
652C2BB69739202BD31E5AD160CD3C3B552B27770B41FD5586E6DAB28FD7BB30
4B9D51B9C54F24A5E869EDFED766E4C2AED886495D1807B1A3B63128C416BBC2
0A5316F9F40ABE7E3ED194B58708AF1E5ED0EBA421A5F6CF0C2973B52B8D97E8
BB78E87CDB5B6493F1409287D40B271BABE421C317666525FF88AA2E75E37D76
51D8FF1298FA8AE73087180E7F21966463AF92EC5E1BDCF7DF04DF478E60CC9F
3C908D8923413B47634BB6D2A1E8C78C658CE5AE766D03B8724FACCDA98418B8
1260A3AE2F3446EC7E81904730359D727B923E0EF438F5CF4D4314089CF9D34A
E27A4CD135F96CC59DA796440B7A4CE2EDC4CC1FEA9BCCDFB77C2F6BE38E8A81
374917A9199A606133FA94413F30F1014DB1EA136379140DE5FC98CC306B9CAC
5E3AC7C4250E65FC59188232A89A46E40D4181CF0678E8AD68F99F8E35E5A84A
406477BB2F71649983D1591D477B8B364262E4CEA9A30BD858175D54C74D3D4C
E703F00747B6686D4F61F1268EEA9DC287BBD01683D5279425D9E127B0E64D66
A306AE4391291DAE4ED90966EEB16A333213EFBA90C866D21804C29A571277E7
A39E3562CA8E19101904A8B3524383A4C0A125CFC22F5B019E2214357A0DF6F3
820AFA033EAB22AAFADAEC63CCB18E93BC17CAF1DF3854E69FFCAD95AC5B4050
732E7416ADB963097A0F8428A215E3EA8386A9CB5709C4D45381DEF52C8FF0FD
4C6DFF60A2E214387C7073E7E51EE52ACAEF385B6431EDB69A601E8B21430AA1
983104FD0583F638489FB549C83E0A0B66174DBAF9CF35EECF830F146463E3E1
B98CC48DB6EA541956B90450B654FB73615DAC021560E6A4501B9AEF1676C30F
A433D76269B61520714E0C8692F37C7A3CCC504AD825702CED92BBC774955E8F
62FB9F8B01DC9A4C18A995CA6B09BA4354AFF85B178781D2FC71EEC2EEFB1AF0
5FAD0685AD77CD51634BAEE2EEF1C6D4E507FE6C285D244462E06C90DF1FA024
CD312F1A992813950EF2F360AC7CC21AF26F3DD8C8C30C63D9B6DE37FBD7AE2B
414D156E1667E124ABF2A4AB0E2DA92B8834B04D915DADC1B84A5B9017A54F7F
FA5DE7B0DD369BF65E34A8B9C3288D9FDB85563117FCFA759A94FD7A39A12F2F
91EF11755B3337BBD318EC917AA1725631EE6F4C9007CC05F9A3CA26F3768797
1F3DE520B9755449049745D30B17A09BEA4B1AB85A76FC936671BB23CD0B9919
F81463E6D1608ED67194ABE9DB2D72792F9BEF16D1527B5003F22BF17B4ED5FB
9BEB8208C675392D62B11D583EFBAF94989DC14D04949BCD596D2E83438D4803
E234A526E685CE8AE1048B70A26B81B4EB3987E1943876B8DC19F9C0F2BD8471
A03D56FE7C722619CD8B47106750B3AEB88FAC56E11E876917EF04AC347032B3
7B001CCEE67812C63704C99EF03A88BFFF033FFB00BC4BA7BB3098D2B7A09313
804D6960AA6F0CDFE2D691031B0D6CC1BB3C2D42DD72DF6DAD903CCA95FA414E
D03C23E824738428CD7A8B584943029D009960AE170B66ED565A7F7FC814B3A4
624639A91B895D0C0C9F53EE152CE4B7759C944FF72ECE869A601FD898304C6E
AEF8D297B69F81B84E4D303952C3CFF04D66A034A9531F37BDC0C07689341A86
A720AA0539291B9B8004F29F21B2A9D8EA7F0DAD273E5A44CC9808E4484F4695
0FD8FDC3F83425882EE4EC699B0B3D57C5C3E6407841523F831BEFA0C7E845CC
3BD7C99343FD50A0BFCE8BCF3547D84F80D0970C5B6A92E7395F12FA450373FF
8F91AC2D13551FC49C934488F7D4D7A36815554CFC9F37BA9FA6D39FAFF8C6C8
D5B42D95F08FABA23EC270E6085174614E8B26CA2942EAAD79F2DC1295F63ED0
0FC18F9B01657A6706E4A0058496074231ABD981236F18D1A1C0B20C2BDD43E7
BDAE86208FE027F57CBAD8435D9516A4A319E6FA5A3A543589D89AED6EDBFFC5
DF4F1BC8809AD42EAE4D16DB75BE00777861A16B21771CD4520CE96D56A8AFD2
2FC823B52C171A597E38ABED50D3CEB0B0EA83BDD4BAF4582B129AB74C6FA935
B940842F76557C561F6591C6B6EBB36C28C853A6D196282BB69B498F0E26F782
44BB46D6BAD2951B9FB2CECD3CDE07EF29EE1061FE2C9BE3F6CE7F108862D24C
B265783249A65E376E50637526FB82F869AD4E16A70F1B1943748F2D5FC69030
549A8A37CA8B744C11786F118D43DFE723D294439A1DB9F5192082E547DC5E84
B21B5ECB1EAE991743ED1A79F95E22D046F32CAAC0A44118728B96AF6FF7D6C1
E69A27F38059C262C4397B205BE6E1CA1FCBEF057DEFE3C399543BAEFDC0C564
E1CEA3CCF688940C2E00BE9F0A28D97720BE69BF48131845AF10E1B429AAD80D
7F82ADB6225855C7244C9DAF8CF4A2380618D17E57748D6DB751CB557CCE3555
A0C4FABA8D0F441727D17E24BC603251A05D30F771918F360EC7AED227EB20F3
87008538EEE2712E4DA5A0CE4038EDF66A3DCA3C092A69125D3360BEF53C924F
2B147A46B371E55968534C4EF9D862BCD5E4116BC4A7A758254230A28D6BF5A6
CA91B13549F31C6A372B7E5652E9CC25FC8079CDD55CC1C0D3F733039ABB81E9
AD494DE969E5973DF444A8F6416E1E96F02886345BF385414F02B6392C6773F1
4F1EC73C5594E0E9DDB39C352337D27AFAA023B97C36BBF9CC281CEFADBFD34E
F200CC36C04D6240C906E7B3F9EAE1C5E94572F15616EBEF8C178474639B4FC4
85081B6FF4D4BF306B964089712E97DDE05D15AAA5FEE4F86D0C2BC62D7F466C
2C2B8D67759526E5A21A5BC6CA444B7351DEB7AFBA8D26967A8D82E42DE2B189
9D85DF5538D642BC1404D82DA38E3DF49F0CE79A8807CF71A3D7D2876EA5C6BE
A1716E2A1BC52414A13A25DBA4184A51C1A5B9561E86103E303B0BD629DA411E
670B93C426E5BDD170408D11B9B1F7251786F32A6E9EF2DE33A4FE7E77C0421D
41E9DD4EBB032B4BA38CE5241342582BA4B3357DD67E06078D9C56BB96661C64
154D6285716CBC94D5C338381F265FD5D77D21421F56FCFA3A6937ACA0D1F287
6009CC5D804B15A4C813ED14C48C591A0045E8F639FB200C280A477C9D2D1BF1
36DC4A3AE73F7C4A85BFA90C5B560C52B79BDAE49AE16670E64979A2595FB3E4
1773FF538056B1812F07B822039B7444F69437431B1AE1BFFF7BD81CC332B7F0
54B03EB19B7A15410236D45D0B37C42844EFA475C0FE676AE22A3485F2CFD9A8
71645967F271AD83D2F654B355236F37F1400246D96136A7CD58F07244BEC335
A9CB3E610A0E2DEDD1593FB0DC621D49ECDDA29F4DC6DAD3280C6B011A77A47A
180C66767D81819ED986486BA7670F7E84414652008CE40281023DA5C3A9C174
254481C661278C1FD95E5CC0C5824D0F3044BCC359D3CBB3EB29A6B8E078FB83
303FB7EF4E53739846BDAF4733085C2D4C788C146F8A0B4E306EFCA04CD20CC8
F505000E7CBC4062F241FF22239C42D1A8D885AAD6A0699285369215D9862040
D41677DDB26F9120C3256916C49537FFC3D1E31C35273249FA44B934C14DE6F6
7BD588205904DC6B9268FDF29D525E4D3B1B182F638287F35A6B645308F7A6C5
0F6E97E0D072A874E5EB18E98053FBD5BC2A8113C2F67E8B5602389B290151D4
C7E0D6937EAD7037ADCBA01CDD7F647176CB17A7DC8A2D51B150C314352BDBE5
9C0F749AD90456911338A14CE1C369375D4A39A4B9A2788C6AD1CD5DF943DA2E
5130DE22838EB13298D03372C9551739EB8608BF07882E4DD0BEDED735DDD633
847EC81918BC7C2C80263C06D145ED548DD743C61A076D7D15AE4354C3D08AE3
04A32588053E556F9BDCA80C501C35C4689978AF8498A4555FFFACE64DFB1906
D4980063992E9F136C3FDE6D955A2D982E9DC5B99877887CB193338E68135091
9E0E1E0658DC6877626C96A53E2682D6A367D0A6FC1AF9BA5FBBBBF71CD285A0
65C01DD206C077CBA648804D70AD7E9CCA248852D7DF7EE919C7DB2964C14EAF
878028680E04967C465EBAFC81EC1430E224A93C46442E9FC1C669AE32A63270
8A95E4892737C63564C2F06CD76AB12BA026958EAE1121DF094B5705722C651A
DF8C64360EA0B6E1D0442CEF0E8CBBF16B6E11DDF2373832A1C8C47FEF5A8A16
3D546461439A09833F1973860F73CA7367EDAB4BC51883E8F03E5809E3C0500D
90825CD967C724A768D8F5995D71FE8F02D4C004C33257C763E0A3D9ACDC295A
424D7E834DD822F32B54F325DEACF586E2773F8D99B8B1695EF6EDCB316D9D80
9CB2F8202850F6F33CFD32307242111F55F1817D8ACBE22FE3F9EED66830C428
367B70C5E7C6D8CA2949412E7B040433732793F0EC765134F025701D8806EF63
89B8F3964C88A29A33877549B74165B61F8EB8FCE8A70DE41103E5DE529C9E8E
56758DB05E7925729ACC68706825E48B55DF2E969DFEAD1B924698DDCBE7FC54
E122D5B32E5ECA0A0564B1B33836D144D0A9F3ADE65D033A85EECB8226EAE3FA
2EFBDDEADFD822C59CB1D41FACDDB0A311F03F5AC445B52F02D2E40D3B823BF2
52E1BE3358395E9C830CF535375F91D986EBE439E7B32DFD0D0863FBACD534FA
F0D6CF289072C27F1B76D49E6B76F7CF09B028B5927101C88C682CA5E01CD451
A37095EDAF64F77CF775265A2284494094E1B39C4C0015273E454E46F2F0B9F7
C5332BCCB2172DEAA78E871278F6F8281A980C7B5381E7626412ED14A1F5DF57
D4147049B53A88B9C553D7A33DC7A2F98199B22F1FBDB0A941F88505FB8C7112
5F3FDDFD34AB1698F0AEF8339612538FF5271B12EC6020BB1592C5101DDBF294
EE6D4683334D1BCD4E0139519EFF6C9B3634293A557A6BC252AF713E60615196
AEFB22834DF906B028AB8D996F3955E235CBF72F4302E3946FF70B346F20E7E4
8100D2B1463161FED00567A6079D67A8D0F5D18E3466E92ECBDA6F90770EEE71
2002280EC4F5570F2F6607A72802806ECFAC080D4FF4B571B34C8EF2C257DD10
0D5AE9EE8E4D9EA236884CDE2ADCDCC88A606C92B351A11ED1D6E64CF96480A6
2557CB612AF3C29A644F2F26C9BB60D9F94D49580E6E1CF675F16D727D539B73
92985FF2A19089DBE646764CAE40F9F6EE82517CBE3C66B1606DA38AF200FE9B
4A06A7861D9A0F0048CD3C3C3163F4FFBC7F1FBD2D45D8972302846C255B8D89
D938C967F3364DAE049D44F477D10861467959A687C9E39B0B4648AC3B2583A9
CDDE966339123F66744817801C9BAFA0A3D679AF6164CD3C34DB1FB20F8B79F3
3F39591EA264A684B7841A2C230B8A11985743980B6590CA0EE1B91FA283167E
20D07528D39B8557A8A0238D38D35B76805AF5DC99570B16C899F7630E93AD85
4D9E272569A44F0D8C59AEC9D231C9C6EBCF4B94B421DF8EB4D50256088A52E3
AA933242871759DA85106F0A68233A81C2EB6A2C81003B4B3BDF042CDB542559
30177BBAD29613F96DBE546C9DA9C941CB38F06046AAC5A51C9E3F881EE9D121
CF9AE7E3296EC2F36C4241834BB0B850B372E82DCA0808238936DAAE522D93BD
3AFA5866AA125B2366A2AD1AC24089BC4A7B82F27EA893DC20203D5422831DFA
A8CEB92C87BCC2CA50037988E3814371F498E334DE5E0367B7006F759F03E5AF
3AF93FDCF00ABFC440B5A2919E85D6CE43E9A4162363F39B4AA3799856927BD4
331EAE8CAE8665C75DD54FF5AAEDA361B73D3EB71115DEEA46ABE83B3C567395
5749FBE0C6DD84E600C6B9B53A46C481C67DBF5975048596734F0904DF9A77F5
808A6BAD56B88B39C98BAA8A8166A852A7387FA43E19A573E0895EEDB3EE17F6
95DE7359637E6E305ACA811978343618BB43BBB03A5839E0886988B22B4FE9AE
45296C39E7672B9932217FD53B2A840F96B742D74749777F070E0EE6F3C3B4FD
9077D2E09242230E433A8541ED8708A89EBD3D3ABEDFF3AE07C410B993ECF785
3B7C4BDE0AEF97AA5FA25E3EB5C1A52B45FA8DAD36ABE25954FE2CB1AD9582A7
721491D25174E9916CF893E649FBB1FD860534425BF017D41444E51C0C46055F
4CBC4B2C5654F9D3855E03186286EA66E9555429D0779C3A1A6538FE84F63B96
AF67AC710803EF546190F094A147336A91214ADAA243D1FB3720C94B1606A521
C8693BEE95C046D7A145CD1D1AAE28536778024D767E2AE60CDE4F25AA8CB2A0
FF6D8733AD8850C4DE9F5721DD71854251B4F6B20EB58DECAA45DBC4FEF1F689
E48B27D35BC560A679AC6345D7CC47182F75F101AA0FF776D90F89456569B9C0
0628D39C8E687F5F527F325209348503B30E142511D53C30AEAC263A030C9925
1B6C810313C7463D31727F12E35280F4E05151B37E5AF1BAD4A18E3B5F3F14B3
E5A5F36364ECBD5CE2712C9AD6A3143C99BC2EDF32A8A5848ECC98001B381FF0
A1866AC27A183C6870B6EABFB2897A9A28123853D20A392A1B5CC60A31500DE9
722C32943362F07562B39E16599474A2D7508269ECEDDE037D3A8DF7A9967C34
F5177CB10896EDB88B7A5D17044D53208F4E211B99CB18C1CA6041D9BC409596
DD41DD643F2E82898820155EF2324C3D53A3A76B6B6762ED290452DB7794EBA5
E8EB2B1ACB30069A76C5BD0F503D3ABE630B4D011615C1701C9156AC4F31B8B9
C724E1413A9B7FDAEB020E8999E1C55C5915E44B7690861437D21CE55698EC3A
E82387355421060ACC4E3DA74A902C27B00B559DBC89A668F25D2B2E67612DDA
AA118AC28E87B20F618714DA0631501D00F596B379D6DA4C9253DB47562C857D
857D2EA6ED7B784CA25D7090554EFC32F1B94EB7F395C0DDAAC6417E96A34888
4EFA83B1EB9FE2D80DDB3F65E9AA592EC1E23C43C5F36F4C9FE016EB5DC48C37
5105FAC6DC38BE2631AA1A5D3834F959CED4201E0AB9E44C976B742EDC03F67E
9709C210AB94B0030221CDDCA039DBC99C2F9A4BAB8311DB6AD69F896BEBB719
85411699F968BB50D759B1A78A70A98C820C7AB8B1CBB36D6E2EBF289D167389
023CEBD2F04406D25A23222D200E13FF8281CB01C7EC72DCEB1F6F63C0714D6C
45CECAF5D82BA436FEC34E8AF6F5880FABC02355B1892187C2521E2F5D4911AC
5EF2751F73683EE53A91553170BB1B05F0FE988E6B1111DCED3F7B9DBF851CB3
EAE38EAD8B3DDE88B60FCF1AC5B1E65386BFE17CEF1303FA781C56020AFA88DC
CE8CBE12D8990CC2F4CE87044BD4C58CAF2CC2B6717E8B794AB2DB5A033CDAB6
9280DC38BE1E7C9D53A6F85F73E5E466A2B2065B53AF9557B3E5492B52ABBCF0
8E645C3E16E536EB2E034EEC424FB2802C185E02CBCD68D1759F36C369FD176D
D134338956CD24AFA3B5722A86E5AE9D8A3B5BE8DC1613B042D96FD275B13CCC
FFF04D969DAA7DEB6A8AFA4F84B29C0FFB54154ABA46054DB06F56B2F72816C9
841B8FF00AFD136257C8F6C7F24FFC34025C99709331F99A8DBAE721497A05D8
CBFD30BDE997DB689CE8F83170105A4D441B626BBDD83B5810F8E2940617484C
EE402161BD6EDD927E16B2C9A86C31773F6FB8D1A083C0840949BED2C3D162A7
9BB2154E493D37EF768D392689A7A81FCD28B377657A113766B87947DA5253DC
9AEF697D3633C57A9A42863ECA4F652130F67C9F623A04497C63483A23AAA996
98B98A3A6F845B48FA283700C43A60D9F7E23A062677BBADEC44176B4694A362
A197F178D18254D3D4583161A1005658B644C012F80FCEB239E5F15D73109F64
7A6DDB79CA4C30DD9044556E0F4065A3B2653570C760AC37BAADDE9C8C8EA358
E0D61B515BC9AA4E21C8BAE97E6E13210F91B0A402E870ABB670DCCE18A72A0E
86F8814F4C09857039155ACBCCE461C8AD5CEA6394D28ADCBCBF22D00D52609F
10F178EB4EAA21BCFC92D86D8699B575C50AE5E6206ABFE0C26548CCC60CC052
2FF9460941BA406465850463A62DB742C39F2A007D0466131EFB218C8BE1DF9B
B765A16A027CF66864866B09A569C8D55A99BBF12956D29FFEA045A0459E3D23
F694B2DCFBFA1FEA1F71DDB53D7CF8C3A1CCB16B9E2B53EE2EACA67289339978
98D3AB7EC733EF713460D025B5E4A16087472E3BB36784D46DDEDE03C0F63BDB
1C33499C90CBE3E2AD54BC140604A4D7871B6DB41D15928C3D8C0DFEC36D932F
73655CDA538E895A16C1AA9F6794B83227FD41171553D7BED5D28B300FC1149E
5834A44AFC325EECD9D3C4CEA67F8170AC428220199F0DD4C8B39C47AC117F6F
0BF7FE404EC2D50CB79FD467D4695444C7328350AF5DE818E9A75531B8D779DC
C38F3C6215EDCC72A19A1B1D729D8C8E3A96F9E2782EA4197C27DF5844CC2BFE
29F1F3075259E1BEB852E2C5E6E4346B95CC414BCC1B4F527E6663031C245FA3
583B90014BFC3CB52256F0C946EEBEF100C90BFA21A0D0549DFCF3F5ABF54641
DB7CBA43C51BBD38D372125D7728D54CC2BF9AA29176EF80BF4A780F50B284FE
C86C3F1C3D7D77D4A26E19A52D03F1A3D74F14372361C576200914A59BCEA333
A08803666B1E535958DE4D00D1724E3A8D8C97648BE86E5ACD79AB0A16D04578
3F85514A579B516A10AA48B9B7B0B646D2F009D9543D26388A79EE643C53DB98
2DA0B95D7CBD1A3DA72B35AEC24CA37894359C9ECC3B19E6BC85BF9F0A4D719D
082CE2A1BCD8DF5F9ADEFC237D097583F49DE461E8B408C6E2AEE22A83832014
ED3E5249A4CDEEE9636C8A993E13E673AD6E0F88A1F21D32BAEE70082B14BC8F
BCD91E1C66D17883263D7D4A6DB16EDBC85253F9D967D11D3ADCA758898F85DD
615A6A64228063E37F1D2F0FA446A0DEF858FEDA9DB1C1DBF62D8EFC362FF233
2F5DA0498D31B9F4E57DD53724A32505CB534F62CEDE2CC3BBE3A6042D34E4F0
CE9EC8858607AF62B9ECD68BFD745CBBBE3E29B3B9DE0E344C128DA89F92BEEB
7B04EE775A83C77B19532B5AC8A94C86595C4E16951E37A7C1071BFE37D71F45
EA2DDF5C1C407BA27D1567CB4A22E373F0F1442E673C78839FC72F55B2240811
27B7CE0BFC97711E2CC01E0654D8B818E23E0E8284D4124E5A355B7F69C90097
381028E1BBAAB453D9A2740582F01123D52ED4BE7AC69E6732EA162333BDEAC0
43742284ACE20A6A16CA0BCD15B0DD74B63B62A766AA762BBF715A0D7FAF0765
35E5B6F2CCDFEB4030A53469A4B5009BF6F5352F70CE6E5DB1E9E473C1CC0F35
240703C4D141E7320771A78328F9E11312D287CDBEE437BF903649C8AEE5FDC4
F99920868868CAFDAF61D9762B400815E8243E7BC5DE821D811944726CAF6BE8
5778457F374D2EDC203BD13E1047CF24FDBF3AB86251AB867C26DC80E6C7E1B2
9B02C1C6A5A5EAB8C7EAB596935502E3C67B3ECE10988F79B69D4DB9D025EF8A
29B149AEF7B63098DA08E8A7B6C80DFEDBA20521606931BFB12D355C4E0C7BFF
1CD58D3DDE68DE81C7C7F7C9F131E9E28AA8D5B3EC3F7B49CE7F0D9856D13B7C
9CD8B6C8305CC73B9800AD8D40FED621223BCAB39249FAF25C11C5A63CB2DA3F
372295FC679749B09DE89FFCF0A0569D321DF2FD15390BA82666A40FD46D344B
0C7EE43EBB0175A88CEBA8571AD509BC7C681B07D3CD95EC062C625049F9D241
BD30A2BEC1D5FA207701A0263212128ED470A995CFC2CDE286EAA9601EE7CED3
3347D760392A9ADBC0CF84C431201EE1BFBA67677A8C288ADDA5D07236B8DF03
F4ADC317BDAA7DEB8130EA1CBABCDD77A72371374402CD0D1A78AA64AA9F303E
B532B20BA60C7806CD0B0C6C3CF7F35C99827C276AEF1FACFF49AEE36B95D082
AD9CA6785C6053004FC7EDAA2FC1B19F6A6BC6E282EF65F785E722CFB60EB670
A6CD0FE8F0D6D721F64ACE0E683F6BC79F5F361EB31929641494EC4E580F49F0
A644F709D99F377157C34F0CC5B742421A9ACC44E00DCB495EB83A1753B6616A
278B2549CEE9F4517650CFDD11F15FC7AE0FBC88A17976821D1D171856D3A46C
779CB365AD1DE2C6DC60A93ABA53EE37800CB0D7F914DA8B4715018E99669B49
0C57244A117F47CA1EA003CAAC246AD1A7FBF406621EF3AD28E683CFC7E7F2B3
11A018C10C4F7BC70813261935E770A3E0E841B205E103E349B4834017CE37B0
ECCC2CB088FC2C0B711C7372381A299F3E2B7C01CECA8A0AEAE30BCFCD6E58CF
DE32DB55D2CD51A87222864A5F55FC923265AA34814495DB1D201A13059F36ED
A22E531CD04DA57C33B7E0FC507DADB4EBC5744EB7D411A6764D106EA6CD3F0D
EA7648FDED339913F821C651A05D4300A2EE9EB2D2AE943D196A4120941138AD
5D9999A4BBAFC75B1AFE5DD3AECACFBC3358698B1F0E16DD53F112955A3B3294
29F0807005A9144C408AA221BA46040004F1F101703FB3491A0514E4826E7A2E
47F7DCF16739BCC7B1D7EB358620784C90CFBE563E721453230F89AD17298DB6
E1432E14AC9AF03B71B5A0658B98A6C1D2687234003C2A3A3F0E47BD17379BFF
E29149ED99E9792EDAA83355AC514A7D2D34C0C39FA0E59F0EF565573A1A5F79
EF55FB636DBC4D50441A2CDCC5EA97FB0B6381C04ABFA91A4EA7DACB7B46A36E
95F9883C5410AE43519F22D0A826B9354EC8E6209FBC6C36311AAB805148DC73
C89C9AA2C3206AE2999AEA205AA5F5B63B58F24951A47A709AAEE1449F77BAD6
D2A9A8FD6FB4F7444930D8EE8AF6994B85B7F1F264B4D1461D938C8A11074AD8
1F25E4A83A28280F8C15147961BC4458D6AF320FA7925B1587FDCC9C633E7E83
A3F9A72F8B5AB9D5A51CF91535B61108F0B7E395F0E85A5815D6036EABE06B44
5A3CDF3264ECFF4F92B233147182C63700D3D5458F56D8E52D5EE61800D12D91
A0D27921499ACC4B4150B5FE666F013472A1BC23ED15925343B616E57191673B
6D2CE2247CCDEC68755120B76E02EACC7621444F5BE3CA3C3F7045A1413A0F41
E1E7127EBBF503F06DA21C2095DADA538448BC26F2FA4F7B9D9A585ACC87D220
E4E00676555183F40EDC30E14A82B04CBA8B17D5D804957E0418844BC67DCCB0
79DA98E65C015DD239494A888792250CDCD39A7AC4312A8E84D18B65173CD6D8
E90A9191E99CB075093539D07148CB0870D9DD66A5F64ADD389C82265554D7A0
FFF4EBA9128361AC20F1EEBFFF0394E01B6A3BFABDFE0EBD7753134857E800E0
C46467D13B7D4C4D5F2AC55C4174AD65C86AB35ED224FA20584A3F164BCCB855
44D6A75F66DC01AFA7C1990784B30C0EAC5E24FD5CDB7418328B39893BDE7519
DE7293607B5CF955EB9E5DDE3087F2B731E699F1BD75891C1E1DB7498CB470F1
C4C6FFEFB671BAB4C9FF0D0CFA36BDFA7C567E28CA60C0FE2B65845503DDB858
C6D873D00031DAEA331A1C6FC612DF63CA9D84C4D77A565CDAC7CCEB769CDB04
59353E7AE305CF4E21B801F679AE2FA34B68053DBD7888A71ABF4F28AAFD9889
4A10F6B958A395899BE5DABF9252AAE50A53F4C7F7268A02FAA34CC7F6F88371
18ED68EDD822CA4C13C3712E4EC9DB7EF12E8C6725A72081A2272E99F773ADB7
90DC43A9C1BFD63949530210684597492C5F6EC8888E69AC5F7D457A007761D5
C409FF1BA78F69D9A29F457505C8BA7C05A9D7B0BE690252AEB22D1A45D5CA2A
03FF5ED04FE212D3BE537CF115FA9B30C4012D29771959E4D4448349D57E14A9
CD007F10A570034918D8140FC5594E5B77FA162652AD11F5CFBA4C09588D87F3
31DF82648179B8619B5B66E1962266FC9A77A831FCC3B52A5DE753C53C8B6D45
E3CF1B41F246873187D75B5517697E907DEBCA10EA95206AD2B995A3CBD72DD2
149DF5BD0304F25973560648D81F99115C430FD2B4C050043F7B9534411E511A
61B8B10E1A1F8BA90371F44D8754A0F2D16481659A37C6060A65A9809167B73C
27D1F0F4B36B14CC52E740C9426E90F57925E607BB7B723B6946C5362892FBBB
36AC0F18B190125EBCAFDE606C23D0CD68237EC0B707D1AB6936708A04FC7F18
9E5A8F1079138B984CA5CD7EE61650C9D286C5208F5470715A9EE66DAD5D7147
B78AE6B49A0479E0C6566DF87B13D9BFF7C7FC59116C89656B2D76B3B41FF3D8
254A42DBDC76FAA8E10F3640C915B364ED72C87020A6D3EFDADFDFDFF6A3449B
5E3BC0EBEBE7AB87798A395D726475F01705623229069189D5851D2D55215823
B47133EED6C313D37122998877A46BF79157B2012EF073D3555E6D1F8E09E5C2
C2ED92EADE314160F68BDA9849CF4B42C2D8ADDFD548F3D6D8B3E6E5FC713CD3
DE50BB0BAE8C51FCEF4F70645BADAE77AA23082FCC0A43C218476173AF097DDC
54B3326550C4138E55D755DB6FE7E7D6B4CC1BE22E5B427E4CE95D0F9A533D44
51EFAE661B30DC18D165C8C8F3BB915CC640335575C69A9E1E2B362FF755E3F2
C7F7DAE5A853B97DE23B21B2742BD2C99B256DDCF97AD15A0BB049BA5D87E964
E264B408DE97FC186B7D9BD151F165993B8BE8138C53E7051D6F81862A8A463F
00E6CCD0D543E2DD53516B79823AB973D5174840A9AE3458059AD8BCE73A7F3F
A367717174D31C66866465AD9DFD2D8302D2C45F33F08FD6A78F11C4B78A0721
453EEFD59F73EE04F505FB9DD8FF6F0DEBE06389C06E84F59CF8D4B8FB448D56
3B79A4A7B9EC64D632500E2B529CE00A7B24CDCB066B337932D44D7704EDEF89
CBDB9A902A6F05E81AEC66713E166D979113FFE0020B97D9CDDD7147E1BA6132
8E01BC2DF3DD1883878946FCD6C3DA444737DF741FCAF696CE181F9E3C34F799
862C0D5BD77D3887204302AD801A016F351A0A33B597E5661089A8574DF158C8
7425F6EA36ED19D0C02A926ECDD83D365244187C3765D9531DAD7BE1A52250CE
1841456605401E4BA8F9A2D41692EE6B9C4C021823DA841150FFF2BD68EDBCBA
32744CD260ED76DA9D8C88908243AEA4006A4C7BE59383CE62854EE617FFFE09
037D981E9E7F5CFB20EBE417D0497BD53B185146B867FA2584BE3679F87D395F
5D0D400EAA828A7991A9DB6F924372911408AC9ECDAB81B85C87F17FCB97BDFC
3247E5D520895C29F787307F84198F09A89208E6CA3C46B8E32777015CDAABD0
ADF74B2203CC995179605A3A753369994EE8E2F95AC8065A338BB1A1D226E656
A368EC6590F02F9C6FF4279567B9D93E8D2D51EF7F547C515900F01FF6349ABF
7ABB41BC3BDEFDB933BBE5BF534FC07180E2776BF3F1B44D55466502D91D2689
665DF52DEC613F77361A9FCD8F848D6BEBF2301DFF7B792C8601E9AE80E5EB39
6DE9AB79EA6D2FDC8D6537C5C92BD446E4E23F6C5E5424E758ED3E69DF8D1304
1DEADF05843E37736A2DF8F8D9CCC65CFDB3AEBA072173B7FE6964D54BAA70C3
79B6FF375FD3F5C2B9D92DD71A6855D80E7E77769C6DA2E8D660589A87C64794
972342AB1D609D3289E68BC7EB5288CC7FA63FDAD12F8748FBC96840AE8BD31B
E467EEF0974BA9895329916A88D237AF99B3B59A81258665A41DBC13377150D4
60FF1B623B0FC66E76956675FC8F43339E2C65DE80561C9A59CA8183F82F1E7E
F8696505D6DF842550D1FE2A85E84CE1BF8F83F59DB99EDB6A67ED5D26D77FB8
21AE2B50C1AE9A488C1BC3D2B4EB149566B80E0294587857A8488018548A7AA7
50A124F14F23BCC7FB752AC4BA771071C87CC6A7387D9C9CDF32050F8635B278
0F35CA9EC64FE4C331F929DE905ABE09055A37F183E17AFB8F14EC163C26198F
D7B1FA04ADF04ED3AAFD5442C59A62C3CABCA081F6883D9A0554AB8111B88679
BF2E0FDE6CCA84D5C7341541C2DB41D80293045B7365ED941D65E666DFF73426
D35B095E40D67A0BA5FC89AC49023717C2130336E5D22EDC083E6BAD7D59D81B
C125E95F678CDD33BE34ED09BBBC3F177853CFD73646881FD928B1BB66F2DA38
7DD831C0C121B80279D652F965A068274DC655240B9B80CC3572CDFF03239213
BB804A7F49654F2B9CAD11E03050DCCCCAB9E9D62B7883229D6A08B1F06C0974
8E4A1E966C9A3E8C58B5879A99BCAF708E32C133FB2DC70A2378D6DDB33A3DEA
7E7FF5A1953E3973AE3E15919866A0E52D300D0969B1BADD9F8238573A5DB28E
4C8E3F58A67F15DAE60AD1F5C3CBAFC9FA4801BF55F28BBE09B5B449BAEDA893
77567C46BF1BADDAA115133F881F85F1C368106B3DBB4E87107D4AF32BA3990D
407CCA767554A12FFBBC5FB03C2361A156B57FD70A9113D2F5EC77D6AC91B147
D110107A5D66FC7986D8EE825A1789E7D8E3130148FB4B254A98085AFFDA6470
3A3E7CE437579E7668FDB4096415E403DEE5A25E82766F16F0936C64524DF840
33375482A823B8430A7F884FFA82F895C4D97C114B18DAC6A16E614D820E998A
1422C690A9AB734FC5B03DF69DD5769DC852202B9B6AED187286C1195DE781F1
ACBCA8789AE0B82E7794CCB4AB515160E0A488860AE9195A0A23FE037420D253
AC1C342F12CB78387394DCD5E67D47D07AF8114B30B648758F12B29C0AB0DD9D
91C4A52106A221A356202738A69AD3F095511DDC2B3C1E5840AE3E0903D216BE
2647D9DD1B7111CBCC47FD5276931D2F43F92DC94F902F45A380981535E5E6BC
35089A462304FF495CBABE3A1AB22E3FDC44E64411923269092E14AE09EF6148
B259FAA41A35FD891089C7D650CEC25AC2295219AFD929FFB1350594D7CB64D9
AC2E81E305BB811B8A2460C221EAF2F17BCD9575D09AB3B9F0C4ACEE8E4FF9F5
862F3B503540C4E79650FC6A078CA6D8D9741F8E301DC3ABDE8D995FBDB6FDA9
A45FF5BC64108905416CD1B1D6278D13DE04195902ED257CF41C138539D2BCCD
A912DAA0DA765D5229334E94FCAA8D3112A31FC8C25734584714E39B7BE04027
F520A39C4F3DBAB39E0BE66CFF591646C124C08A41324456D41A56BDA209A633
565185CF6A5BF9E593945E99242182EB97CF056B057992F7CD238DCFA09B03BC
90CF5AF08CFF1E143A25977D7C98B4F2B04BFD52DBBB63C0DA21C7B75D861356
B9DE45BB2D607A4B1E9F0D8680BE276B1F57132F56537EA8BF3B3E38827FC00C
03A1EB56080AD450453F60B5CC3A155F3F958456A0881553D9F53B9F6BD410F8
DB5EA8FC23EDE48FF999894AA64ED0A20E3D8205E608AC3E284643D64FA71F16
ADB72BCCE48E7D1EB3E975AB27B528A87AE46B62D16FF4DED97AEC8AD6C1BCD7
5B104725E2C740DD5246B6E24D69A603A582ABF1375971951B9CC8E9BEA1D838
D318843A493C6BDBDEFBF2A3896062C13B235359E555AE0660034B5C63EE05F7
2F8738FE52A7252C8E84E1E5D811E0518CD743B88E6F8A956BC5F2D2FBF730ED
D315C27B6DB1FFF8E27483770A36C65AA471353270EA1AEE4DB7C126AC368B52
3D14D207E0797DC6A39EA98101BB0FF8BA38FD500DD4BBD6622178BB2CC50C14
A661A29375C36D30D44B034103B6FA5497B3F556E295CA7EC5F0DD1AADE7DAE3
EF98E60DF13AA2A50EA76711257F1EE3405F616BA751982F11B9B242735ED885
2D6881B99AAD8266C5AFF908B3CA7BB11F619FE734FC07968462FAC63DCC49FF
CE64CBBDB229F14A40834EA1C7DAEE7E7A75C7E94AF3A81F0D9F1E5C76FDE0B8
5F2070224620C858D6B09A99CE2B280B9D6442D1718DBCFFA2A43890EF56ACF8
7DB1C54FFBA28B8FC8484A0242363F30D61FE0747C60B0472461943F3B0B0219
B5947F036833A42E2E22913952B7DF81C5CB713B5EAC49ABF6A9EE43D20811D1
978813067D64E0DFD672FDF4F5A63CB102CE1E42D5EE56C82FF05B7196530136
213EE13B87E8156C358FBFABE0B3CE2BED72C54B6BA549AF820836274CB151D6
BBE5C915F8E9D6D8E12EAF5C3B4F8F4EBF8748F8E7D3C94173CB8368AC8C8AB2
B8623BFF6044B848C8B2A068A87405C5503CBB40E60CA6ED2753F6B5F5E0872F
D8716CBC380A1BF2A7AC23F064E32BCE6CD7C358F8A21AA0DEB7DB2FA249572A
3509349F5C9B2E2174D40DA03CB85A14387C3E29D017405419AA0C1558289B48
D38060CD9E429DEA8EE059222C4717C9767900C9669D27F3590718E13156D92B
F6A950BE16DBA4280FD62E5ECAD92F8B75A41FDF17E456D260B9F5DBBD216869
45545633198E6F7C3B1ED37127938CA649FCEFC84B2B96E2F4875DED06F60287
993CBAF47898F4421DDFB6095F04D44DF19DFFF36499A57FDBA6BBD5D10A251B
234D242938C011EE2D5EC00A6F6C845E2379D4B42D2AF7CD144E0F6759550D41
6AB428D68FCD0D798411B4E09182F9A5B1543D2DD16DD645E35057EE3C41A393
53662C880E0018C64207DEFA87A231780FC3374CDA200E8A19507797EB67C84E
55CA501B0BD4BF3EA6E7F086588760119ADAA66A6968B2854C7803E4AB5DEE77
738BCCB5330A47267EAB50E3DF44A0E13D3D255D6A33713255ED4DFD17CCC7D5
3145C64F9458CCE9AC5EA122FF3D33588A6A0E61EC23C02EAEE680F52712FBCF
626AAA0C5D7D9CD2CED31FFAE9F46F227592443C3EDB23C3544E88547E2C9B30
B8C26A2C8D2432345F396CBF013E3461CC98E1E7C8715A53279FB80D512FEDFE
10985E21D8FFB663B8859A399EFD967840EB77256A8F770C5BFE623524E5B6C8
7158CD1D74F7F5C5293FE8C0DF6B092A48664F19C07F5C6CFF73E348A8169D78
2F34B650CE907DED32DAE31F5E7BCA143746DB96DD682B26DB0BECF8EABA5A4C
13B7BC195CBB9E72079267BFD38A41AD0153FA74F1D0F44DF8E492DD74FE071C
DE497C9BAD053DFDE681976F1A8C77EF0BDC874BE53D459A70037EA3543F58A6
FB782B85D57774293F14F28ADE08F43A97A83F4BF625F974BF4F9816E7AA4BD9
B08883A7675E0B715A76D9CA10B91D863EABB2BCBA83DFC31588E19DF4E3571C
7E6FC390542F98312B9A1FF83A5D6760192C9DFDDAC6D38505665D7B66D42AB6
1F7951F0F401E8345A9C15403DB0D87857D449769B132B94C5E2A8ED8B7F8D5E
9E4CF54E440BE50FACBE07F626BBDE2ED9F8D48F19C80658B6B16C039C97CE6B
D0190F8760BDA2D697190A47D4F3CC520003253B17AB11F7730BC6C4FF435B5D
A3E1A6794A4588E3C6CE22D80833186FFCF270C91679C516D2908B4D7F93E62D
D687C15AB1BA0668ADC78F74293730410E8BB4EC1B46411618F51AA1AFE5FEC1
D5C0EE11581182870C8F47BD02A06EF2D7B985AB69038097B5D4613B80686D9C
E1A5818FBD9BAB6737ACDA37E276E3D0F96231618761F5678EC1DAC9A1E9D640
99D88DEE7A8F0FCD7B3BEC36BC19D012F21F5233C507A7159BF7144225498ECA
D32BF68DA3314F8DBA10EDC9B9C7B14639FD905D96B23446577B3547ABCA63DF
36CFCDBE6A2EFE28BEC89E693C52998C1E3A5C9302C91A394AA1B1E5D5587604
0F358CCCC0D1D3C05B89D824CDA5737838A9EBCE263373B510763B29659D1635
E4389C3A267D6BA94F83D9324950494E3C38C28F302F0B9557A11CD9A44F747E
2262B70195602B362ACDD3B9A6B644921617CC2FE842011C20908D5D2C683038
8672BEF4DFEE91E68DD6A747830B96C17A86DD7ED0F4A8636D9D569496C5F53D
EBF9F4F01517337C4074E73257AEA4607764FD6245A72123ED2A911475276BC0
B403E6C52794DA00E164296BD2CC35C53BF61E70024CD6E8B49DBC377C5DA98F
208945F8912E7A4A37814AA3B46C2A68E78466D0A496D43A6CD94E205F2EABB1
D8D7D9DCA37D647F879547D99F6CB196D9D6AC80C8E013F4A4E7054586D62CC2
741D90591E4794916FDB00791EE397D2897FEC619C90A0142F51247DBF85356A
51519C149DD0F7AD111796F4DA8F109F8A2C1805FA3D87563AB1467AE19B399C
60A0600D71F8E626602E729359769D69791D2258240099B81902E00CA2F7CC67
68F7C0AC7990601EADBD557EF2A4A6237BCEA56C6A257902438C9233E4DF7894
1DF2C2471A85732E2DB590B641BB2B401C16B8CD58004D05FEE1F2F9BCF1CBD1
B584E5FEEEDE8E24100D0CC8C23B4FBF2D2829AD87A758952A1F13A9B38472DC
3075DC07726087BFEA6638F7A9DD614AC0C01ECFA4302220BCC94193B3A24543
15940E695AE4B3AE5524C10C88FE02A61281FEAEF05C37A7288475DCDF1403F1
12A812298311EF38005445A5ADB9379A0883EFDFD94DC9F98C6D983260202E1E
3FAAD08324DD891E9E7ABA77EFF4B5BA5D3A2BACA35ACE44D92D426933BAC981
CC75265B1F760C4DB5A4C40A30E02F78D9B24D3003361401B5CBB7FCF859CC66
04CB4D464B29D4ADAC26CC1716DF40B07F97517B67DD60F4C2BBE5EB51475F4A
D9A7C8A773227F6626A410F742B26A1D5C661F7A870DE5D0199AB2625CDD38E7
925CEB905E9396601D6C3B6D218F9741A9D01088560C006A2A374EFC6C467972
44A8246F1E16C372F57BA638C0C28F477D952148E5C84C2796861451A01EEBD8
0716F54EAE920B8649AF81E5BFFBC7D6E5DC2470A53991F9716510624C0D6FAA
B6EC096907DEE3F1BE04F6093EE1406A9C808880114883DDB239114C218244AA
47055CC9294B759C3D3444A4B6BDA358B1A7CBCAFC88D5FF2C081DA5B5D93918
B05B0CE56159605CD747A57955F8AAA1742E04D2B3884BEF2A90456069103043
2D94D4D754E880D80D22BB9A15DE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/UniqueID 5000768 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 58 /colon put
dup 65 /A put
dup 73 /I put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DCD1C1BC03B83FF94C60B1DC71CE8A86B46DBE661C9F8F4677F8A2C7CF1
E41A91EBDA2304735147BE66CDFF2673F09D408297302124C127F0B35690CAE9
CE1679120CC4D582FB69550AD34A047DDFCD9D411724554CCED753DB52D6AA7B
22B0C55EB698ADDBB0F8ED15C971AEF113C74B9E25DA29199237B98DA4023665
C2A63A837E4CAB38F8DF37DBAB5DC80C0C3FA72C8A70DC76B5B36B2EEADDCE74
23CF794B66E4DD3B35BF99893789063BF7B01D5F186B2FDE518B2CF2EDE51F81
38244BC64548AC3433A80B86D6A0CA26D77F403C06D65B7394BF1FC7D06D37A5
E70ACD844E3367DE4DB71312CBB85ADD21D5A1F99BB8427F252D90ABB66D7154
EA5AF4A165DF6415A0880AE784071E6B3E2101F0B663DE14DB1ABF8B7CE0E6D9
D24F9CDD9F80028D37C9CB4067A28D41E879AEFECDA71F649EB3C250BFF809D8
1E427E3BF24E85C75F080D93E0314883988B3A4A2B72A1B4A3D2189AB6ECFFBB
C58151AF05AE335200711ED945E18B4BBCE24A8A162BD9BB26137253BA8B5819
41E759A7CA7CBA129BAAD438E87189F2F6AE7C86F4EA099DEB23705A500332A7
4F141D8778EAF3910486B2EA25AAD16B60DD804D0E5BAB0FEBB77BC95EDED08D
B8941E040D99E8F44E70FF842306ACCF65C0AC9673859DB9C3A724238CB8CE62
255BAF0145692EE3B52643A0DE3E667AD03EEF6C753F57E34AECAB0CFEC7B07A
150D7151E57BB3A026D50C7A88DF5F480147D87DFEFE463F76122EEB5128796E
46CB0AF4B537987C2ED552B37D83F393222659DB735F2A293159AD84AF082B95
6F1454471FC36D805485D619D58FC53FBD6E3F72660ABA559B91ECDEFB267268
86A75650C3919962B0139409A29F5E3FA70B901CD5D2C49144778CFFF1D5B63E
099C92AABDAA73D54689812279C95FB7A4F7E840DD53DD3197A4E6D3099446FA
C0032FD40411E8F3300A8A8934B5216B01D916D41DDB32513DC4ACFCEFE43D6B
22FEF13D3567B047C6B35C477ACF2E172701FDB0FFFBE01DD58D7E54398EF4AF
DA5A404E194BCC39BEADEE5C76D7CD1E602793B950256F25871A9760C80B1EB4
D1E1179C390BC240DA061C9D539B20F4FCFB72DD0C1E860DEA2988E749819787
F04BA7A9CC3EDBF9CDE46895FE31EF0F8DEB63E295E8826BF920C8FEAE3B2080
8C98DC43DB22C6537028798198E2D3B0453ED725B774686310F635AE6153D9E1
8A0514882D4CCFE9D2D2465513E42E548F64A50ED78AEC9D62E0F9CF61EBFC9E
E8832D60E91796C916FAFE58F51818B80BBA52C1C06D94E602481654E5378C8D
137E3A872753CCDE4B2618C031CFB13EE91C91335441C434296DDEF61CDFBF8E
8FAF25DB3B6D6796FCCE2711938D605AAC00F0A58DD1A03FCE8732DE541E5E8A
41FC87E1FCA5CD9B5E8D63E7A7D6CEBA67D8A83EAFCF490DB7185AD55ED0F43F
9A1290E91C463895BD12E8A831DAD661E36E1B01ED4C112B8E1D0991D0294BB9
A13B7E9A8835B12A7133E834379B3477DAD425B7996592FB0395E3B4FEDADF4E
23A07F6C0E1387DD54F5C8BD071C4E9E4CC98C55882E29B65E5BED61B57EED93
07FAFD75CF3BB101D1529F83AA8234F70F342B0E531BF23E9A7D1FD112193CAA
4E377B44F94D9E990C22598C2AE33EA73BD0670A4A000DF78624CE01A25DB30E
22B0EE3FA892A897C85AC54FC15D87D68960870A6521716EE75F41A08EA467E0
CA703305771361E9A081348CE2729B0FF18988F36222BBAE11B67549B320A0E2
D978AAAFA8611578EFF7A49DBA0A44F907086AA23BCD6FADDB37807528A1E4F9
0EBE4A585E60412E54CD1667BBD96826470164EA59180ED09EB72A4A6C75B51E
4E9FC8FA9EAD341C90FE154344F6F96425A24F0275339B3546E7372FF33DB57C
275E2A1A33137C07AB3D35AA1889B3B60737C546E9A01A591EA3B121B082110C
6CA0F220A59CA55A1C877B23F0B11829BDCA334CD6946C63A0B3438B6BF9DDAD
0C5CA54CA9C48F2F39A20B786A7397A871DD11FA1D78E5F78DF4E9B0FAFA7189
514E355D312E8E0B4078AC809300807CFE4BF7CAB387C6E8273A0A358EF12B2D
5FA77789F403D80BC3FAB7BD50276F8595FC6E2DC97AE7BD985281BDF4F0B39A
A1C6CE5D16A2FA826A806C0D781DB6A0FC125B78E10F1A20E8C329CD0EE5FD19
38D318FB063BEB45C938C932B2B7A7F656EA71DA655F2B297466B09754A71AD7
C1FF486172431C777C662FE9DF09582FDA9F723BCB17C08CB959A3AFC7C565D8
D1E72636AE538232C13966FC6E07843E4FC7A8FB2369F2CF8E1D94B543515988
4E743DECBED602BF78B30C31EF06C3D620E42B145626CDD287909F4E902B1509
27E91EFB8B0C36B3B345AF36290A973BDA757359B0BFDE78F09A046115D45493
77DA5C7E1B90D0ACB3095121375C548CE25239EC6EC6B59F4711C6E8EB0A4ECE
80982E630FE1B2E8DE1218936354E4248D612892BF7CB49B492B73CCD90086FD
A967D058FA9B8C5422B1DC82FFF8B821C8E721C74FA7F4FC09025A030B3C6D4A
4A49F234733B8C12931990A0DB13C2E333CC07BD549D4A25009A2F6580338445
F4A0A389F9BD1A40751C740BA3FFE21D9099979EBD752E36A8EA33F541211234
E6FF73120542EA25681E01597C9A8068828C2ADF9ED1EE234C9E8B874F03F423
459E59D373C122075B1105F86A9C9602A5308D897A052CA1F6A18D7C63724520
9973E0142B0C866367FD92E407301632F4EE2A35BA7B396815CECCA18146C967
09CFF862E85523AA8961E50EA63860BCBD47C387E396BDA1DDA80E3271E6589B
DC43DB22C6537028C40090FAD811AF698D87F68BBDEA521891CD800B861C6E92
62F214712F001F425CF0CC2A5FDBD2127762FC7080DC7C4B1328C680ACD0E658
789BD4E7377B18F878DB2EF1C5A129EED4ADED08636CE9ED580E2631176927E5
A6C12109CA12F8CB892CD8541D4066FFB88BA2EE4ED4246CA01553886BEA1D24
B2F2CE430F7250F5DAC6C7AE62F5BF78DF9BD17D8ABACB504387044CD0304287
82CCA957E725760E7AD4282965F8E17850ECA6D4B2C571006251CA6DC64EDF50
43E59474A9E256CC7E9E07930DB25EE9273E3A2F7B140078E6715818079546B4
FC06149572B038A82F59FDD07A0107DF4251EB7CE6ACEA936B05CABDAE8CCD23
823CE3974182E009D71319EE40ED1A5A247FA60A5E978E3D8E270874452ED84E
39A065FBC509088543574C87C9B50540E58A55097F7176302835D9EDE61E8488
8F23C380836AF20B878ED5CB09E53548102FC30ACB368D9CCDC8DA9FF327E77D
E2E180B04B005C2A33A7FC857764C168FBE8A0D6BBE81559A8413F5972790AA5
28CBAD6CB23CC68448977CC7504F6F61BDE7C5E2A0F227B3FC2AA3D7ED1C3027
4428D535E94285DB11970F9841F70D066A5BAFB99C4FF48E841C88124D4773FD
D9C3CFBAED5F7CA3E60B88DD430C0762EA0D932B8D1FD3F9BC2578681C54A679
226FD1C5BB8AC7E8B2F90E73B84404421B9C0C1164A6694FF509983D676D78CF
84A3D32862AEAE6CD0372C2C9CD40F821F886FB4496E16D2ACB6AECF7142CBCD
0CC009528D45DEDE34D2E225DAFC243749251B45969A91E85CFE540E98DD91FB
13E9A9FD5B8FDC147F60CAB9802D986F64DD8E10F5CA649E8FAD968FDF1BC864
1295655876ED2526812506806936154DC6CF899AA70F7291BBB9BCEDBC5D9407
02C3D0D9A17EF54A85600D4026E6A25E9915295A07C27ED709BB1D5457DA69C0
E23394D51E74EF0442399F46A27F8E97A9ED3A572276C7BA473001F89FA9E9C8
6D4AC714E1CA2FB57509D0A868AE6C5DB569005AE467CED626076D8A9BFD47B2
D5AFE9D6C21E97018A4A63F8E78B6D6E63207E7F49C0F011DFDF8B870AE3DB7B
EB1CA955C86C213FBBCD8862C6AB7D4B94E7B415EE21408CC8C733E6F48E2640
399A052BA899C7D4D625990146A910F1E047A070DBF40AC4F12CCE50D3D989C8
13D61BD9B48709CBCAECB3B4250A851AB894B6EBD7F82283BD51C4309372A5E5
CE05A99230C4F8D0142136793027D0BB3F92DE85C233678B835B6FA0D5697CB8
BFAFC881F6EFEE01128E30E08B46BDC1EC87B34193B3522D5E2EC73E47174DD1
D9E8AEE66B4C46EFE16C7CA5537CCF7D567613B6301DFCBE66E8E616C18F41B5
EC56587CF2B9E6679AA5D0433A84C9FCEF6DE6269EB18FDBC7855B750D6FF8A8
6CD03CF4549398180B3EA4F2E3B894B817CF1593C79B33D490B4E1A6FDC5A320
7C2674D1E8AE547FFCDDA516A890C4E4D3433B4352617CD302C97026CA2BAFBA
2CBECE36D3A9EB78DC46B83A9314F24F5D8E00EA30C1EFF70B3680754D944580
D32AEB4044A4B15E21F806E068BA068B04E60F84BC4304567E9D649483608D1B
31B0D42260592216190E099DD6FF8D77F45175930FC779DB64095E2E4493D025
E75B210D1A13B8F6300C39D19B7289D5558BC66543C57B5411775BA32D75F04E
2E2BF3E7B9AD2C599D4E156D6A523E698D9AA5621EE5DA6DB0D67745525852B1
FA3BE8E01A528CD865F7D09A9925D9ED9D642464F431CD4C5A04A54A9CF18651
63DA1030ED6D494EAA06E7F5023E4D1EC60A08AF6A025936DC300942D75C9B95
8F3C542D9E571A7130059ED70E29B7D06070AD67AF4862982BFBB10B73EE51E7
D1CB72068776A06FD8AD04D4A5333F46EFB972E2CB315CD30791B9CFD06AEC25
F7CC210C13EB32626D97173429F472C8633A63DB625DC6C8B98174F2D67B93EB
6417582BCE188A38B937CB683EB4668B47F18605DA597848071362F566D259C5
64224C5A5188A11B01F7C205076E3BE3A0570B90FF35D3AB4E130BB833E38836
5D936667B2D51050D83747D2A37589AC3B1A7E4C51E5D518884A047877FF5A35
5C907213CE87D4E0EEAE5161168F065A5B1D794C890D7854E54D13461257F8F2
4D764337FC2F9F298984D27CB45FF3D35873FFBF58CA2A45BDCC26EF199A8433
B13F23EBE03695308979A4E3E59312AC0D47F3037875C4B69D62188D3F5706F0
E96C56A2CB0297E6C92D92670437665745234FCFBA9C72968FB2C86A4F73DC0D
563C2826CA0322B6AFBF37094C8BEBE9F383D31F26F07FE5808194997F6CF76F
D2100FAEE2BC04EB0613074CFDBF3E03D02B29168BE9B5FCEF7BF8BA47536B60
AC8F10D43D9565C7C63EA8302042C95EDE98F95FD5FBA309CD1E0C23CFF85DA8
1D9FBF0AB0D48E68A59F9E08D433745C10BF7D78081EA1CC88822D416A70879B
7433455EEC0B5455A1C9154BCA0472EE498B75ECA4DA8FD3F27C852C97CEE163
B11CAB1AB7FCA04AAB61235FB83810F182BE2DCB548AF16C34A81EC5F7A987BF
D5CDB308D016A6F59B9A1D335E15AEFC107483BE405358F1B6C2B97374D4172F
8CB614F03B1BAF52697795300E52CEC78DDF6DAAB202E274E49514941261C3D4
65A221ED76736213EF51837B102E4113F298C30D58CB4E9EC724C75B55360029
8E0A818E8E3BFB1D7C88271A42DE0CD894BCD8013F475124608FE1FFDFF2D560
A86463434EEE1BC520A3492091CAA7756D42B7A57E661C35A4F7285F55640251
9E1A99168D0C704745AF5CCA01300A7027EEDA1BCBB788B61E9365E2DF476935
87A0B858242D0354CE6BA7A453EECB42D02DA00DA8DD3BA952E15BAF4A622F7A
58EF8A34273931DBCEE1D8A927A1404D9B8A083E804F5D77E2140A472AB9DA5E
32E9E6E384535BE73AF752F53B13CC05461940AE69A866BCFC6F82D5AFE14D83
FF9BC369BA85632C030F2B4381AA514253C9CAE3E69D9663FB2DEAFFD0BB40CD
2CFAD7EC6EE3A1609C2689F637A2A19553A684C4015F4436C80F716433CF0F1E
EE43FAA57037C348E148ADB9A24A54037F4D951446E9C3559E1A7943C1E5654B
B742159B51D92DF032B388C26342BF99076DE4BEBF0A886F2A615E70936C29B0
05B6F68B8FF561B22344180B7160BFB27F82A60A5EE5C16AD2F18D9C29F93EC5
75907C5978CD46CE076BAAEBF3C4D6ADCACA33A4B30957A77E52AFB88F584BA7

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 65 /A put
dup 68 /D put
dup 70 /F put
dup 75 /K put
dup 77 /M put
dup 80 /P put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 117 /u put
dup 118 /v put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BFCF3BD739E32E7FE909AEE068D50FAC33605FFF98C7D0115FB860178FD03DB9
7985B78E0AC21F2EA065FA841F5928FB85163B2E2D8F850DC7EE313912C45C28
2783F6762C67882EFEDDC7E7567F91C16B16FD8D5A1ABF35B5586307701B91AD
54984598F2AD46FEE3D68A2731BEAA754C8E730FE0E84952EF77930E4118F8D7
2F3AD75524D5E58AE6AECB03D4CBFD830FB0F0780328B678652E55328E0BFCF2
278479E7168F2FCE946A848E9AC0602F0FE1C9DF31A012574FB8B2ACC2214FCC
5F4B34C81506D94CC2B500B14544D2A74596A85B827C1376921947F8F10FC7A4
61917FDA0AA725845222E69CC2397FAF8655A7B3FF11F1F6467697D4D57AC289
7225E6E7ADBC2C3D433BD9276DAF1033717B95A323950A8822753CD8BD5B3014
31F192BC693DEB1F6CF3704FB316C0BFFA4A058D7E0A250238D419CC48EA8950
066E629626449751568F03E1436DFF3D88D3FC77C3A974843DBCF673317ABAC7
FE23F77A341043CE4CB789A219DB882B9670AB79D70A3C8B6A0E582F66188923
CA072E0E095303BA68DD66330552A146EF07CE7D511092B2997C9899966AC30D
044104601D767C0824234B3FBF4803CF3DC06C93373D49F57E07B8E671143316
6C4853523EC8C785172FFD3356CC7F8C8378C36BB243430B77E424424F710E52
34414A71D850D66CE10A6C29F9070AD0DA9A5560EF75241A78FE46E309850874
21C199C7CECA5D4C3F203558561A74123F17582F6D23A143B23E2E6C792B2096
E19E83714733B2BA0D865018D365556884C185810718AA98F9B78C9651E43125
51A7EBA8DD423ED610AD4D7A1CC4D19DF9C31B4C15C3B253E696DD9739684F74
64573028A854F1DB4D2FB38989563348832F04BBDB4E0C596F95C427EEE63F67
94F574196992D32E39919B06DE73F0F5FA6944DF5AF775385451449EA27B68D1
3AD8E02C9C87DE44AFB66DC751D40FEF60EB7A3187166AA303A6C97D6280607D
C7BF22EE5AC4129944E7D5D4105B8ABAF981D03F621182525C6C1078C8127F14
2339F566E192705AAFB0BC27D506B64C7048B723C954D811AEE69EE162A465FA
C447D4D12DB3977DE36137CD1929A9F565809D162ABFA09A035AD05F71D23783
76066DDA70BEB83663692268BA2E84AC06C7B20448CD8A860F29DC2A12589F4E
C8525619CEDEDB0474815AA7B804A243EB400D73C74544392EE0F334E4B6803A
03CE1B2E28BC3BE7B242760DACBA5EFAA09C02E6B4A2BB4414811E592593A88D
17817C81325D3BC06254F78DF1C72BA62A8A4E85A96288AAAF56A5A16E941CD7
4E9D5094D9C4311F62D80B42B974493132B3EDFDE747A20BEA97AFC6D9E8B7B4
66D3D06D141F9DADD7C15EE71EFB2838B1B3606D96781C0341DA9180C033C574
854729C3CC33B9DA2BD09E464FC4357FAE7956AFFD52D21AD52B1F7CCADBDB5F
76C9B5582674A9F3FE6B51EC3A5890342C00E5E386D0BFBF68F4FCC1A2A16D73
AAA56FDEC45B9591F300EAD834A9EF4EDA98E456F41F67A7A78191CB4DD765F9
1F4B9B7CCA466C3800C68BD75639DA818C9775D87F839DF94B1C0D8302E834EA
1EA236D78363E1EF5836D3967E69219605F9954A153D95E61A39F1E9562E995A
A3CD3672E8A6A5ED46F0E318D87408F5C1F205F21B63061A78A3E34FF94CFBDF
4BA083F26BD3F8988C715A567C0B92ED2D62DBC258DACEBEC88D65817C56505A
16138DFCAA1CA06C3618B5193756EE97A04508DAD14F6AA8912E957CA33DF1B4
A4333F09577688726827119561528E5D5090F3B2B5661E356B214479FB4CDFDE
CD3407525BA8D43C29F97B3D38121FE0F96152C2AB8714DEC33C4E24FF372D92
EAE6228FE287C8F2FEB7947ED5DBE1DDF326CB8B57412ADBCE7B5C421C07BC44
EB90F4E1CB43AD01F8B27C39F3C5A891FE367A9D320FC033D229B9C2CEBE02B4
E634EA363C6B3EACD8EA03D29E6196FB3C1983431C02DA175D650C3EB741B1A2
7C158091B0D4D87BD21374CC7421012370A8C3599C2D0F58D05EBB438D168F16
6C01A793C22E51D146600A7DC1DF95BC9313D3EA906FD8F57F490EE06CFFFC0A
645006C0EDD7BCB22C326B3921295AFC63654C915EC27B781D7FF550557CB523
D09066D13049E3A1648C54EDEDA068AA1BEA58DA12A82DCBB2073348F999DB7E
D59BAFCE667AA8837738DDC5F288058795B9F7B0C55D1434F78A376D0125BBCD
A1EC08237255B42CC004618817F7A0B9875D28A03415C5788D51E246C53A274F
9D519A7BBA362BE4837B204FA86308C33380120FF30637B829230D0B841444C6
D775FD6A2010BABC65C587159C5BEBD1AE4BBF762B3CBCB537215542B4748583
2B940F4BAAE1B394EEBCAC4F6452B28523A6465DBD868600AF045EFB0845A53D
EDA7E99F2B12F2E93368796BD6A896926EFDAEA0F62943F1008BAB5138779576
AE54F8BA5609CED7372E8BF04A9078177BD37DC07BCB9B4BD9EC71B6B0B437F1
2753967D6F7013BE62028F043657F83A3CEEDF27CEB30AACBED187B6624809CA
CDD88E8537D54676D559AA52A74EF0C149D4BE8C72C95387DF836B434FE1ECCE
BD95C3547EE47AC39353EB42D341D05AB83554C9A9D4A8BA7048AAB4EA7D1A35
8A31F5EFAD390C149912EA594DAB678D9F886FAE1BDEAA039854517F484EE273
4FEE64A4E55E474775709BA8A8C6A89BB22EF394FEB5AFEBF69297D98C90163F
07CC0C29F20DDFB061E82530D793EE7F48737F663F048EC6CD51154CA4090CA5
98995D0F80BCE26D0C6265F94FCB03F303E846AA5A4814704008B60E07C57649
802F3FFBB74A2F78702E927B7AB2B47601B2E96AC4EC4CFE9A918A0604BB41F5
E8931B99CBEE9F6066D039B242C42549A159A488BA0F26D9A9D3F4EEDE37FA48
77C8BEB1DF14E8D5DF95CFE9028B82FEBE89C91D347E76FB8039FFFAADF4A3DB
D998DB81A8D731458BAF9F838BD7B873F7907F8B84CC44C45B0C9D3AA1663C17
10841AB614D71F0538F3F5A604A1002AB61E93C46D2EF28CDB8314119903B765
3F1C75672EC76AE18EFC2716041574AD812EF801A83E7FDBD088D5CB36946FBF
C4D184CB34CF8352E7F1F0F4F8291A573FC98C4BCB6CE7466CA36D96AA2818DF
BBDE0EAE994CAB38AE10EE7F2E92DC5FAAF0289F8FF9DCAB32B39D83C2DCBCFB
B8A6A8094909B188678D449E31ECC76C4ECA58E9B3909D78CF4D4575E4567076
54896F0A206EFDBC85CCA89818F81A962D68CF245C8210B79ED0A3C66ED3A57A
E6BD9D3C57773ACA78A9F1E24C7BB80A420D3CD84AF36F3534A2A475FC18D57F
D2EE608338430A7DE4689432A4436E08A881FE9E396608729E6D544D46BA58D5
E25100BDCCBC1DA1A58C8834EC64E89E7B02DA678CB33A8A61E69C562341D16C
45CC6509D3E6DCA17347FB91D5AF968164D20E33580111812F918E9C08619C1E
42DD742836B530A902D02010D74223A16FEB2D3B3417DB190EB27953711E3CE5
E38970777E81E0DBA61E3674BEDEEAC3A4F529893869287659A2F2C20BCBD239
A4A0AB96405EA8C89AD73E7D332129E200EDB1AD96012837CA40EDBA0F386797
6978ABE92269A1305325603F3FBB1080D92973976F48272DAF2A80EBDDAEEF4F
86C19557C3BBEB320ED144F2F7FA150B1CDF66D0D46DF06DB685148C75B66337
BE770C8835ACCF1696A38B71C86596BDBE6E558F02CCC2D679629496A2B665DE
DB5B41E6F307F5D20F23B185B5D2254ED6B03AD6F76EC0AF37612076CA22DA00
66C5CC58A1EF17A7E9E27DCE27308A0244DB2A6293BCCE2167B1F7B864CFFB49
13A6BA77A3D640E47CB5434F10D475D1CF1A1312A73FA670E46789770A87FF49
9204497C5EDBEBB4FA8E1617839F98683B8879A90ABABC0B002CE7B454B97F5E
1E26495705A293A74ADD0A5B19436F36F64A5891614D6077373E56620166DAD5
770E025E63C28C40D099CC130D8AAF20088C9CA414069D57B5EE84386A1F60AF
E7A4D5F4D2C3CA3DC12C8A0E7B8D88120A3FBEB91CF273101DD4816FF97837DA
BB31AA3C5C18B2DDA30A308859D6E354FDC5F7D83D52C3417F8BA279380D1C7E
EDA9BD8F522AA75EC12B24AF15621BE9C5FF4C5AB000309015DBCF9B0760C95F
58210B30386580CA9B96ED2C13567B53E2CD41919B53D4EBD5815C11F84DF8AB
0102DDBEFE68AE3643C5B8FA3DE20278C140DD8847A14D4437FAF7CEEE509820
CB29189AEF394A7E5A67CAC7487888B1DD1C3D75A2E83CC11171427157BF3979
22EB589C5BB447E57D5A2AC2B74D1241B3BB3E98BEBA2257EB4209DDB8C73517
72B94448069D5F7535CC53791582E01A5E644D98A8DBAB9E162CC0871490ECBD
13464371B95D0BB7F0BABE668CDE1B3C2B41DE7542C81D527CD0B6159487373B
2A065699F186D5DF06FAAD6B7BC069CDD51A236722CD8287D2DE8768DA85BDD6
4CBAA8384EC110D11B9A0F6E5A9675894D14F8956466A27C6DCE8E5B1E612C09
3A594EEDE75FB4BE791AFE4BFB6CFD67C6921F1FA163839D6EDACE4380314D82
4CE7C929F03CA5FFAD3937DC7004C3255D42A7C95755FACFA8928EA0134DBD17
1CB1DADA336D9A6CAC913F28E5FE2EA0697CE584DCF7FB03ABC1E285603BA2CD
6916F5CEF89D5B64D8E16BA8888974F6D741FE2E6F0C1E8BDD230532E1A4D12C
A280558F6DCC51F0C65F7CF4E598CD1BAB96C7D890B9AF176C0498344C23855F
678B30F056944113A584A1ED7EF853C81FC7C9934E648ED0689D19977C74985D
720B81A5817650A7DA098B1958E17E359470402EC47B5DAB6B7D89A49B2FC052
B8545F1CAD37B83C98876D0AF738196A64A4B49D24496E1A5593A54EF8E99B73
08C50EFF8B5232510D75426F60B8A2D5B962D47874D96C11A065DE3B00AC453D
5AA7E3CF919405BED7F91DBAF260122FF1BAFA48A9A09E3266A2FFFA43CD6FF0
72E85F94911DABA75A0D4E9CF3E22E4278017B72722838056B4BC1203ECA4B44
E6F779A1215CCE1BC913A7208C0A48AE21791A13CC70A71A00612674A9DD8F36
303219FFB9721C6F1DDC73C1D4B56E2EB23BBFDEA602648324B566D843F30DFE
D99662A4A5F437846BBBAC7C7CE7CA0F6467D88B33FA98464696F545AB251F2B
DC610D1180F43DC8CCF7B5DF8D91A315A1704FEEB74CEE2CFA834C9A42B1DF8E
A1CBA6735F223E3271F3902FEFAAF9E64D18F940672B9DCE6231D9466684A755
943DBB501C99B5BE369EBB1186508EF0D6DB94F02AB959B180A8DC31DF279B55
7801BE00AA021300AAFBB78FF2F0BCFDD1D62707DBF931FF2B0599412AC38A9B
017C35489E4D8F042E79A20B1FA4B3C647C663316F6B5696D3FDBA0D08478EF3
A3353BCD7BA2DC46B8F7B8E9B39EFA3A490E64ACC3CBDC9BC61040819D811AA7
2E694A2CD346E41A3648050AC7E10BB93D0C34CCC9221DC4A0D8A7968861ABBD
4DABA9BC0A35CC61DC68AD36B5A5E33B15E958CAEE825C800FD3BE435CC0449D
2355BF3360A7DF8F6DF138A83D257E571B4CF749F6C4E547B856D3D6261BA176
9364B7B30A986023295EF3E0AECCBDC346D604E50CBF1E0802E8B876E7D2242A
28B9E58FADB08C03DE5854EC21029687FE5220B6547FB053A435889FB76A8836
75939F4D61BE5883BDAFE001ECAC09FCE49AACDAFA156A4A89F2E0323AF555C9
4F15422A424FE745F5B3ACD10371B85259B0B714A5BCDD77462E3257036390CA
3FE84C0DA42BB8A0862352FB8A84FD962CF27B1BFC29618204E45214DE18F860
1896A5D027985D655C4B2B31EA0CDB08692CDAEFD6E11AF3967E0EF271C39CDA
2AAFC6D2926A79DDEF54C0DA7F1B56BF5DB8ABB7048992573ABCC418B511B749
562C9811767836D530C94B7F691BE40D1536A4220ED99750250592D8340DC76E
B9635E18E6812B2380848306F12A854EDAF963237C0902CF3521CA5A452EA3EA
C55300C61EC3076F37B8E999B39028E26FC669459DBAD37B647AC6847CC46081
26E2A41DD625A6AADCA6A7C68C684B8DF739EE38E83CDBBB877FA98222B6227D
7A59F9CE98002E7B609E0A71F1D37A10293E2CBA788603DC7FF673E2DF295F4C
7B4762250491BE7809FFB040187441B0D4749E77E859AC3E9DA03E5F3041276D
28E7666788B4722437AD9FC3DB4A4CEA4EF15409A77F7B65D564398DD012122D
B7F660FD44161FE20EE07CAC320D7DB4325A458BB0568A0BCFA03236C0C4A56D
47C27391D233E163A603511CB1C5A67E4DB1A5E3A31CDC04CBEA1D56BE18967E
6721204EFF84CBDF5A5B3413BE2A12B18B56EA31AB7845C25E045C0FEC4EEAC9
DC01F862453223A97D999AA674610C37BAC31E77847F0A0E14EB7C6A492B2574
4DDAED43FCAEEE8E161DB023C2B9C9A3C4E6BE9637FC8B7FDF6AD9820610DFD3
E976C31C580E924141E0802ADC611E32308BBB691F574A4EFA96734289EB4364
B9EC7CE2A220F2349242D711F59A186D90D264DA0FE3E10EF8A5EC7871A09055
A9A7ECD681DCC1165F8A60E01CE1A43859F49532F4EC14EC82D5D5A98D9E92D1
B507D1E7B0E6EA787371A2A472D4607BE6CF36FE0CFC2D0F1CDDA39FC83ED413
1AD827BA1DFCE88F823007717BDCF9FABB71971985326ABB5BF7A74D063FB974
C448784B5B8E14D5C28BA42BEFED1C23A40788C77E6577E410A56C6A9C14CAEE
A571B5A4F8636E9D7EDC7CBE2FE14287270957F625901F0EC0F8FE49096EEBEC
365F0099662C0357F3373795105501F4DD0F63C0D45105002F88CEBFBB97ADD9
8DFB22373D5EC40B69F8F0038B4A7CD33ABDA7E803F7E2E96FE2B3DE8135D3A4
C57809EBEDA6B750C38170DB69FAFF168CF7E7BC95583F23780458D6612C528A
462D1198FDE7EB7C478B174505BD2094A1AEFD40B0F5A1371CB73B44AF6486E9
7AE78DED49E113379D57D5C135E71B05A3638A5A726D8FDA3DAC98C592761B1F
804694E656FEE86F93F4D7E2374C24B4B527119939E28BA6C2466BA3ED63A310
8EF206E28884E73EC0ECEE64505EBC32EC7C1FA0300BA36E706825605A427349
ACBEAF6B71908872DA2BFAB73D8C6FE5407B0E55C22213799AB9690AD6C3A67F
12B26AEB58A2BFBDF5014B7A8CD560191EC5D3CD96D1832D7AF0F8F25B5E95F3
E4706C074396EFB2CE2241A64CA6E17AF751190A5FD1C6A30E32242FB26840EF
2142BE5B619DABABD355EF9A162EB68AC8603B6936C7EE7A16C812B107986F75
AABEDDEF3C059DBA9B91960D7EAF85A6F8B3F560C53686595DC6F6D1E9501333
5666C551F208D3B15B6B70780DF1FCCA528438BCFB0A7805729C1E18FBBE0253
D875A0D0B0200C80D2890D9587F9BA5A3FF1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/UniqueID 5000795 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 52 /four put
dup 67 /C put
dup 71 /G put
dup 80 /P put
dup 83 /S put
dup 87 /W put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 106 /j put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698