%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: project5.dvi
%%CreationDate: Fri Jun  7 15:54:14 2013
%%Pages: 20
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR17 CMR12 CMBX10 CMR10 CMBX12 CMITT10 CMTT10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter project5.dvi -o
%+ project5.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.06.07:1554
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 90 2009-01-30 10:58:51Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.02, 2009/01/30.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
end
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  /next ED 			% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge { 
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  GetEdgeA GetEdgeB GetArmA GetArmB mark 
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  GetEdgeA GetArmA 
  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
  GetEdgeB 
  mark 
  xB1 yB1 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/UniqueID 5000832 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /exclam put
dup 34 /quotedbl put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 125 /braceright put
dup 126 /asciitilde put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB28702831270DBD25D666FBB0AD7B96E
A44E891EA1EAF0F87013AFC982E33D67A28E96E0C9CB99B9E4192536830D9901
931A8CAFA41289633B20BA3BD7AA3414B6DA8D57CCF2FBE39920CC06361F075B
CC40335DB9A0071CFF77F6B7BB47F3100DBDC9C4A58C2B81EC99E8E966AF3390
E3FBCC28BA1D79961C8A1584266454DF772FBA99664D74D4A89FC82FFEDFCFE1
4C9E4A04291E803D142E37E7ACA66AB279378F2F192FFB2B5BBAD18B95F03136
2CB594A3D6D3F8576B90A6C4DAD6D6C8EE07AF682F925F01D0B26CBA347C03BE
F3B0585CF4539FDC66915E22117078CC94D621F31DCB3E021998A5D6EE94CA4B
E214D07517283D56973D8E4367392BF6C1150DEBF459D141AE0941C1C8C5CFBE
E735D796E365A1B0F60BB4CF2801EAFE4889EE5F338D3C4885368281B3C95CCE
251C28A90D318A8A0384439B38D63B94757252062EA44E88509FDD2E75FAAB71
7329622828B2785C1A8B26351BC7448C1719C88FE99BCB73F7DEA427FBFCDF4F
00EE079B0C712F7D2C8DF98D4830A9D8C8B70A8C5D54BC1DF433517EE593A104
F3E083BFE49E9CFC4269A86B58AAAC141930A2B4193F74FACC1EFAFD38D3EDD8
A6672E3068F4E5FDC99AAA254345C99C06076420E55715665046450EF164C524
F4DCCDE02254E23815458E7F703D2377C26B73B78B9ED3E42F346F6CD79F7F36
55235A7018C0F600C8828A06AA35100F143FF18F738D2A61D1555F907AEC5BD2
E149FD142E435C908DF2CFA784EB1E9DFE66AE9C9FA63BE71D12F01A00F5DB82
78A0A9123FB774AA7827D2AF45C83793EF6BD0A8E4D29FF11E5CA7BCEA7FFEC8
1DBB6CE8304A0F71FA477269474F8B787B3317FCC53BE27CEEE569E4E3A94E3A
44AF44C09DC401B4A0F00C5289D287D676175BBC50F3077109A454564554093A
40C10C95FFFFE48E94440985BE9D8D1BADAB708DCCED117CF2DCBAE8DB96C15B
184D16F051CE6996B95C59BA14D36E8122EF8BF00259515492C4A192CDFE9C5E
63BB1384878378F1C629D9800BFF243C4E6488D2D3CC178B680DED58C8A08D05
222F62C2B83A0B6C276143D6FA33885C9B9C1B1B2D4370CF6C8FDB960B9C4D7B
6E9F500DCCE697C35F9892A73AE8ADA9D552763634899F898B824CB5A6B6E1AF
4FB0AB0CE7F517E28F67D1FC762962BBE6EDA99FB82D4F24883185E3C7F6A0EF
B2930FE221F2BCC008838D311CD7A6C77F02057B243D6CFD7D2D3498038276C0
CA3444F27F65ACD7E6E3A364E23A7FDD5BB072E876DBD71388298766ADD01E31
795E1E577F662DED9702807DD1402EE89A2FD1260B7A39E0F87E7AD5FCF013B3
EA4C39D7A98FF3D53B694DA32E330AC8C76E85D58B5CD147BEF30D738738A19B
9F49B4B605A6BB2BAC93E3957DC4D2C9218B35D9D687F772C192853BD1E0232A
F3C4A673EFCE4FEEF3CF6CF84697FE6E63362787D7044448AD534E25B9C0D73C
57A5A33FD37B81F7D60DEDF27D829C6BD165B9C6A43EC34A70EAB526247A8608
AC6C0AEED1C781DA68E7172344B073799D9308C7344ECA0E8B5891A23358BAE5
2FED3BA7A08EB2FDAB1A050F364B0A48F4CDA0CE229E4340A4B2BCF80B8A318F
9B499E8D00D92DF87F9F8ACC096D508100185273879342B308206E7DA3B469ED
2410E0BE60ABC29D6E749326DE674B12CCA53B1CD65F797C3D021966CED34297
C4C2B463B057DC76C952C5AB9D0DF6B7A879090339E339375D60A47DBA37AE76
136EE19BABD43A020B19749E3412A5A2B0558D04850D5AF46CFBC3800C3ABC0F
EBA225AA011CC06803B31E72EE2BBFD655974BADF1D35591FECC6A50E7120DD8
5CD39189769D9E25F7D20104D4A69C2E05352428D4C5BDF034FCA2BC01F3DB16
6643C3106D7DD7FD79B3FE8A650F39207129843D8949255D691124FC98065916
B32F5BD67FCC210033B0316F4F763256720F4ACE656608A4896A24A6BA8B1871
FEAD7C9ECC49F2C62E822DBDF8FBEBF27B617F98F74DEB3BA6513EEF674BD712
368A3F191929AF471834B4AF7F49B9EB74A27394F7C7C03F1D5F47483BC4BCAD
B51B81D857D24DF0D372C30C5A7788A59742608FFD38593B5B3A1FA28483E04D
117BE157FBB377B7ADEF9C09D8F372A1E313C77809B89ED95F655378CC4B76FB
8F2DC43887C968669430A2DEC4C9B696C4251D468E8B2A0634222F79EA959186
CD0B7BE65DAEDB33F48F6425EA9578696F57047C8C33CB9A000E7869DCB94948
1F46572E78F893364D7920E1893B014DE8F7C00C0F17D72AAA2C11CFD838E6AA
380A985717C3962530014488BB626106408462EAB6223CCF8FA25ADB0E75F89C
0464406B7A1AE8614A1C307C68ED4CF408AD2EAB826AE3A68B1DE51A0E2B0439
60C8E42323484D9F0480126A35251BF5135F1DFA12AE5B99CA0940D9313D025A
97E327F46C006B49961D26BEAEB70F4589002B4DFF582F813D52392995D75B70
F69B13BBA1A5231337449E390AE607F3790491D6FBBD58617B4FAA8F13293526
F0556787B430782E58935BEED0648A99555917DD4179868F2B09A7999611BB12
7FC8E3703D55E2A38D29974F68EE19E2627C18444AE44A659179375B8804F50C
83FB3BDE32F3C81073D7D9B4907E86BDD41AC562AEDADBE07787173E7763061E
078562E913AA55147A388E68FFBE3D580AB823687C5E2EA018166D798BE3A56C
9C4920B1E6717F8A3C76E5E4F6D25203B72D40A7170086B1EE0C63104ADF1A81
04836BCC663FF252D441ABA13204D5B314871032ED406DE854C905C44D6D8E22
72B3FEECC7E1B8D6498294E3A949C6DA07FECC839946AF6E2D891BF0A2BB9F3F
D720097C23C401262A711742C32FBF4988F7036D565EAE461048FCFCF2DEB5B3
16FA8F6565B7C23EED88AE88BB92D576D161A3ED2636B5FF02A4CD386A91BB96
F77F78A1D00411D464546F5C5E66C1CD8D6565A29B18C26AC172A7D04609D400
406E5B898A1B8C43587FEECAD354A0333D52C9F473334EC7AD0F22F61A72808C
D63E356D236547DFF334379E19A6ACA8DC227D0265223FD9A8404282D7AF6827
14B954DAE09438128883F621349DB60D0B86B191FF5B038EA9CE7BBE715D375C
D401A94432ADB1FD181EAD17B1731FEF83A893AC79DB20904E41A0996735AD8B
61D01D7B4EF7591BAC97AE3A4880B4C38CBA775D76ACC93FF2EFF7DB3731D144
C530E25FD7E5081A85A41DF5873CB8AC1E100A02FCBA5AEFB489E637EBB2A58D
68AC1D272E21A7CB0C126E2ACF3642047B5383E6A56C93C58A259860E294FDF6
997AC390BFA5DD38E67164D94860583B4E41AB3E5BBFE3F1CBBEB778EF6947C3
5CAF17E0C816AEA2F57274E0C1CC070CF6A4BD36217F6ED52F84310C5667BE4D
DC4E5DD2127BCFD92BFE0D1F59BCE507C812FE43F75DA86D7FF082B48B51D6C3
4C4E0A6D5C41063F1B3633A7FBAC0222791D9132D3CD21AA8BE59F75AC36C033
64D8DC37769E59A5ACEE533E70CEE4371E3D2694F45F5C52003E505697D023FE
7EFD97F701E0A7C5A27CC750C378455FDD227E673287DD64CA71BB04D0323445
4B0C5F5EDBDC548CEB27633E8AF3655AD7404556D5C6BF0828A40CB555A4BA1A
2E7E3A60BEF46CF5FE7F2BAAADC32B04044F3DD2987CAF6858A0B08BECCEDBD8
BBF281AAFBD7CECAAE56325CC6AB8D381247132FAAFEE4014DC45BC83DA42A62
1144C7E8B73E984C29028DCA628A8210AD442FDE5549CEB60D90B0D98C422A11
9E8C6BB4F1FE796EC25584B332486A81887450891CEA4A90FEDAE6CE190B65FF
4F332558ECAE78935AC5BC1C754526135F74695B4AEF36CD334CBF2939638CB7
99205FDB9758E5C17C70BF8E23D346AE31FA3DD4BFEE8C7E0458EA66D1EA70FC
F39244C53E5B3770A4AAB7CFCB0777BE9585CE511B0D65F43660F65F786174A7
3731E6FF552D7BF0BBBBA5B61AC34EB0BFD08D10F95C14F1C86356618BF9BACF
1BDA230BE238CF6AEA809BE4F636D0BF276D114F11FD1D7C56F5A07C9CC040D8
77A21B6B4AAE9E49E29C51F8D2A5171FA36C50E72C757E787D213037DADD3BFE
9FCFA20166C071EAA767AE778B3EF15EB018C5223389BE3B22DC23084B942D88
0AB862AFE8A0547B12710EE37057C282FA13158D332935B1E7650696DFEB0281
A3D76B38AC4AFE2721C026A8DE94BC2CA21C1F717A68B35C9CF1DCF95141813C
05E50284F2696DC08130B7D77A6CD0F3D638873C9D70EE54EF2BA70F318C3F3F
F6A8C7DC479503DBC817591EF57ACE0296D04562AA545EBFD7FDC4510E590BC0
223D93530588E739EFCF720B5B0AC5067F91F3DE0CE8DBDC4D9416C47C0CA0BD
584BB2AC0AF1DCF588C945F7F05C337988BC62A4D49A446CEA0AFE48BFF740B4
57F359749D0A5435377F0F0504D6EBC43C069091E86535C9E7C3952D1F9571BA
6EF77B88D84439A043FA35B7C7C8EA3043FAC86B2073268C304F6DA515B2AC7B
706CD469959B965ED294FB4EB84386E54C0244C5CA549042A6D568BF05A54E17
E5AF821E801F2976D053A4C2E8731A5065001A289F2D90A96775565FE9BC7542
E66A96E6EFD7F35D87FFC06ABE4A1B4B647E1018A234A6AED8469A0152B47E0E
F8C5A59D0C30E64C7DED2FE490507CE99556653EE889D578EABBDD13C4B96C47
8E814376F8EA218BEDA5EDF1533E6799DB63F3C579F3BA4C6DC5D662250CDE48
6DD7255448B22EA4FB6DCDBC19C41E3185435D4E670EB97FC68D4E7D1A18FD0B
657D35FB441208AF45D492A7599F37404B9D0E4746433301AB7EB9B9C2B8B0C6
3934BDEE0B97883980895166BB5DF3F0BEE280DFF52D0FAF802093C5668BE1D5
DE165A51F6DF0D6901CE9B4F101F65B63E79D07F06BC9B869CACFD2E67B13A0D
84C2A84213F6CF87286D08571D6DBD712D989A85CBAD16D703B37565E966D3AB
8DC45FD9BE5E96E5ABF5FAC8445EDEBB607C2AB2433DA6DD5E8DC6A08D925888
7F2AD7C1934C7BCCC850373AB7D47B509A0E05427E68DC36362A7CC17851FABE
139E35AF9EC22E211CC9163065163415F391B36BF595A3CAA11213064C4AE490
E957AAFAB6A3546A688FEAC8B45CD2E0704464DD89CED3B41B327CF67AA4E658
4789873A068D49CB394AEB830F32B19BA5A39568114D7926FA7051CA42570F44
CF3680BD9FDF221A45642591C0238505D0262E3DA98847A8FC4809F1420B68FC
9C84AF6163DD409A90E9CA271D4B0A180948FABAF2C1750D705E9AE91B881019
6F8EEC2FA15F378C19C36860AF2247B807D36D91AEAE854E4FEF36C33B470DE6
98F9E2E3CDCCDF098E19D9D406C9DB9144F1B8234CFAD6C3E78A448FE9269697
F152045E7F61249A9C29F4D00C7C5D20899688487F86D3C88AD2F8D6B03B4414
8759708203D8DBDDDFD6C129ED70C5510A87C7C3696AD83C1B3EECE6A5344BAB
AF01F4344BDEC0446413FD1FEC49EDD738F23D650617D4CA97EC43DEECCB699E
96F9A4428869751F4EA6B16C7DE42BA73E897F4452C3B9AF86304CEFA7904A95
C02E1CBBFE342C0C4AEC976AAD54A39A332E629E8910B1E2BC36D8E12B2539F6
DACD88AD657C2D4DFEDA0615EA4F7FB87CACDFCFFBE3EAE8ACD6FF35AF47CCD1
4AEA207D8A22BE5F38F2524C1415EEAA58A846D6D841BB6CA4DBCB972075B084
3D640F274D81D1AF5503757EA253900657F018FF2277C92750943F92FC261FBC
2228ED45647905CCF81222B8F6F70F6EE30BFE3A21D75BE8B1A7A1071CCC95F1
CCED44C44B6FB258CBFD0BA0B62170CB07F6A8F46423449CA684F4D8625B8F1F
B4D51E96EF23A385AFDF50C923D5AB97AC1A12315F0B1EA243E94E5A695DDE41
C4D99D2AD37F1D6F7746900DDD1469F3DCBA33A6F5922707061AD8C7D9BE4F31
B17709EBAC5D0BBB2689EB05BD032E29A0752A029C9F85A13B16D0581217CE88
A0FE9C1B69D77BA4EE3F2F325D3D9BE2329389A24BE754D3DF80D1A66AF20A21
90ACDC27F23A25EA9AC6FC71FFB5F956BDE30211D1817D5F73E0EAC077C2F92D
0314252A2F296E9DF679BD9E2B6CF85761827F98D615103EA7A7B2C3E3BC4927
0843C2E2AD193F426738B0594349B4498BEE1571AF7ECAC1C0615155ECA5E3BB
8E00F319BAECE5E01714596B405914632E0AAD9FD074F49CA97EE786A391FF2F
2657A8D649DED694E9291E11633DA74B540AB1E9CA8DC74B350B7EBC16B3C469
C03CE4A582DB23A34530C363ABA991BC933D6370224BC5F0BDD4CCB8B69C82D2
792E746AB89CD822FA1C437D84DCD0351468EAB836A25021358FBBEEFB8E496B
6F694ED3EAEBAF50E432D019626D5BBD398BB34951F4A38903D921E1CBCDC40F
2A21D7E8A5BB941BF22DA73F69A73E27040E7FD50D97956A8E8E7EC6C25C28D3
A5BE4C7DEEFDF7FAEE3FA2007821AE0F7981A4C5F11E1D667E09303C1B2E0EF3
EEC2EEC3E2AB6AEC3A003AD97E76997B35CB068457CC330A4F3E6DE816B56715
11632DF207174BD93A8A94FDE18A23759E29CA3481233AF227052AA1B85ACE9F
8441998B26DFA7106BE6153A9F523D535171BF7F37F1830BC9AE8949C0EEAD02
7FBD147B86369BEF1BFAABF2D7940758FA447D411B8BDD1F35B6D033592C6014
C2E7E065AFDBDE30E1159B31E87805974DAF2A1073A4ED6D09A396AE2A1F6A0C
E2C14409889D6B0F77FA220A459166F1FA716E60BE91F6E8EE0290C99D37DC52
5D7DAE136EC2DA741A7F8CEBA89722C02037F7B8FD8B789A53414419EBF1D64D
CE4B031FDDBA0078AA9E023193B4788D8DF1FB68A7EE445AA352341175064254
72484F82ED5BA8C6075D5E3BEA6D6D56E279B0D3D582B8C9D1EDA4D929F288CA
0DC6E410A4814A4123C9AB0E646225234070DB3D04FE5674EEA76A033642B88F
1B713745786C57F8DCA5CC24E1790996C037EDBCAFEB7A91CA8249FFF9ECC814
325EE59DD87055796F8D6A3AA1FAA9CA7BFCC6014F9A7FECB1059D4A3C35012E
696838D31138BC41275C9D74FEA591EBC8668048D04F98492972696768957C4F
5D5B646B43C8578C3066E4E72C68FAAB43E5B062B04293567CC4725D497A71DE
3CDBBBBDEBB6D8B95FD83BB21F245412441012822E001B47DCCB8252470B07AE
8C890AE8EC192EBDC73E408DF460ED69D6FDC37206DF45C1195341FBC7F59F6D
10BE504B264F1AC1E5AD4D0EF86A78FEE3FADDCDC8D4CF25F7724B270DBB9BF1
00B153D688EAF5527695F50FCB02B73426920A2447D60A30B310DA1CB81710B7
2A88882B876011412AA159323573AAF514C4C880C491F2FC0CDFB18D8AF74BAB
FFE0EF7515112F01A2B33F7B073B291265B3EA8BE72F091BCDD9263E37EA0153
ACE6B7BA0081E931559C145FD5F57323586AFE475774A4CA769ED3A01335200F
4F82732C68246C3E05ED24665D218E3E68E15A4F20440935173EB83FD223ECB3
B3EA6A9238A3C4859530A76A75D3090B0ACBE97007DE7320AC550AF1E9E26A40
9057077AD0CCBA847CFCA9D74CBA8D6689B329432116C5D0B538AEA074AEB448
94A2A4494440492401B7377F2670562465DA2922DAD8E8EE4065C0096EA492B7
A52508AF6326072445B8EBD7C023D9ECFD6933CA059EA09FB30F6BF40D3A2F71
85A125643419DAC069022390E4776C7DE59C39374CE7E8BB2C6489D3FB89D6EF
C9AC84C9C2352F85DF5467AB9E292EF1BBF968EF7493C5B725EA00C8C95A2824
224119202C2DC4AD8C131F1B9DBD21B4074C2CFFD86287CD08CD3D747B931AC0
E0DDB720FBC6D0151198BEF115C91262A25B9A0076641852601D928D921ACD22
C2269F3E05CCC3B13D6FE7856FC14F9C883B0F301B2962F17E15FDEB152576FA
45A05D7242D36A810607F6E2DBD7050E3E03DF0EEF9F5E98E8A1F74DE7D35B8B
A1CD3AE27095CD8251CBC8C08A42C5BA7B52C363369851625AF83E018016CE50
2A56BFA2EC755BF3AF5A911E97D5CB9B9A39765153EDFB001AF783B7DD0A5100
F2C17286D2DAF5A67D3776F5F6A35EA2FC0721D34CD74DD64468BFC3DD4C6103
4CF64503D666CFCED8C63258A3D455032F52ED4E536928BAE7789F9C585AAFB0
38340E5AA054BBC289FA6D30F2C81B25EC9FE94026BD8BFC69DDF81B7794D19D
C92887112157AD7B8D65816392F0D5688565458747540CC1D200CEB6050A3800
A3996BDD74E66132A5DC2432AFACB8DAF89C8A4B5953F182B22FB79DCF4A5B71
05B14F3E0942A98FD4D02EB02B1FFD049ABCC46C2C684960D175750E2D66D5AB
B21B39EE558CE93702250576F3AD69E3AC531A1AF6A4FBC3771DDA784BB67DB0
C2D07EA9DDD3401F62CAC7F8E7DF2B8026D2D2923437F849C6401A5FBAB183D8
7CBCADCBDBFE6FA974361D98690D568646E5B5CA5E98BA8449FFD225847B14F9
7663E551E9576709A01AD21AE5010C070624C81644F54B633450796B87463690
635C6028012240DF31A3311CC1E94BD2E2FB9E440BC964A229B259E81CA90924
3DBAF4F015F4B816A7FC3B968C995B01B9E15418CD4863A69D2CA79BD02A4450
CB689D5866FEED84CB1325E23A130F65798B622339AA1D0B35A27565E14EB910
3587C73721EE10D78404688ADAEF7503BBF1456C27BF25FEC28A968C096B27ED
C1B1596FBE137F227D4FD454FFB16A2B2C8437291715982DB0D82F3FC3826277
4169AFCB5BA4E09650A2B5DC91D0DD2A73CAFFDBA1305A12BD4549157B97CA54
7C7EF44116881778E44F96E53208DBCAEA468EB41123CE5BAFF72E2C142B332F
2D2BA24F56C841D52BAB5C04B82FF41233DF27398D52CE77CB548A37CCA7FB52
6840EF5367946F914315B92BC25222C704D06BD0CC42E29A2D33B7C45E581F1C
66FCDABAF26D2B516B67270A7048327AF77463505803D02C5056FC32C00D7C2F
754C0BF2E239ADEFAD26C924251F1ECC6406D8D1A326FF9FD75724570AC62BFF
F2910DD4439653C9639F21D5252DE9EF11C34C70E552AFBD3539A2B77F50987A
A91D7F2D345169177F0779281BF23E5A0A073DA5719BB456D1AB800C89870AD4
1076D91C6C59A598D62E5A78703E68C6E8536083ED2DD9D7EEA6889C1020BB7F
E2F2C678F11362B1A3B481FC02E2ABC0EF6B252A5EC216732CAB31562EC1278B
5C2DC78DFBC1D422A8373ED485BAC157A5CD48D66FE6A787E69F954DA88D439C
A2A74EE146FF90B63F5DA72EFAC44028A2482D01147AFA8A39B1E2AD605F8AD0
CA16FA0D7233526A6480DE8926589192DD63457FB4472B1CCB72B4658EDC7868
57B9056D4BC35A99334AC8864F7E45B8E796C59A74889409DBA614AEE50BC403
B610C7EA5153824FE96B1FAAF57488BE4DA9358A167BB52F506F7862562CF7E2
8068F9E9F1193F161B4CCB161BD0B898563A3DCEF7CFEBB5FE78A3AE9E50CCC1
F64551DE9FBA78007A22F0B712EC98DD4FBCB284943C0ED5430F86DF1EF024DD
2C7BFE870967CE9CAFD85DF3D4D4B3D81697EF2376A3679988D75F4F0ED3D1D8
93122D5C5A45A8E5D8A8F1F5D4F2779D648523A175A4684FCE691E76AD580B58
DE9A95B54E8CB0D0FA3C3F4C0E06A27993790559285A8644A58BFD55010E3A4C
36012AA001E9CF8E87D999D73397BE8F0B8F466591DEAA8FEC9BA2223F553CB9
930AEF4A748FE33008E5F9273750E14D4245ACC125867A72557F66CE7A0E6E76
F45AFDE4CCC68042B64870CE91F3AA5A0B1B80C8429F5A91358B9732C2502CEF
3B0119B497A1C6C0DCDCC158DF8D6BCA6EDF7CEDCC16AA39B846B0C65E4C95A8
F79E2661A5283FCCAA07AA9068C7321892311047EE2F6A2375C384B79834B665
E4DEC53CCB41F1F06F5276F966C6D3E7EAB73FCE144D5D57F4B1E237CE32CC90
E00197BA79EF8D56A0CBEB2A208B016D9CE066F3228EF2808A78E6F09AEB65F7
AD58B16257F790AEF84BAF676567ACE514E3DDA90E8E3615F025D58D2FBEC8CB
1C72C0583841B2715821EF87488875F7D16599A769F4C6191FD00E7CC539C384
336EC845A210ACCFE08F2F081A399F78306ADC86BC9ECC673D522F04D6E5D5E1
2496214703E8EC6C778353C94B5402C84E3CCFA6E3E5E60EB8B477ADE1B21A49
F3A02016333A6BF536FFF8A85D93E7CF271B08455420B756AEBCA451E2786968
C9BCDDBB14F405CD88BF5DB77639BB04459E62AB7D39D3DE06CE91CF38AB63B4
DAC48997DF5896C910E8F534278A3C74C2E3EAAAC4E5A1DC491F4F076DC4FFD6
4482FA134299514733D07DD68354E391BF092872064C802061029C2BEC7BAB5A
69CFD0A4E037FEBB7F8980F02324A70FB976A7E756099B11D096B4F7A9986172
5B30AC307927FB2318D1B55560F955C6F90995E189F6902C2567A2D0ED6D353B
015566AA65DFC669149C755C33F964EAB41413DDC4DC340DEB9BD01946282E42
28A7DFDE9BF339ABFD3F6AE5B78C935D908309B8476F90904504B582468FD59C
27D6BBE4D1BB479739B89E10264401D72F29B48EC17CE1D0A18641A34A82006F
5AC322AEDF8C7558980E383336D46E14E0CB098F14367EB9C3B2045AE18B870A
BD5E53124F7FC66680D44EA409EE0967C1252CFDE156E4DC950AB5BA30B5BDD3
83D56E7DFC06F33D93AB70A2CB26E2DEB37AED5F71E9D4E8EF798FD3FBD06E46
52D7515BDAB62DAB4C1B6EE7253D7570DD00E1DA1762D0AF41E0D4B529479509
B32349C2D902436B65BCFA53F7656E408CDD8A92C53E2F3DA92F210A57447C7E
8357F1F8469CBB354D047520F44EBF677252EDE4664A02D6C44F27C9783DD658
60BD3F7C5149CED530F3B0695A8028B8A364ED54D9272018299B80EC4F24BA07
2A3988C507829ABA8982D3475C722CF406EC1EA42AFE2B0B952EE14733A07379
8973A1579AD1A500CB793241192FD9C178CBE3A03DF5EC7055530D8E527637E8
484E27E9E4B5E299D33E228BF1FC2DFBADCE65C9D3B2DF2B6B9D26184FE9348F
7D083FC166B23B3E4D81E3D1148CD91410D7601070EF1DC00CCCB4DD148CD119
4312CEC08687AAF0068FA877B597F0BC649FE645F151A056F2DD48BAE5D7DBC4
C9B48694C83D996CB61F3A36844BDD46247B0ED98558D51D39201AC15885FCEC
63B0EC6D857687D0EBD3C6A41A73353B5B61551ADE94EC4A516F4D68A5FA665E
D1FEA4E9D9E4E5D32ACEBF197B14D88195C88065B051BE2AD06C88707B426567
371F05A6C0CCE51B0AD1F6791D95FC64EDDD263A2B74325BB9AC48489D740928
F908D55D6F8E325F40B9F5D1258F988A3BDCB981D7CC0CAC27371D9183ED7495
F099213DB7502C24B886F5EE4CE3C81D5CD7FE93D21DFDB9D46479CDF7002E52
AA400411E31625D0F165DCBCD56BD7C7048B04672E7B0873B0D7C8195188737B
4871E3E90E65147C8A85D6034F9ACEA1A537C74724776629459C0E1FA23373B9
D6A1E485C8552D21864E1E24B6B6682E0EF94B6F2C489A8106F5281D4ADC1147
AB4F4F31FAE46D5CA272453E53C3C5BE75D39C12DC110E67E8174D5D643541C7
E7A53E7935374CDDA1AB133F07F25FE9396F8DE202C56563B215E3D5844EF1E9
5D79B6B3A75E708513E542FDC1763A1D5CB848D3F1C40367BD400C8B5C5A399F
24632625E8F6B1A0740D36D2292F4574CD324228377DABF751B9FECC9EC7387D
A41EF8AC2093B23C720DA474550E2C813FC3A63EBDBADA68F12636D2D6DEC74D
487F3D66B0F860A0776F25864F05A4278CF97751EF8DA88A9ECB0F2E09B3E3DE
53354CD0DC40F5CC691BA58CC014DB6996F15CA17244944357F7015742A24FE4
7903620B8D87CC5EA83A41BF90660484729690DBB5206FE76F50413F9B12A48F
73B4362F55BD634AE5305400271B2886EFCA15976DDD46B37C5AD6DEBEDD4CC6
F67D001727ACB615C41AD12EDB91D5D4F19876785EF71E94BF6378AEA7936D94
48B271E02DD8E3218F600DF92377EC848068CF43B37964653A5C59CE8E275151
F4D440689C2FCAC86889F7BFFCC72106B425FACBA494F7AFCA1442D8CD1D8159
C7CA0449A2A2EC596608EBF46444A51924F8E8FD4060F380DD1926B69CC487D7
31DA62810F0D11C6997B4838A0AF466FA5B60AC4DFC6DBDF6A40CD45FAF0A1A5
DC05AA2CD5FCF1B203180C672863363A262E75083B93ED1AC2E2957572B70E40
294793F1202DF4BB1CFDCE6EDCDE28C77FBD3AF57F90690536609489B9EF818C
99E0D488DFE998D9F7E52BED7C55CF53C74316A6D43AFB6A8482FA9B9144BE33
7256381460895991CB87C96EC92FA9101102BA73E64C32658F2408C029467244
137EB1739B31489A23B02E8A0FCBBB1CF200F0FECDEE6A06477389B247B04D96
43AF11794DD6A52595222A7CAB748F0CCE21A3396346454385455C32F5057014
0B09F315A0706E3FFA540EA3489C4C5A910B15AC1953B079D013D2BB3017DBA3
0F34CF790CE6E2FCD640C2CAD92F00B61CBF9DB08D45E9F43661C5F4BBC1AB25
AFD5721BA46ED1A779E24F4D4E698A22E055C96054A677D2C68F871DD714ECEE
6A7EA4879BD0187D1B88F40AD62860FA5B16F66E8E01DE68CBC124A968F91CB4
DAC40B99450F4EDDA2C7C5EB4CF749507B53D833A38656612E9487FD6AF276E0
35B47E7389AE0D3A4C6FA27E882A6D0038940EC61E70ED75A3686CAF60FE9DF0
A0F6C2214D1AB14A18818AA11C77F89C8EAC9AEFD6604A3D02AF6CF9ACAD12E7
7E9108A404F0C8B4F25AC332DD3CBAB5A2BD6059EB6310EA998E266ADDAEF325
FADB883103E1DA5F030BECF77D09753470CDA0840BB174E3A01A6EA8216653BA
182FEA9BC24FE491AB4AC5BB6CA6BA800131307EC918309D6BB2F1BB32BCFADB
E4FDCA0FDE1D4CCF991EE7100BA08D9B2EA7FE4578239A3D06AAA8ED5E541E5F
946551675C48ACA546DB39C502A91495729D21B752576CD02FCD88D29CC2A65E
4940315F739E426EEC29F1163E7FF46A212FF9A24A6F2E0CC136AABD1EF98586
6562169C2F700E44577A861CC3C0DFBDCC0943AF276F0D419D4127355B4CFE3A
D9D1BE3D4DC734B9747B7D610D43B250D8D0E61F978D6C1363DA8BE84963C170
119AF5D7878454F2C175DADBD9AF623815ACC77ABAA0B7433D19843C1A1DA7E0
F96B0E0AE65729E0BB8362B430D61A325CE3A8828A314F0DFE234844050A3182
821DF97083D355FD4CF4FD2543B7E60F0F0A1AE423650BC0641143F2C39C9F47
4C41288AFEC9CB9FAC2B822FC31D40CCD931ADC2AC6753B46F415B3BB60F0159
D9B691669912EAADD69EA47FB250579E563481812BEA83AC1B86EE3891716804
70DB5BE6730A8DE91A44B3116786E5B2E94821C562C11F512F9BDFA663C67A96
C537211572E0736455667FC84DDF1D43CD5EBC9C2DB6AAB8392AA61748994285
6A59A90F967F28D8573294395A5C8D246A6E8310C2FF684D20C604522DF57156
933433DE5579227D61F309385E3BB6D6E0F1342616AAA736F2D0415FB4C23A39
F6FE02298D2D24518D57F059CB94585F50C6194F29365D81A6AC859C74C9B9E6
D4399AEF89E780F761D1386EFB3121180F6ED168D8AA61F99D2D515F39431C54
83189023FDB736DACD4E56559C0B367DCD405CD0F3D345E7579EB77A57181D2C
E5B99CCC94A4CDB67E68D42E36FDEB3DF343019C27921D9357B700D45B6FB8E2
93ED74310EC923553641A3D2FE1EF9D9901CD9E076AC3FDDD53244FAECB62A4C
75E64F32C09EA25BD7B7EF75DF365F30A50EC7171F69F8C908AB89ED1B8B5A7A
CAB042BC144DFF0298EC790AF961EDEC1F68889F1F4F17E11A57D73F0D1B56A3
ADC0E725D8C81E1D054826277263002AB2191675A7D8E4790C950CD72B363B4D
E94CF762927CFCCCD8EAB50A261B05A413D3465F436246A45AE1564ED467BC03
684E41A87FBF31DF60B85FC0D896CEC321F5FB09620F28248B2F753BE001957B
6597DDC0867A9119573E641BBB63B5189697CAD42ABF0202631E8D5F67EE436A
16799E78E2F2559FA413301E7C65AD3A6BC1CC7AA29848400746943672C29ECE
F50C236C6047494E894A30E2ECB87CFDFF158152A17D897252E09891EDFC61EC
1CEAA70C008A1FF5764D858B6B978DCA2779F2C108D4B3F046AEA8A9958FBF01
46280331B9356FE309B047C2AD245677B63EC63C5092E662879DCCC2708165EC
F78D5FA42E4228A1FB64BA977EB5CB896E4BFEA973D6A218C80AF1A4C43ACF2E
63A4098BFCE9A35484B594C182AAF35E78D2F5550EB259B3522012A13106DFDA
EBB9B87F84398F0D5C249A61DA4756FEE2739FD1F5DBC872F3211EF6DC341CC6
CE35A543FC1882915075B15BAD8ED2AA6A767364749038097F9FF7913EBDD31A
913574211385635D451D3735DECCBF8563739B845FA06D23B6038B071C53193C
C55C8C83926F8CBDD2165B4931BE34B7EC928330794FB607769C1667C4960D01
A0C7478C11ED3F36C90031D7AC3AE8FAD169FCBB095CFDE0D675B24C89E6B4A3
CB25D7769D72D9F566B2CF7C8C84D205DA0932215CE3758F8F52014D9369299B
C279384176C0A4D09B2155AF516E38CB186734F12C6B470701C381E38B1C7150
E6ECD5EC358F8B6CFC47BE32EC9B1F4ABA9FF8C02F4C4096EA7710E5C2D5FF1B
2E9511B8D2E15516FFDBDFEDF1458532AC89E163F991F8193DFEA3886499B160
6CC421C449EAF1206F1181465A20BB7D8F42148A182CE2A3EBE64713991145A8
C6D59B20E94217E9A8A7E11ED1CE60FE4A57030ABA8F40101EEF8C6AD6A24CCE
2C6AEA49477540FBBEC931DAD916668FE4C4C91781E078664E7225CF2D4CC226
532619C0A4B66A5B373B825F4976E6090ACF11F892068EFDDC781738ED562672
6DB3935116696883D5981275617B7E09B042A5C830F6502AF4AD570390C7BEE8
3C6C4C0E6F34D510C167E6D2664CAFB3A5C436693FC0A939C15EE6EC78CC711D
024D0B52601AECAF689D5DCF2528A5104262CED5DC0AAB4153D099113F9C47A8
C31AC09A6B5EFCAC63D462BFCCA2F10A01BF29CEF0F86163916D603D087226DD
88F944B713B45D27F37A5903E37D063CE1230430D84F4A341A7C951647F0D16F
B1B7583BEBD3CF44A1CBE5403E6B8EED63F5281ED9CEFC99E443DEB2213888F0
15976174973A1340751ACD26BAC604960CF04644686C309530593D555A29293B
C7FA1C472BBB4D6DFFA47ACC1848B0CCC722707566BEDA7FCB13BB2DC3CA1EBA
FC5A7114EE0DF528B7582D1430290E259A582B02046928EE2B9A83074E47C60E
C127DF9FF68772A5EE859A9447B142801EE6A2923C853B57A7D2F67C100D71E8
6ED653BC03935966BD921C486DFCED9B4BBBFA78AB75E6C11CC34C99642EBE31
77D57D53FF3D2B4F0A802454D713583EBB14C6AD0EA3E7D6CB9C46CFF3CA5ED7
29192AFB6493A5AAAC0694326D75F8661AF1F974D09444CF732CAAC341F3C93C
F0C408E69F22C6C933DC498C66ACB676CD13918BD17C6FA07050B6878ED50B4A
69727F8B52A7137B61D14886E099177E94988321E3E83A7EA920FE987F767B5A
7B8CDD7467709E2B09C28DB7E847C205D4AB087C5881FFD5019E1C6E456DFC6E
20AC1F66DC714B547B488A5165FDFC8FB1696C243BE864FA0A570545EC94C876
93104D4B3915CF9379ED72ADFB6B9E02637F505D720314AE0D5FD2D7DCD928CC
46250D26B4ADF3D84353F608CDEFD5BEFD14F83149F3E6C08C7A80165A1DCD9E
FB257279319E07ACF5336728BB3B9076B96487EA1350C84F0ADD57F153532CEA
BCD083C19A120BFF5903105A552A68C75F4A06309CFAEA630D72AB121FE5CA4A
D8731336E170DCB2CB3E35D27B65651E9B3A0E4D430F4CEC606C771D075184B7
FABD982F5AB8DC7FAD31F16A391AD71B44327E72FAE0E9E0A8C8C077F5E2AC69
5947C7872C1D2295DB22451665ADCE24A5DF725F16927A53857CCBD177CF7BE9
594F30E0486A39454DE769FF785AB769FC601FD27418D70716B5706B351504C1
BA645814243A92C21F918461A0925E0B63963876786BF39D2E91A270CFEEA6A5
1A2F6535261B522B19877C8F552F7B10558EE94A82409762C9CFC5F5937AA9A0
89A4B909FD24DDE75BC0B331F56E8A5133925C4BEBECB913A1B02699C0ADF3AB
77527C8909213C58880B926EE01C3D07567E3C47DA509C4749E6717EFC51FE5D
ED8F610F081F4D845B6E3C835713A8A093DE26D179EC3185D9C5FA908C85895C
8936833C52C506ACF6328DB4A845728B8ECE66307B94E72734D81BADA0D46C12
8644DEB19B8DB8715AE49185ED278F95058E764A7A4C0C18AA9865FB1036DD57
6A3B5724D10FC21163686B49D145070230F76A0C09A155D33C9599E5EBE68B24
33B0E8C971CB075ACFB45ABC69F7833B7A458B7A2006B90E4941DE54F9447728
DF933AA19106216870DDE9EF3E91314397A8F4171300831CC9812D9E748149FF
C9EB45D74E56CDAF0638011F1A4822356633BF9640695D46A5E898B9D474B587
EE2BD52B390E4C15009785481000BFDF7C668C5F84DC1ACC75950CD51B91C8A5
870405679E38E35B72E214974B2B9FCF2E772066517E602E598A02CA4A6930C0
EA9356172958CC8A69DD7849FF2B8FBF8B1B92933E0C357C3A320BA5DBDABC99
F401AC2A2B7A3264B839EEB841781AE0C90FC2035A14E8E1CBB6CFE032DD8278
AF8ED46FF15942FD38454E0E1416D6840F591121BA9B6AB743F3CF4490C32480
DC63A96993E9944EFF2F43DE74424A025028C6AEFCBFE9447A13705CFFB57ED6
8AB1E3B7C8DE0FC74F4AA45ACBD6CB29357AB2824EE2412F32CC552FDA59EF02
243A51FCF787DCD1B048242A499E4134F48F39064E339D6289B00780E4E9C918
43A8EBE30EBAB72C2EE8E35B7F8A7C5D1CBEB73EB5A53D6A26D14C41847B6EE2
AD36E95B7DE376BFFECF198AA5C28D099A345E1FF5D72E973C0C94023B5D6F7A
C91D8E14B813BD09A9CE56B19C610A07B0AFF2467D39B2B38A83EB6FB4A5899E
56EDD41DDE95EF1DACB79D4C32F6D446D43482F7801277074964438F2AA4C0BC
EE8BAA22A65EECAA7CBD1AA0A5D0F7925DEC68FA7FCA5801E39133EB5A2B7A9E
C15689CDE3989DA25E968C808A06C65BDC5CC55E44ACF5E81590D4E01ADE2997
5C1E202E7AA6D860731C5B2C28F373184FAEF617C627E1DED40163288D69FFBA
A0974338D6B4026376BF7BF3682951E12BD23D7E7FA3E5BF2EE7473B5B152C68
1F2ABCAAC5F02047AC10722888BBC7FF76E70C730293688D205AFB268256BE23
D4C73E59F0F7D8CF3A809FE92348337E012F9EC9CC4C5E5B8415F1E40E2F0C0D
73E31C65D29C3558AD4C35218A13DE23F1B8CF3DD242CFD0114C8B49875196D4
6A054A271317FFC95FB494D1B24FF7E9B3D2A990B167E379797B8EDC924EAE0C
C636EDB6F5CD1C1E2480E41AE80BEBC375222C3BF45C5FF25E3C5675F12D1ED6
917F138E4C0429721C9807311280EA76F83B3B354889113B5C1015D7CCF2B722
05E5A0B2F90C6F5EBBAEC4559605F15E91EE25FF50B0C3A20AA43BD6BCB6D746
FB358D7F8865901AFE82FE7E6AF19D713F1E4F3EC0C80B20A515A5E8A32D70B5
483956737AFD40E6E87A43A71AA588DC6D5221C85E86C2FD1A60F72BF5FF1920
913427DAC219B45FEC2192FDE84663AD4F1F5A97C62DDF4F9EBC44CCC821A24D
47954FF9413BE4ED14BBBDE12127455B9AA3A74E393985E8DA7768808DB83E1A
D859C19524FF697CCE80BD2F157ECCBAFDF7450F8E76716FD3B81F9B8F2BE7C3
C1C596A97EC0102251D8C46FB400E8F740655829E7FCC4A5A85FFA64F17EC132
6D6651495BD9CC3F1FA7E3DC1D65EDE6676AFCB0AFA63F22FFBB14C752C7F46F
CC3E6F9CC9C85B92CE191DCC3E47CEA0A4AAF44CC64C6A503C2BD3BC78F1B852
2CC1EBF4A4EB0735D82A8BE4674705995B5C27A6C761AB6167AEE67F5B93DE70
A13D6AB256345B4869E4DFBE9055293B5878339F877C21465F263B4E4A730F4A
5FDFF745430FED67ED9AC350778EF4B90B9FEEB3F040252891476EE55C153341
7840700D3AD6B12229E43ACEA692039CA3716AA1B3463B24B73D848B46B63EEF
38348649CA2EE6D83088A377B8AF643509FEAAC70655974B4BC07C0B1BBD7D48
823846327E58EE2015B1C092680FEED963E76428C3DE8BEDF1CEF3869E599EF1
AF026DC0A6249ABA9DD8FE2C709EE308AEB250EF9111CF355A9EF3F0280EDED7
440B12FE04CC550080059DF32360DD7D296BF3C0FFBA484032708258B23F3995
A9A6B9634CBE5448189C8A94256EE5FCA60705A612E9D1B157824F2981D174CF
5B1C78C57240E55532358C92D86FB818D4F3EE33EA04D92000C2CA3D3E6D125E
F1C131E63A98E63465AD4E543E48B43FA628CCEF4EB93FAC23A5A61C1C16558E
A56F1BDEA957EF3029873F3BCFA639145159A77AE44CF4E59E66BECDD7033ACD
8F4A3BC913183B2BE2ADBC35E2EFBFFEB56E1F4B88406141850B488EC0838683
35EBFB7325CB080189325271F4FB8E3004FD66A31FBF0267CCE4A07E95894006
CC7F596A59DC69DE4D0EF209747FA28F544BF8A4CE60E1778FBFCDA37795F87E
272A0FD91FDF9EF1BBEAF12E03285B14402413BB6E87E9C43A867895A6C9342A
B3626DC27350732C5D131319C2B08B243FA6A8440D815B3EB20E04DAC860BF85
CBF08060732D2C9A281C7A5813EEB88C65C9DB4E23BD1BEB8EC95B566C5B5E6A
64A59DE5A8F0E9877A39374A52AEF1428A45A7C8A73BA394E27755E842A3BD12
FA889DFB0E9C79E64C2F75C363B2B1DE0144BEA564E7D830D065F9A2F3238C39
5371B1FE607E2F844B3D8353CF148D80168DF8353BF4EEC79870786AAF16A575
1242071CC9D7FCC20510DF0587C1B8470E2BA395B5516D1036070981D64AC418
0AA2FA276DD3034AC7258A68EDB5972D4ECC7CD18B8D13DAA5A67468319BD69B
7D50AA9472312CAAC8F8CCCD0663B2C43E3D31C6158A5A48D1087A765666E3BB
3688431DCA618E032043916AE07231307A507B57D9736A5780BA2731B787C4AE
CDDF14E6A8201D84630A1166CB3ECEC7735C72F6E960D79F12CBAED14F607E4F
5CC4D6BD5FDB8F2FF16F35EBA2D904672A164D74CDD7149F6C584629DC89E721
E8DA6B6C1E79369FAE64EE3371B536D7870D5DA8D6BD7328DE0C729F546D83ED
43285399BD2D09AA5DFDF1CCBC5E740A29ED292E76DF29D157A81ABCD3B3A04C
8455220EFAE47EFC8AF253C934FA4D052A2A2749BC93C84681DEE3C2841ABBD2
573648438F9192E29194516CA7A07579CB120D05E056AD69D8664A85DEDBFA98
A758D1859CB780AF10E80B3F16E6DE90992BD7AED054E12407CCE01C4E738C4A
70B48545C4AE0CE738CE458533BB509DA48925CA08904DA3B781A278B512E162
41DDC32705E4042EC8F1E4C5DA658892E92B60
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMITT10
%!PS-AdobeFont-1.0: CMITT10 003.002
%%Title: CMITT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMITT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMITT10 known{/CMITT10 findfont dup/UniqueID known{dup
/UniqueID get 5000779 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMITT10 def
/FontBBox {11 -233 669 696 }readonly def
/UniqueID 5000779 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMITT10.) readonly def
/FullName (CMITT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 124 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335FEDD513EB6237AC8EFFB213
218B5D59505B920425C46EA55A185ED268DBAE2AD127742473FD1018459B7E12
C21514D99DABAD554C53B868D24B881AE68B52684362D1AC0E86836194E335DF
BB6D37A7215F8F4F5C816783BCBD4DB6838DB92C13E514A1CC344B43D8B8121F
7C69BF2259D61B264AB5259DF53B7CADF565BABC47F75C56305448CDFF06E869
91043B33C8FF9455A99BF35290E48EA7FEE38D35BC1A968A6B9489068F78E17D
B4634A84F0ED0F884BA33B46FCE57168E787167E0A1E8EF21F7698BBBE25E23E
F3D6F8957E9C3E858BA10AB9CCC45271F2B23D423AC0AF934ACE0FF6FDC79523
20408F919B960A276FA88933B9920825E602C570CCE4C18BC4035BC59BF4F87E
6D05BE7CB7D0A77A6C8E666D73D216F04AB820F477809B8410941E00F743FB6A
55F98519E4B6DB552CCC264132BA31893928998BD1B95EA83246E90359D02566
715AC489733A797E2532AEEA34F3702B8FD10B35803063296A3FAD8DC11C0D62
13B2882C4C9B090AEA4097302239EC457537EE7B3BE94AFD5A8672E6069433AD
EA5F9A60B8DF0DE474067A65F1A845949CD12CC4E0919CB7C50C0C23AF8D6365
083C3D64103949AAD9A71FEA2C70100FCEE6E7DCF19A7AEF7584F329DD12DCF2
E02635F8710D976F815E76D3F3CF476655494394B44FADD9A9524EF08FC31EFD
A32B97875B55234F019F32EE4AD722B6669E27C2A629C3F170012C9AC62F612F
2A54F7B1EAB87B8ECE7B64A3BDA7B6BFD5B6F3F964656AE949F91F216FB70770
DB9F68C91878C624762DE0E5F88FDDEE03953A97BCF473464EE216293D360ED0
33AD04799EB9F1BF212DA7B9CF1F5E648ECFC0AFB4D935B09F36A752451930A1
D4B662BC214513D17885D824D250AC3F036BF6377691E603F12241E2EBD2713B
E665433EE1E6728C071FC10EF177EC0C2D3AAD49BD2A0BF511A722FDCCD196FD
BA28407F265666D7579B49FE701261B42A5D51AF3554AF92E3AC315C77801AD8
6690279FC8F5305AABABB620DB0401C12A1E3B216D9DF61BAA41557F6C61D3B4
B6B0F9049CC8D0A6A9BFAA49F87CC47BE9FDAB76B5FDD17A778E6F426D125C19
1D4DE3EC851B9D085A7DE7FF16C332D8FB9D752C15D737CCE72D291D0FD9AB77
19B670EFD87E8903A2BB3B04FA65A9CA4059DC259ABB70608D69967E694691CF
16EEE2CC15D50DF45AB5BE7639DB8E02835E748597CD52F41C780BAD637C4D75
8BF9493F6E5D85031896D58E53196CB0D66954C6BB4B29B488866DB16E261A7F
6D44373479B5F1E64568E31A96FA52B2FF83505F7B0C5A3D831063A5E574DC73
FFE9DD89032624D0808ED253F7209074F9DB11DC9D8ADFC0905AA0701D26B84A
7B90905365B60A5B1E7E1D1D2C7D636103200B4D6E3D8FC79E1F208CCD592792
059D48A1754F57377C6E95AC3B74863596FA34250C38904577C94C989E245576
5BFFD8239DAF82EB4ECFFED3E4F8EAE6BCC971E8F90FB858D595C8041B488CC7
AB76EE17A9A7BFC141C1092F4FF2D03D768248415404DE0A9329325F8440E845
909F7FD1AD91ED76A54B8AE8CA8C2BE32605CB8F8B328C251DDC89D151D7C42D
574A30AC6EADC6D079E34610D6C1AF9F5E3579B7D87F9685ED49D86A58DE82F3
0D98EAF5063E373A08ECEA33E7C1F962C83097C152E0AADD5AE7C993AAAF381B
3DE437B7DC70ED3F2B52631092ECF80CDD365650FA499239CAFE08DB1703EADA
538A8E13B919DB9E84840B3CC9E2A25863D89A01934A2AD4E4F05CA3ED57BE14
CBF3047578C39FAE41DF0803DF4C8F6CB45AB8FC6A7E519843DFBA30BBC0D662
845F6081B538AA17D2705CE28EE4ABC81450BB891A01794BB5CBE399093460B6
2779BB0507B6018A512C3A5633BCBA81AA5F272F65054E97BA7519B68ECB6EA1
93EF2B2640A461AF8805303C29C5792E4434DAA1B740B3645B68E1E91AA1F132
4BBABA6B5866E245644867FDC1E0A5FFEF617DEC19E6460920D5B460E68E541F
969497EC14993E0A16A12D1B62257A624A02D6A7704E9E339CAB91B1DD1458A7
698ED61F4CB1BAB0B5133002636BE767E34BA34584F0376599A2A5832F24F078
EBE7C5A8268E4952AC235C9B100F93A00867A9F9EB6A096D27D9B98B7AF157E6
936FB0AFC41E79AD5E348F61FB6BEB5EEFA015A9214924FDE9C2606C5ED85F8A
C1BFC3C7AA5F83423176F8F331A582FE0FFE715E0EBAF9F88CD72CFA1A56FDB7
4AAD3BA85191F7EF80E6164D2E5D91C5DF3438B242B6EF17A63A8BD3F5911BDF
09C2B64EF1F02A1E3FE7D4F9186F7E6392D7A02CBB287F1986C2493AC089FAFF
D2379B78B32894841A1AE976891D6E8D2B93E6208D655541849A8EBA42F17876
98CA2B680F92ED2DBAFBAACCEFB937C4E3443D8E45D7E9C38079F2E6F43F738B
439A736D09078B9C0D7F2183C8526DE4383F52CC9FD243D5383B9C32BB1D5C70
289BB1AE0B1940661F0246B4EB4BC2852006E9B59421305927CFF113D64834DA
9BBD06A3D8CEAD1502185D6A115F5089E96E7AC25A0BA19F8505BC0F9F7B5B34
A6469ED2FB9F172F0B67E59D5BE01CA35EE7223FF4C11DCF1BF945DE06870ED3
0CD668D1A401533A768587A1E372818E63D589D0428FBE79CB99ECAC9C2A8F84
DF7D05F860DF4D7BACCA1C4214DFF49889F9BC547E0867984C0E944711C775BE
B94008029DAC483C0401947D3CEFA97211A86C513B0B445F283A964EA41645B0
D415144D73C610CAF701D727C39EADC28EB10BD1615495CB93A8D3450396489D
4D5492B06242AE2912C18B0A316B3E3169C2E7D60393C4E5F64BC63F668B70DD
F92BA20F5D1C8D053D34434AFEFFE380B34B230CC3DC8D99B0D5F771C181B123
BCF75774BD84253464211F73DA83048C1AD289E0396E53B0AF9E2620BD14ECCC
F1895529ED8113F9F112C1AE130D0AC11852081AAA44E163B34E1C6DB4F4DD84
3E637DBE17D2519ADCCC1751C2033CEC54AB3341624E928E9A8E8ADC48E496FD
8084329D439BC06AC114B20EC636EB5784ABFE8E3AF95182375AD6697495623F
EAC0684B853E2A5FC8549532329C5DC0740B22927D1FE6155AC03CC25DA1653F
7E82AA877C4DCD4EDE5B698773F5AB35084F7DCB4EBE6CAE4E35FD61D65A2652
7DB61376567304B43BC714E2334EA79F6D6D8F6DDA808803C7189910CA06B229
B437A5EB8CFA72ED6EB94F56CFEFDB409BA257345E915BF1093FCE8FE2E9A221
1C9CBC34825910C3098AE4C7592891625B89D48541DC0CB093997E0E3E0E5EB5
63E78683E61EBC8081E3187B0DDDFE490E965C1F8A9B699085533306E8A20723
67A98C4E2D16A894DCCEAEB4B42AEFD3CDC5D98C9652300C2E9C4612342DF1D3
6850DD67BC9FA3BC0C1623F8F87584F49841C7A4400DF96A343B9FAC68A04CE1
07CCC21DCE943E77B28EDE4734F09FC94A341BA28B19CBB46E5579BE6AE9D347
917A9D75F0DA12C8BC910449FBCE7CF98F1C9DC149692169634C838AD544E29A
C142200855E6CDB6F7BC83E8B8E3A2DF5988ECDF1EDCA94CF7F2EA0612B985AA
1BB8A70B634B582A84223352DFEAC0B03E9EEB43541746BD960295B947C701B2
7F7C539C47B0A2FECFD8B025C2CDDE3582CC143709B90D7C6AF09A44134C0D09
F5B11E1E2A94B6E03B2A27E7325C8BC591C3F2AABA930D2495B0D09C580A64CA
103996FFA6126BEFAB21EA92D0E649599FE07D3E3E0CDD576CF7D3E9C6066161
A65681BF75D33E74330828A95CD05E0DB0876DF5EA1867D4AF882D6DD95B605D
71BACA0110E592C567EF824562F4EAB0F079DBC856616D5D3FDE014201FE49A8
B42836D48A8290B70E7C49C35E6476800674FF9B6616ACEE81FE1E2339277ACE
3241BCB02166F5899AB7DD320303BC7999CB9CEEE1B95C936925BE2164DC1544
38F8B54EC76B3566AA05689F828472C95042B4E88B99BF6C4CADDA745D38BB2B
579F13B1B6226597FE6C5C65AE88A69AD65530856987A051FAF3BF166949F972
69EB75F417023F4DBB9BE6E7BF6F7C247D5C8B42912AFB335D3F76E1D41D9CD7
6E39D182A804682DB32A4DC1B7003CADC500387AEC983F729F4F87145DB5E1E4
6AA5F0DF27215516C50BE417BEB7DF45AF9124BB3736E5F26D1432EC751FA3DC
B4EB639AE2B0D4B2D3E9405160D65BB7BAEB3C310CC67FEA9EF045F92BD7B176
08436CD3CEB84EBACD7B538789F4FF0E8CA3D46994820AE2D49B61A5C1C2A955
ECF31BFE7ECB784017CE0EFC2ED65D79B95414D35862F44B52BBFCC664AEEA19
2C9EB230AA2C060BA17D71B7636BF52E5048631477AFA35CE7AEC2B74735B2D0
180936F6747B369AFFC86C239C2E0DEB14F6AF26181D5DAE9306DD67737DD999
6D972920E8B822A84F1254847CB52339693744567F7F8CEE4B1F067B1D9DF59C
F4005780230761BA93A732389325BA6AEA45D170E70D61ECF36062057FBB1ED9
156C4E2710C8447779C41EE5A4FF4EA016E1F413162B1654281CD5BA7856BF19
DF0D14A9C667F9C8B471E02A2D0C798747EE3A98837387337A6D9E2BEEC25A84
24FBB68EBA80BE8051F4E08FF8D54608410DE7D67D3F7905E61E56E93D043817
A5128DB2856C6FBF431B1A4207471FDC5E83A9E73E7B1D5F591DEA4A35A39A01
3AAB2751EBF429297785ADBBFFBD3F0BEB07E207BFB3EFDBA4DA9C2C24603174
29F1979CC3B485C70FBCE313A2119C0D745E30B80065599DC6830D49DD355857
4AA19285EF2F9806D3E27724B37B264C07F0EA6905368D299A255A622703EDDB
D9D7DF66F4377D658A777A5605881A52190F216F1990EAE0FD9EEF451FD58C16
34A20CF5FB679C5F6D67F6C348347B55C6D1BC0B8F25417644D6226D320F230E
20861219E13439E4B448316CA4A99147ABE8BC3F9403DA86AE09D87914E18321
79B54D00C327402BAE0A79037211B449FF2B05D19FFAF3D7EF9780C272AF1CDE
BFD65911072311B610A601E5E9DCD9C44EE70DA1577AEAC0FDE82109033503C4
A33DEF69FBE2FC07F5B195662D5B962CF38AF88057BD899211C13A71DC5EADFD
8F42824FF3827338A85C1C90C254D3213B050478BFF18A183B68D98BF7460895
A0AE0205B0D23E11B48FD82B984D6AE7562049046C89E0FB6872B428BB79DFBE
6A48F2D178E38A5343BAC14CD40D11F49B15D5BC04A1B4FF67E95FC2C2273BEA
69FD46D002BB86978CA93600C6F4EA10EAED3B1C5A250D2D670BC20873909279
766D5E5353582FEDE995C50895FB0854B065E6EFBE13D4EDF142004AC868E05E
515D1744817BCB26CD633C8557AF2DB25FA1575F01DC75FA749597E133C98A28
0E1BC2B8C0A543D3E171695ED5CA0A677529582FAF8BCCC094B8747CB895FD6E
7A797A150F716C4428B583D4998EF16BB3791DA831D35D5F37CE6293E5CCF2B1
C3730D33A21CDD7F3DB57CC39B0AF05E935A614069343EF71DDCCB89D6111836
0B1E4D9262871EA6B27CD0C1DDD510833342E4B2C6F1E23E0B07CF1A57C4EFD7
04766B5DE021A1CB83F48BE9314E28C7AF4819659BD575BA5D6F9A44FDFBDBBB
172BE3A6AB365CF12F7B1CD8464B80311C9E1985FD9BD6531B204D85FFECA549
15F63B8F9AA41644E70A12618996EE6D0249A55519B0FFDAFF5ADB5C68892EAC
58683C68D66C3950D8ED022D89C7EDF88BAAA287A4F0BBE95A882902C5BB001F
F37B2923FDC939CDF12FAE99E3A287DBB2FF09D574E44A162FF12F81853B3EEA
D3CB722C9B2FE4AC2804542F31A13F8D9795BCFC8773F4086B4FB7C98D15661B
6C78738D1AEAEF779898BBBB4534795586F1013E233F5B0F0E78339566A7E04A
38A8A1301F2CCD14CB5F0D67A27CE7CC78F9456C7E4E257A7A84107B268EF55C
1177B1A388845D0854A205C8A64286F3488550C4AF3283BB13021AADC9950ED2
B1622C42C175C34008ACBE2B1D7603CF661A5B2D1B477F9FFD8A1C9339E1A408
279DDC4DA4A489F5E81F5931539F5833B268179AC68DBF04E5BA1425DEB35C92
22E41A7EDFDB9559043C1112B1D789B338F4DD5BDE5222BC5C423E9EF6EFD153
D09E435F989EB7CE1FEC9D313737C26D9CEE383907EAEBF68E84F823A9A8A492
C8ED3913990E227BC460275963945A11552B8CB1457FB8084F0B92F8A21738BE
F3D95BF481B21011FDAD757E7FF6F3C307B9A646CF1248BC260627C9B60E750C
F445A46920FED93C61B50FB17F6E211B52F2690605C2B63BDF89ADD135D77F1C
D7797A7738F03EE68919CFA6AEC68CA03007C9141079E4A3C30562E6519AD599
5D67919D9222F67C7594AF5CAB5042F9BF679958C375273DE7A579CD56AC6D87
ABE79065C084D6457BA8D72FC6181B413784D95EE98012F194FCB5EF26F0E309
8DA43E8F43535992A16CDDAF0BFB1B539DE7F2F23B8C83F41654EADA3987F880
6D43D54872142D45A511F0898BCBF1D4066E4C519F3374DA68CD751A7205D108
CD41433ACB245DF3947B645681CE1E91F3135C0DEFF5FB78B0165ADB1FBF332C
171FF78A5805E499AECF249C5214C42C992248AC1BF774C7FDF39DC4BDD8D485
A5385A99E686ED62F5C9FE0FEBB631801918F86D6A36D898A8B952C93B0571A9
A24C25F9D3D3490D491E8636DBECD4E6B6DB17BAB270E735EED774C178A37519
326C37C25000664EF7C1FA3B47B4E23329D13A7DACE29E49C4571AA20F4799DA
883CA5274AD4A94E78AC7BA96AAB3B413068B58AE03B1782506501D71508CFD4
9662A0594CA249247F6A59C10AADD7E12183F73BA30404A03E9AEF5EFD7B4088
D7E32547056074A16682F6285CCA19DE7655F77ED17C4F055CAB7316A8FC14E8
4D76F1701833F7A2444CFE8430E3AEC4369F3FD02CEF45752118D8DDCCC3ABD3
FC50F46C6CBA21E3DF8ADEF3303674F090E16A66458584DE5152107558960414
37583652C244D688071444C6EB0451E376B71C19DBABEE18F79E34D30004F0D3
3421CBCF9F1FAEB4E3818B92EF73D235F7AF16D6964D13E360E8105D3809B750
C41AD61DE59AB8AD284079B3E8C01BDBD808A4DB60D819A40E1CA415E2E75683
0D09DE3655C4659A406CE6F9F3856F19208D88A70D79BB4F32988F78A8C30DFF
0E63F51C22FBB27F0B4DA43039DEB78612FDF47B05476C504EF844C1AC0582B1
2FBFA135B1132FE0ED374B620E6F502898AE8A113BC275810A8B9ECAF86B47C9
598ED88B430D5D18E478E0AA0A217B174349A177768BF0AA1093938A1C931B35
CF9A541A5286C24F5C08683FC01E8857EE45A75AA83EAD5D4E16672E095841E7
40478ABC32EB6D7E5941264C318470285432899A410CB56C0B0C1D3C3332A1FD
90ECE026DEFE73118505851D43EEA1A668FF1B7B51EC6D0089F1A0173A03465F
D6804E0D4BD51A8C53000A016C4AFBC11D531C243A550B8F50D1C3EAA367898B
D71977D269ADD2E44B8ED40EB912F0E797FBB9C5CBBEC0DD5E5407F41B47E1ED
A82AB54AE7664A78268EA2F109EC0070C571A86E792D5D99AAD74533A963F7F6
C74C3424568444138C65841BC82282A3404631684010F1BA1432BA7B7CB82614
C215D64D31B857A3660D0FB39A5D3546F560DD223EF835FAD26D41A5A5E084C9
FD797DD4402E7E4D64E7BDE7067ABF4B19736CCCA8BB7D30ABB682C32084574C
84C4F43308DDE80327979D300D9E3AB5F5A02CA594126C8584ACB9F54A644904
FF826A9595A45C0C582B8E55C2C3D7EA7EF20A4753AAD3FF038A93C9D4AED1DD
148B9CCC9339657EDBF1ED585A6A24C6554CE0E291385A3B5B4F61CEA3F4E21D
7627DC1A93A9046FA57BD4FF79143C5C2778F60E51FFD54D8AC79C78D3296D6C
32A92F6E10CBC9AC881B567ED20EC83295482FD723F40968FB6940D1C804F00A
E167720C88D638513356EAC1F514156854B91CDA57FDADAA32A545C6C3A353B5
EF545D865EC3CFEB3357B3171F591813F3DF3C16AE0333DEAE5F6C65FF7471F3
8ECC2E99296024CD7EA52F7A16F4B6DC92D0A14CE0FAE457AD6E43FA41BCC7F2
8B339A8E5430DB52AB40C6337AFA66342E533AD35710EFCF4C5C978B68FAD15F
58CDBE5ECEFDFFF0AD528DBFAA9E68C9C3272F217B938E7EFA9EC2D25DC4EA43
A1C9B0589B299072F8471A2F1AD3AF0453D5110AF37F9EBCE48E1C764CEB0D69
93A0EC52F5AF75F58C021E19E011A12957E3AE506B16DEA494F01DFB94C9C193
F0FB7E1F378E112BC7BBD46C366B6709561B8B7C43AFD723FC17B9528A3610DC
53328B096EFDFCA24264344A2A7CEAF613297C1154A769D4FB589696E8AE0BF8
4F32440A3E9388D7D925909BEDB859A9F9A257A3C54006D707F1952EF3B96DD1
8C5FEE91F6A5C90D259D2D711481546A50F189861C48111D75F1E62DDE53EE78
B3C8E2C8631BAA846364D7DF37B2524AB29582D8330DDBE94D7E52ED791C41A0
2142FD8ADFFDF0AB0DB3466F8967589BC3200D7EB2E0074DB20268CE07AB01C8
1B975546196AE6A33E8EBF77871CF4464AEC5453B37DBBE947F56CBB9BD306C8
F6F0BBE0FE230ED6586432771A5C7962402C6FD6A5E7284D04BAD22B19A6E4A9
4E2A84D5CF17FEBF5C851EFA8C6696A3C2E6DEBB119F28F7FE184FCC6FB5BBF8
233BEF15BF027A22A43CA2AFA1DC661DD427050502DF14915621C42F6DED180D
66AF4DD63E13468CADDA474CD7DBD571A490B466A0F46EBE2170790DD6EE29FE
AC0E0858B55AE923653E20921A7CCDCE51B50B9B3E145B1C06B1766DEF32C2AA
9618C84395DD56C576947D5E72186F546012CEE07DB988702BC263F67A8EDDC5
856E4D3A3FF8605AA30AEF916DF6B810E7994B3DF4F6B4D1BAE3889EFFB695E5
45B44051D150D79DA9C2B0F5911D2D41749A9428807B6124BCC3AF0E2A1D1E6E
EBEC71BE59B2595CD8406B19A3E02246E69B9321A0BA0E7E51D1074CEAD771FC
A9A47C4A2E51FBAB40E993D114864D5FBE4EE6AFAA2F3E218E0687FF81017F8A
A1BF1E632334587BA22CC8237BF9EAAAF2E96A1AD10721FF1B6113A8FDA5E1B7
F03992B0529B4EA2C93E174C14EE35B93C869A3F021A60AFC0F0EEE99C7F0CE8
11BAAFA34B74B73D9BA3E6384CB24A1EDF6B80D446E277FED5C9383FF68572A4
5C2576442D3E481FECE7EABDBD229EB1B0ACE2F53DA45B16B229493B35F6193A
D21F1937F88A4A47D7E8BF180138A13A4C817F2CDA01632698CCF4788ED88052
2EDF526F1CD64CB312848922CAD456FE546DA3E94C569DF96BFD606DC178F2FB
FCD3F43FB597DD9D5E56DA733E8DF65917E4EAFD1852D16227207F9796D8DA3F
BD549D8686466EFC54DE2B806C309CCAD36F1BB344102631D9D4E8CFCFC50B3E
3399BB7F7B74E3D6E74DC5EE6BCB12B66F4979A1C7D266ACBECF60B941A7846F
0DA0D40CCB373EF62AD8F67A54FD087255DC03C1B1B9E2058548323DB2DE1988
C8E4F11D50DB3E3B078FEF4C650E726CDAF3402732CD087F1BDAAF17E1ED9F96
F003CADFF2590EA71BBD869AD3E21312F4B92AD2D3105972D4504C4AE35467B4
5EE861CE075829A2F00A6931D3007E6A2959A035B42455741B3085AB69BBCC7B
12216D9E6B704515DDC7CDE488A93F3FFB38CDE2EAE52CC3C7D90D1BDD136A2D
5A870DE727D0D1AA6E6448BA2D6BC3DCFDD88F77E33E35D19D3FC97B3B907779
E8B57ECC793CC10444E5891308703AF6AE6129E84796FFD5572FC589D12FA546
C8A48D791209BA0495D31783D9D3BA936BB8D27EA21CAC4825D45C3D637C629C
FCEE057F012C0D44060B479EB5449EC5DDA0D6E06113EEB0FF56DCA4B75BE3C7
FE5970EC64FD6C41157F841DA08CB63ACE45D8E505CCE96442CE0E5B7C7F4FEF
BADC2DAF80C2AC95CBED2DAF0947E4ECE2AA30AA07B9BDBAA7282DDB3D35CAC9
9FD16939D59FFAB73B858B21766E2DDC5E537235755065A0436C9FEEB5ED40F4
7F24A8CFFB7D9B52E69B697DB8D31700E738B54FD5A7952BDD91B0ED6FC6E73D
0136A23781D5C53B71B11A5ADD6D56B0588E1C9448D16140B8A521BA01E1B19A
AB1184F74FCFF024419AD1DBBE1CB2A445AF38AFCFD16E29FDD58EAD98B40D5D
1986CBB1F0FC6AD6AF0F6325636C4B6BF67621E6F501D3C5417EBDEB4188D58D
E5970D7EE6D8A6F4E1A35211E34C44B04233B6B54B84104284C2B74DA8E57E92
FEF3E6D9A6590A287426B46D346BA5D09EF0760BE0BFE2701FA7677B8EBB5D36
9A47CA7AD5A265CF5520EA2EF16CC3EA554549A09EF7E53CECE323E1E3067C11
69E6BD9F2BF2D525A5C33A8C2EBB2D9FD01D847E1B891F9762E7F4AFA2299349
1999EAF3DA20D5FE9058297C159060500D766B27F5A9DA27679C06549A706A67
36A4CEC18439FA10F4DE09D835CD324499A0C2DE0400DA5D011629C02CB41BDA
52A54958DDBF85F00F3E6B99CB52CCAC8E3169EAD230E9FB39D9AF2A092498DB
94CDF50F531B72696675243F1A3C7CB65C22EAA284F5BAD757B54E5AEBE77339
325CCD424E0DEFE2E42E31B98D995F84A4684398DD9090D5A95F8A49957A035B
1BD96BBFC638EDA61CE2E33B1087109AAAB438D408C74D5B9119337A9C87BA7E
BF7D1FE03024095B1C374419826937F5419887E12F338AFCEADC3557F7357994
AB7DDDBAFDBF50BF8DC88A7DC1E9C1CF95877F9F475907F6BBBD229AF6B88212
6A9B15EA79D60714A070F63A2EAAB2984765EC407D5ACA07A61AF59FD8A687CD
54FD1EBC1E0749276C50501DA3C9614954948A76AA540E6543C9B9819EE178A9
A301982282BEDAE14864E4704FA3D0D1220AF5AE775C1E8C81B4E3F92AF9A929
343185077B0EDD58C777E5634D1708F0B249EF8046340665722E08CB28ADA29F
9EBB21D732533F90B6D936AC6C5172E7FB6387329CAE4E85BA58DE4998E28F45
32EBECDBB12F95AF94A05DC8BF7A4C359D6F97108E533D50B125038D6F3D08B0
DD1AD7425AAB6FD11D4E2E2AF3D43EFC31F169B149014BB6E8E6BBBA9D83E1EE
EAB2EAED4128184C5D6AACCCE539ACBE3CE5400E91778ECA8584C3FB480EAC7C
AD1744B46FB0401643E925F315A313DA7B10CBC4B044AE7F359A123CD3A122B2
A534A5BC0075736F487117CC10B34B7539A05B693A32C4B4BC9F487A097A60EF
08D7480F99E075B02A197639A9BD9A51A9DD215E719037C8EA530C0E8587314A
ED70D3448673300B2FEA765B68E59EA1E36915D77F7FF966616DC77D1CE3B4DF
9A4AFE820E0691A8494DA2373BE06054789F0B4672CE13E59D2E46DC6607081B
E888EA102834664FADAF6D4A1F6E34A8F3AB339D1D8C059FD58E0FC21CEAB5E6
1251E751535DBFFD70B93CE18653C6A3C822D68A6BFE28CD0B9ABC3CC7EC776C
A00709E1E31529D36B30E19F5D5E2FC7423941BA9C8B3C6EDCEE175AA6049957
C58014F2993055F7E51AC88043054F0055B8803346B78B842EE74569522D360A
B2C042057B1C5A9B3B5077A43B6DA6C32D0B8B3DB4C8101BDAFF7AF6E0E6E181
AB235C3C2671779B20189C81054F5EE5163BFF5959AA0AF255EA42BB99539BCE
95C5471FE018D4F0DF7B8DBC223A5F5BFF0994FE46CB0BCA847B46C15B447A03
F4DC8A91F6B4680329763081D8E19B692E0B0C575F230DFAB3301AE1CEDAD1FC
0012104D049604550F1CF77FA455D279A4208480AB446486689C0DE4FC302A76
19A3BB5E73C62A1A1449CCE5F2712E4CCE21C3076FAA81632895053840C0109C
325EA4D9D115EA4100687CE18D4D00E5B96888DE6A6950581B7D8A252ABED541
7DC695B3A905F0C8FDEFCAA42B5356A5F0BA0EE1C6EBBA1EAF951A90C16ADCBB
2581D37EF12CD33F914F6D826658866EEB992420F5DEA6B0FB13BF37779C3E46
1E6D1115457F5066257AAE93500F4513C7AF12A4DF7C6F55F266E46D4914CD9A
91EB146B201D1661F98EE74BC9078A1FCB08778784848816E0D512E024B7BAE3
4B2EEA9BAF7CAE24442F8298C75CCE7472C4A864120384129795C994768C9836
A3BFEA01CFC082859CA8BD3931B1DC5E6DF5E4BB90D2A38F6F1AD6E9CE9E1B8E
D8C3E07CF9EDCDF78AAE0ECBDC249109BA5B9AFD252533DD4BF7EB8C202AC939
54601FEE92A0D5BC88D290D64C9316CAE60E6605BF4875103383FFA32BD9964E
0ADE352E5C7E3DBFA0B59B7A6272F328E3CE336D7EED0F33D2B751C9D2CEEE5D
0023831238A8CDD5D184B1B83269F9F76B9403E77DC4B5CD0FD9A4D39EC820E0
4AD73D30EBABFBB0E6011CAF904D5E8650A450E83BC96CBCC886FBE99A68EAEF
6322DC683BF3CF89CCA1BEA4780218CEAB5AAA407DD2C362727BE5154677BEFE
9E322E707F325C04A926C85A92793E48EF26FAD8E80BE18454BCB6545409526B
34D3163B703D822E9A11B7EA0A261228998446B5F2F994ADEE1AD4C201DB9BF1
4F792BFC86831D1013A81A1763E4217BB33133C9C799FF33D9F2FA155AD5D9F1
8B165165CF60E36FA349969CBA4A621AFBEEF65FEF299391F05270BABD841282
83D7391ABC55B6870DF7B87462CB45E7B79F013DB7CC5905926B4A06992B2C70
C4104B570CE5C3F742E148A1B6F76BB7D4F7C096C46FFCC418EDB70400A3ACA6
87FBB3F42A8BFE02DA93CFAACE9F5AE024C29A413F842DBC9DCBCC51FD2C2CA1
319F6390F396F68748BC79BCE45875243C45E05E5A3119F6A4307EE35AA71904
6C49CF9708BEA26D79301F1DA2391514375FDE21A52DE62FC4D7F5F902BC9327
8DD9C35E30897AA321F31F7349A83B9567B83022A1358C338C428FABC966C45A
43F274D7971313F1B0AF141013647112E7611831F21B134BE919661593D6F9C1
F764B36B43228D6F8B837BCBE2861BE7036B1785BBE305A90BC46E86A93C3847
A1C26BAE78F8BAFE2BD48E3196C877EFCD8E545FE06E45B31C63C3C6723C572C
4AB6F9EEAFFF180F1DFBA7B755ED1A26C48988B83F0DB8FA05859914962221A2
28BB43785FF8DCEC90559364A62992AB7E90063CAC801F6A21BB2A3C87D78AC5
AE33B8F724977ACCE65265271E6E9F502CF7C8A8A0C3A9F8A21A8E07374B3FDF
BBAD21865522296742DB2E0D0B89FA7AE4AD40732C0E0F63BCF1AF1B1DCC3C8D
7DB2BF1E4553303E799EDE30DA36627228215DBEAA497D7A4886C3E594585F04
3D4ABB1578F22810A2DA4F1022536267C76D939DB4981BF786405F9FC6683882
68AD0729D792CBEFC04043A257C0935ACFF4DC4C2848A3C023A5BC35C810CAE7
9AC034CC611E7181897AAD031BD279FDD4B023A91B9E74E9639514B8CDC24CAA
12767839A21F13DFB01C7D5AC3EA40EE79873C525BB84FA69A96ADE9C4FC6D9B
DA2CB3B028E14082B0D066213A50027032900DBC438AC733E50D0D8930E4C88E
E9E6966020CCE21EC427679DB04CCD5D78CCE17FBAA141A9B842BDE103D5AD66
D50DF8C2EDE5135E8A12975809B516A6AA8CEFA36291F0FF8262F3034D405FD1
B95666FCE57AE9E258F637D7C89E88D915243B61E273DB8A0F376E21BB378D95
A399DFD3C62C046E04BB64E3975DCB295866E05DCCCA1FFD1990F02CADCA0599
77BFD302823257887912E632411AAC367F969BB00EBA162B7BEAD8FCD68C2A4F
B324ADC7771B290C0575461AE84B31A4FBC78287E26F8D94F69C46CA1D1623BF
38390A4B0BFD27B79103DAF812D9A88009490CAFA174A2513C3029A749265E38
39CC71C4D13FE2F2653A6B42370D1460559811CD5AE9215A60EBAA395F03BEED
A37FDDE1963A332654B6DF1C3829DB22E0319502085ED1482AC6A96FD7BE4A5A
10F473A7F43D57EEC3C096A574703D77790DEE9564CC85C5B97F3EDE8609107F
7B0FEAADB2717BB729CFDECB25A6FE22CD4D895131E7E403D48CBEBE85E485E4
DE120A9A4BB6AF3C145C29DDDC28E70EE6711150F831757E5B4D1ADC4A70AE4A
B4B07FBBF15FCF63E6F24736B91AB656F69C5F23553AD1A6D573DF3E8378EB6D
77B0563C18B756A1E840D7EE6E02CEEB4215B154989E1EDB07019C5E192C228D
E20AB3D90FFB8BE2F427D3C551F88058729F98C18836C8C8A68423957D847D87
BF2DD85FC98B613DC0A07E1492B14E4FCE36A420C5F9962355A62E202A3062F2
18582CB4B2096075EA2AD616792C7151427D714EE19E23F5DE4723C156ABF34E
C79CF1D9E1B4C08ECF579999085E57A7E2612F51A4BEED4F48F8153A79671514
F62B454C42462C57FF78AA0013063A531594CF25107F3ECCA5CDD2BF1B122CFA
C257A6E12B18AEEB8483472E379631AD2D0993079061E4FFA49525863519E5F5
1CD00C614EDC8BFA33B6DA5B6E35825C99CB7AFEBD4CD8A08042756423519420
893FDEDD822E596E7FDE26B64B50BA29D0C58F16EF28D1B5A6F87F31440306FD
ACCD435CAE9EB435FCBE10FB886181916DF85E43AA9C4C8B81CB3F93417E7E31
F6749AC229A8F6F197E4292251C142C9CEF8E72AA9F76A7F141E76176EBF63D3
0E313E12B88437715DF82BADFC3E485B7416E9B6032D63C282A5067BB921AD5E
8C734F1298B104B1F8559EC51543FEE68248EE570BC80775E087A23D9E5CC974
8248B773DA32A4BCBF07DC6A8948E521AE1F561884683DB3DF7F925AD99FB9D3
C2ACE546CDB0835BC4726C4B6FB675D3DD5737F3BF6AFADE00A7D4D33164FFCB
140BEAE2F36F5FF0C3212D28E016FD960D13A62AB6F7DCA719ABC05B55BD65FA
433872A6615280CF9C14CA2DCC99EDA07E26CD5B2FC2A0D2AA6161754B00ADE8
6298D38F55A931F04CBA2DAD9BF93DC98D53119EBE8B7481B369DF47921CDAE6
25C2B99C0E083B1761A9492307914DD527B672A615A827329D2F630E7CCAAC78
BD3BCB522EC2F19C624B843D1EC8511640F8AED1341B37D4FB65A815E3040621
2D00CAFE600F82EC709C89D14B7714983C6DC2A13B0515411957FBF5552FDF16
3F03F39DCBADDD37E78CE3425C14D69371A2CDBD7497CB8F7DE16E342DC937E2
1D50F20C9C0D9AB69BD31524ADA0EBDAAFA270EF15D228E837D49F92DE22B7F3
09531FD663A1EF5FE61D8C154F1272181C62FB3368A1974E87A5344E6D6B9C58
6E0C9145EFA2D895376D0268024023112BDE494D95A079E3A0399BD4D51A217C
870C34FF4E6D134C296532AECA69AE895A386661A5238C63897737302723C83C
26391A9C87FF4CBCD521E307384F92E676A6C75DC4D109B16B21FE8F52B5D2D7
811C924BA57E599B27BD4E948C4EEB996A5744768D293608470AA4B0002AD4D2
F588225409FDDF38ADB2713EA31B9B67000C414D728F9215E6327AF2FB387200
4A7592474B4F20358D6A32C6ADC4CD216D3D674BD59210DD96F5DE2A64E28D04
93AFBC33359DB973D47707A8993B36CF1538B090ABE88932D87EEE4E45599C4E
4F0943F7F3276BCE10BB744979216CCD50969A799BA68D8607667950DAE7003E
D3004C6D40397AA055D9E2E249EEB05519D671C34038B98CB9B93B418825DFF9
AF685640E4BB46FCC78CB85A252F32650328F603A9E34F1AE4674BFBBE7F1C2A
96B36140B1431C36557B76DC6FAB62AD2170C253667B2F32EFB8FA59CEB4A041
213F8B3E092DCC311406964FB3214F75CF3D316D4743DAC6F3A1E6EA3BB694D9
7FCDBE79E139FBF88C9FC863F945178198A19781AEEDB96E285011A846B5FF5E
AF7D7D55AAC4B9B98A31111A192D73584B60E9D77CFF6B9E675DB59BC036409B
AF32AAE8BBB726F2CAE70E0632AC8BA8942220261B5DE9159D6C3AFC44590DE1
8C195947544FEEF66886F80532616461C51DD42B88940B3BFB4D12D0C1DC8924
421443B0BAF7401CEE83DBBA31A2808F8AB6F864ADDB5F2AD73755648EF76B8D
38C9C5D3F43CA5432814EE3D8C82C89B656822DAABB8369152F86D165DA5B3F1
1E302FE66B6556A39281803D8B25B5B1A49F380027B55BED5BF1F284046D272A
A06B57AD595AA8C4FADE674C654F39C967E8729A4CD8FCC760A88178805DD47C
3240B0D4A30ADDD38E43435C7A5FEB03B6DE438D3F7F62753780237FF36D1184
03655FAA0DE341DCB306F8629D511C27A88F3E63051FC57699397F752ABAAC74
10A1261E37F63DC8D6969B503A7BDF95580D063998C0220DE642E162FE6207B8
CFA1BAB3C220A03F5049406E85E4007E67F81FF39C67BDE562B7810273C78321
C52F4D231391A228A56FA24DEE51BBB0D29EAC47360DC109A9083871E9915A87
90FB546E0207A64CED245406D08F1F10F5D5ECD622DDECA832EB995E27D36E12
793924243F372D1C28C70DA96F3BB4AAA3AF823FC9C38278ADFF967E79A45833
28944C6FF7AADA5FD02CC0823F0456757E6DD8A01BA805A84B066484168F9AC2
46EABA6A8291983C483393938900701BC03C33CCFA5DD80F4E38746CA36F09E4
C89B7F6136C7B07CB58CF05FE314A291058033FC480DC1F11A0040399AFA4B95
8A941ACE801AC7B22D6CEEDB1DC252214E44BB40DC8EEB58E2412E76E5024D1A
93666631B77D991F4DB852EB3B4C847380FCD582A3B5B502DD0EF2230B851AFF
D9B73D3828DF5CF0CCB075371334AFC14D4CDEF4BD0A7EAEB011B957DA972D38
AFBEFB3F0FDC001DC3F849947949C01E4C7A168B37F0ECBB4581BDD5EC13289D
C9D8B2CCE898EA688C06768C18342761E675CF353974314007C5AD36958D5E1E
8A825388E7948FB5A91174EBAC1C20ABA706CC39AB70258E0CFE1E037570D2D5
1BFC53C2C061509BCC08A8DDD6F463545231723983664AEFE0C59EDAD46C19E2
FF76678EC9D740E97E869E632EA650F56FFF45A3C7B7EE1A64624D7C0100D7E8
981E6544115764FAB507DE5904C2F57269AD8CDCDFDA2829B13F3E624839409F
DA197E2A4734B255012A6596221BF63EF4F90ED6D1A245311D264C7FF55DC861
B75CF9784E4CF5C8BE822E0CBEB7DF09747BDD19FA90FAA8FB7B2DA909BDFBB7
2AACD8C0A730B56DAD9267A446975F0CF5FE0048F695F20E56D0A5C4DCC6CED2
44B1A929D83ECA41E68531C8328F54A3734606C589FCA9ACCFAF57AD3E5CE38A
39399BBDCCDFEB0A2F60301258DEA76E8C77B55FF0D5649E53CC87B44A842216
B1BA60B34AE5F0DC8FAA9573D203960FCDA3D378C69A2C33436FC8D15C5210EA
167D668A527983E5E5441FAB453C9CACF5F6201A4FAB452229CB1B7D1BB67C3B
DFB3F084498FC495259CA247413989EB46D196B1A6D25072BE57B86EC83D4B82
F6172D9B3A7AF1B9EF59F2C2BD5B1F09D3BD9A7B3D2E45896C35AE57F6934FBF
A49E212BF4862E2047192A79DA51E75CDA538E896E765B3173CC036BA1DC8D78
9B561B5C464CC870C0C6C874C8F3AFB99801EAD7936896E9468680E632784E5E
A7D40DFB054DA455A9FB7C655F4B922A0D193092887A4023739EC8FBFEB9FB48
EE06CEF975681DD43DA2CF07BDAFADA5FFBD5E799568435C9FDA894F70806120
0D2E4643A77F76E8C8B8B2D6F73F25D18694225A1ACC34EBBEB4E1DDE27A939D
DC21ACE14AFE4FD2A82C395C86059FBF8B8ABB4F4A4D2BB5659B9507F434D5B4
391A2F31DC283C4034373197CD241378A827F6C8D0EF2B5704D190FFDF90E8AF
CA0B2E6CD8165B44C498D0696F3218EB6B7BF84759741BCA5CF0CEC20D953714
1E27811C6B33B9BBD970F863FDDFF604CF86C97DEEEF0795B2C3AB294BB888B8
9E4F9C0A57E5D72D4106BD3F9752442071E2B22629933F1C5D2F93D97B9F5FE1
B8F18841B75C5B0433DB0D7AB701DA48094226BD83CDED25A89B47F0B8B7D04F
7E2FDC3D603707ADB5D632886A6E8252602A9B3A31A61DB6565590EE97F170AC
878FA3D1420111A0406A3F69A885E58273548EC7E822D5B4B19C3AD89CDE6BC2
A084EE47A7EC90D485545788C06A821D7DB4649E2F90EE6D17B47047B3CC8990
56D497438F051DB7C1B5E80C2FBFC8F75E2B5AAF6C180767F8B0363A1CAD7E43
43DB25428A3CF00938FA176B70E840CCDB1C0E707198A8EF4F56158B39CEF82C
A387352CA3F3D5CC4D90EC03A20E4FE34FB1210BA2C07F70712880C40FE41791
ACB59703AEA8113D5E5DE00A019BFD87F052C0627EAA77303A371516DD809EB5
34A6496CE2C30E52FDFA5723D414E2DBA44BCED2C4752A8CCFC9FDB12DF6C6AD
4772841E0493AFD5BA889FD3735ACC359988CAFBCC9AEF79D371C86170871C84
C1A3B55355AA756A256A483BB260B5B4F4BBB34E9573800E85BCCC74E4627164
DEDE6AD680DC773ACEE8BCB6E8BB6A48C7F939B538E2F28899E73750670D9C3F
985A231E7FF00EBC80B8C70E09D54501DBD20EF9F6AAC51487D71AB6226AB9D0
C5653D6FE939AB20E9C36F1A762FC5EE117E75DC57BE0AA3996040F8E4505F30
FC8BA64F41AA8179F1B26838D7F233339C6A97A6E25F08F7407C76B2FCEBFDB1
99DADF58D2542720BB9C27E19CBC637DDB27DC8CA4D42B3D16BD37DF76C2AABB
179C674B90BB4185DA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/UniqueID 5000769 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 73 /I put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AAE0FFD5C119D11E5D13743E28D843B0F2EE315A2ED05A510CE53A2D06A7
0C076D4B6BC2B6A928553E7F0FD472760167DB486A777259FA74245EE37D0125
47314DEE4B29E5D22180BDB1BDA7D33406FD340DC3991F50800BDC90F7678EF1
1064986DDA53A77FBE2EDD38E20C41EF86CD50E8EC167344A3F3B3C3BD83CD80
87BE64CAB701C59D433EF83F8CBB929B7D7757BF291C70656007F8A272C7A03C
1C4D75D76C85777BA564D8CF70C74F5DE9611BBA6CEA96C9DB8C633AFACDF6EF
4E8AEBB63F1B32C1F85DB621A3A02B08E7C3C28F37ECBCD041A2A303463076A0
56674EF3483923C920DCBE10B5FE726E2351E7CA97C4511255A323DCCBE3C7BE
330F3BC2C430420B9E9443D7FD2DEC7888195B61FC6DA686F506115CA2DD9F16
1AE932D6E47486B2EC1A01F66EA0E1D88942662DDFC98AEF3000161C5DA63388
E0EE37C826D023701A1CC322949B8326AD04CD7CBF65120FD0D3D8894C04B4DA
6D0A54A01E5C5AE8E9582F6BE23608B73CFDC983C431325D7102E3032355B3A8
BF0CA9AD3831D5D5DA573A049CB07634F55C29319042CF306D59DE5122D3F14B
1E7AB1B83629ABB0F5176FE211F86FBBDF3EDA6F27BA0668165A30D65F795AAD
109F0A6D2C0E5994483C25E8CDCEBE137C3E32C71289CAABE7AE451471BB9E5F
0D715952C88A22A3FB117E5BAC85CF0341C1B5F8F735F0F45A020A0768AC4A50
C98D8579F1FE9C6A3AB295235C34C26AFE1BAAE5DF0598C2338854CE83745CCB
BDCBD5C40D8B85D8566B592D1D2F43CCC5B3D2266135132F360FD9A478CC7220
1E6954A7880C08A9A7BD7FBBD619DAF06091F6D09DADFB2C8C4BC8D027DFF5D2
0F320A0FB248054F976497C8D371EF0E66E5C1B1353BC7E74201DE1CFB0BC3BF
FECCC8F1C662CFCBEE7252B9F22439D1FA4BBAC154AEC1E29257D2BF52F7F71E
5E5E966DFB60FC01507FF34384239BEB600A0D9B3E860EFB4A45F73E44097908
94A8F3B201598EEA083484F0CBCF68D2A2AA7DF8A50C658D2EC0FC41C81E4F01
5F50A959821EEFE5C4F4D9B4E93062E4352FFDEB1BA669C96511B9494E01FEEF
366658E8AF42996423D29111DE03AFC19C7CFA7DE47A9F3AD92DB64699D389E7
EDC677EB65816ACA5ACB4D6977507D1FAE13196F9653441D5D999EF0EE4A4D9D
1AE8112F2AE2A1A3651D6921E186B79068BED897F86432689F3843A06045780D
63FBFF87F360E0FC3CEB9ABB00C05E2ADA7D3A74B2E060FB8EBD8927F0414FD5
25EA31D8159B3F93F487B3D8400056EFF7CCDF6F9079A5EB3D93CD5F22A47134
429BBA3C246A03652A47D236C1D71104B54F634AE9109E44A4863CC1F82543D3
8AF39356E3C90195AB6BA72D11A9841D7CAA1E4B6B55685042DE7E94C5B95749
B225296FADACC788A29E06CCDF37ACC1581A0E789F448F95BD7DED0A252F401F
8E01FA265054651C25F2C7E4F34321F6541F198553DA75211BD5EB38955A6EE7
0650C5D30853EF22B1D8FB60CE3C233173FBF579209A8405269DE78C2DEB5D90
C63E88EB8E34250B1F257BE5C8F7170565A9C0E94CC31B28419ED4F4B4CF3A27
D8EA88F3508671BF19A4E0FFF0DBE254E3C13BF7CC393DDCECEA4521FD2E2F06
74C80FD8919AE84FF31B4331013E4B2A249438970EDAE0F29CC6D3BB2540A9C0
802135C47E45107EB6FA23C074A56C2F27424D8258027C4D2C3BE866FDA0C7E8
F44320E816DA9358414C178811C1818084356CB2EF6C8A23A0B74559D41BD2A9
87F3D270F9B202CA65BB1D1D896AC674A620FDA6E2D354F048F909B2EDB7DA88
EF003D6EA3657B0DE70CC984FB2EE165AE083DB1C11106EB9482DB317ABF3D87
0E19AE2CE98ECBD45699C7A2D4471FA67FE25888173D57BBDC9C243C1C6B4678
D0103A00542C148ECBC5AB84EAF48F3131EEDAF406779A500331BB8B52234383
E95E74A16C149B928F375F7A598E1991521B3A4888FB3B03BCA40048B1E51B84
6D5A4F7D6F6F0B096381151918B511E2A29D8A7EB23056B1B5841089AFF3E608
D2240B377C274F15956A75AD0E0153ECAC37691BF3AB7E6E6F4696A1D672DA50
94039074A220A20EBA25222885650D3B9F972C08B20C8FA148DF607E766B20AB
3AA8C6B45B6DE5457C0CC26C29A981D02DD77C911EA3CB2978D45A3F555BAF88
FFDC24A07683538A045BB44A2C1CF3A8C5C4EB4A1CCD82A2E01BE7107E63C418
4D24FDEE60EBFCE81AD3D600CCEC42BAFC4D4EBA66F5FA87940EE2A16BB7A8EB
11B89D0CDA0B5F0C86BFAF46C6554F4F6A373919B211CEB4D2B1737B91106699
7355F61DDBE81F7879703536F8ED1CC2E4199119E5B5FA5CC3A4D091867B4FD3
9BF3E860041E9D2F109F4BF310EBDB63496581497F343F25704D7FA813E50266
D84AEE2C972096AED7846974741527760F12792F06B2B004618158B09B8DBB27
AAC27CE0DB092F2E1E79B945F5E71DCC87195CBA6E4DD3C751E3FD6A12FA376D
E34F28DC89E213DBB67BC1500C8A47A6A77DCA6AB2AE41FBF161147B5B898AFE
49CB5A20E8EE80884DF3848D276FF37CB67A465F0C042A565324025EA84AB1D9
9A69DCBD456BCCEA827634F257F407087E57978D533DAB029794193D7192328E
2C8CD31585BAF3D0DAF28257CB302C45414687289B9539102912EEC897ED2C6E
AF7130ABD8C5EEB632A853919BF51AE82F2D3E59AD779F0D9A325CEE78768DB4
0C80DE454D67CA6C552EF1315B9CCA409D224C8C211A4440A70E40DBE04FACB2
26C26F2DED96123ACA6818AAF5F9E4C170C6F631CC09C1DEA27A98D77BC2427F
6C9A384B7B52608891F063E016085616D80BA7BAE5CCCE2AAA3220149BAB8BD5
DA106413E7233CC046364E3329A245521FF9BAA2D45A64C936C9437627FFB542
3BA07FB150A7C6398C9E322054274FA9CD9DB3BBAACA2845F7CE9BCC6F832C1E
9A0F9A5BAD9E49EF61225DAACBEE10FAEA3E227AFA299E93CEF3B0D9AC5E70FA
C9367E755A4A1DA3A24DCD15A2C53FCC84697C047B05293A6678C94767D79C8F
EE39B48039CACA4F12BD30B5EFD7CEDF2A3CC811926E268A701EE5404C52D70D
EC96D4A61DBE18496CB347161F252ACF2509B049995066C435D09B1266BC259D
50BCE72B84832AD8D19A8A5A5A15E7961639B3D77DAC5BB5348873EF66437454
107075BA0E2C113FB5854429DD82CAA7B2370DC6C15A3226C63FD190DB2F1D90
3C363313548FAF136CF462DB9FE3D45A2DBFBCB7A0CDF72DF2A067EF9E01FFBE
538B08A22592DBC7BDDAF1E4ED465155B98A7D47B75EDCA4FC36B04A7490DDC7
5DF9B0AF6512AC0525504BD26D4B4E88440C3F5EFDCA2D5723BF7AD1235F1B27
D0FB3BE90D009A8F35E221DC83770C29D638954B40E873ACFD097BDE26517AD2
F37544B1CDF6FFAA97BFECCAB689AF56B74E9D6E4592206EDF9D520AF260575C
0C1FA1C0DE7368B247919C36CD192E5EA497D58E8950C2481D346DE3399E4A7F
7C51288BE245329820A12CEC65B7C1A44CC488FF3131181428BB3834FA22C897
6B158B7DCFC5C0FFA97B95E75E6FB86529766EBBC65AFB43F2C5C128A88394E6
CD625B52357F20AF9A649385946674A6FF690723020B910CC393BA92FCF730AF
1BE688B65D6A5BDE6A2B8CC8CC2CBFB867FBEB2DE48310E899D11B45DF31DC89
EE7796E6B5113F26099B5FBE0C0FB49D329D2A616BB4D15EFD572F1BFA135914
254A14F9A18F50A53AE4A311DAE02CE813BA2095AB69667E10D3A2EDDB6DC2B3
C7CDFC60D4D7CBD84F53EB7961111D920FE59724A9EF26920B858D00712665D9
DE5F79F2F1617D4A2C64C0A92840B7AAAB7140CE99FBDC252FE2E65F4FFEFC94
40D378F6D2B85CF76AA3A48582890F80A0BE4284CFCC745367FC169CF03969E4
0675EED1026887CDEB41E761609FB6B84CF504E2E99538A1635541A03D97800F
E08904EA6F7ED455C7DD6543E750F847A95A82026243AA1CF15AAED8B191C74C
0282625A1A858FD0D5FE7332AAF569948EC5E7C573F2C671A8FDB16DEF734222
F4B3046DB7FDED53348375FB07B4D650663FC1D4FAA4A0B2F447FBC645296181
388C83D8A68CF660F72784E5FF8C9F2B4ECAAAED4DFBE45D44653BB2A1E5B526
0016D7FD231ABF0FF8BA2E8B6B22CCF4CBEE85E14282982C1AD134C75E42B34B
CBCBFC057734F0E87886AA004FC7BD77D5DBE511D3236700FDC11434BAEF52A8
067C6875B50DE3FEA4125CE2043D2453F7BE0BC2BE831AFAECC96498B67AAE60
33520261F81D652D8EDDB5A4F2A949C4562E39DF969B24DBBA3CE60170EE78D0
7F3AB2AEE6B262AF1A9CF5A92867A4234B9E089B70F7C47799A72D4373957482
570DB65E219467041F16ACFAA2A581803EBDBF201A767A1CC0ECF6CAEFCC8E14
9F2EDC15A41CB0D0A3C137D22D60D656DED985ADD22102DF8743E73994C3BFFD
67621E64DEF5974040811DF8583FBD3874F3629D3C3FEA90F538EFE90DBF727C
0F84C0397A2BBB18430CA05D75FF21B44F936D8404B33B43D55E732D588C2F04
DC604FB03F61ED3769A715BDA1975940F1C153F22C13C33BAECE9CD4B4FB2563
B506A843C0936F82D0ABEE852914A03693B5241CD81DA0935323E4F6AB904BC0
0701B9767B152C14588D7DB431FA852B573058B600DD467AB4165E41E32A94B5
9BF5664E72E53FF4C39F7C27882FF294BE98B548ACE06D9570B25B397AA645D2
E95E4EB66B4009A66DFEDE327D656E7A19A0467EE6BA7E8896429F474F12F62D
670034608DE9C02045DDE22248FA87E6D8161EE3CC617C1E0D5349F2D8A8281B
B2DCF3FD877D39CAB5B596BA5346A296E7275ED7E273D17B6C14D5B2A021B4CF
753E93BE62BA3CE53F77CEAE4EA7467AE75489BBCA285955BD874231FC83FF8C
01A50BE642AF7DA9C3279083E857CDBEC4CB33C0F8076666413132CFA59B259B
D868FFDCAE749255FEB0CCE26CBF9D5709D05D20B63E5E85765F5BA75451020F
542737548E32F57DB5ABE34B5ED60AA61E177A84043B79DF371CE0E2370E4BC4
C34625ED7BF9AFAC2B6D561734C307AF0B04830F461BC691E6F0CBC16F31DC37
1BB76758C00E57D65B8CF277EC7E441E599F7D377AD96D1A6DA8FA71910BF166
A3D87616E7E4062F1FAC3D464E5ADF04AA524C222609726346C2883B075E3589
23DB315111303BC4EED6E4A251A51ACE877D545B33D86890CF4C45D867957CC8
3F78CB2135A1AF5B883C916E8A0779C84B6B5C44B1C38D0B1AEFCC6BA05E5A4E
2EADA77012FB60C5E2924DE1BE3C89038C5FD0AB76F8B4B012C89553E30F3051
3A15FAB221F930D13FC30FC084EA5AD4AB45F7C0756FE16D15A79139F1DC478F
8023D55883FDE74FBEF78E227A61D54175D8311853D413C3DC22B290937ABCD9
0B2BF4A4FFC5C67D71CBBD12D6EF5A1F9F916AB27302C3AB70BFE89B9A671095
836BC40E827FC78F5EAAE4A2CC108A113FB1AD39A1E24AF2AFE7EA35D1F3E05C
1A24DD455CCBDEA5BCF42D1E9AA0B131552E7E967051FAA3404739564B8F86E9
18F55F1F9CD48FB08AF9BDB2A3B08D9918FAC20EB4A293A2544AC1B95E586CC1
D911D14FB2D43D1FCF8A005955D38A48A292B785C59C657A1997422E3DED5870
2C44D776AE9B31519636F0A0AF640891F8BD6BEE74C2509E2AFF5F15EF1F4442
CF7104CCE0F423B118A2E8633C227EFBA71BAD2AB70DC5170B86D7BB9DBEDD3D
85CB8605B71BBDE7B5339F466E8A093737177074BF3AF04B6E58EE1F27D460B6
A487F14B9D9A5B8BB4CFABE6202F07968A2AC749F2EDD68982EE27C66ED4FF04
ABEA372E85A95489613DEBDE3E9EE9A1F33EE6AEFED9F8E769C413EAC9B15E66
39C7B47C1E51D94128D4E3C027611728933B4B5A7F77A29F5427D561B94144C5
2E5AC3A274C554B884C3BDBAD1A37EC2ADA538AB6A6DEE21A49029263EBD47FD
A0562FF2296894234AAEED3BB4C12F3223DBA969D13CCDF649DEA9C45F639292
44439A892F3BC66A4915AB0DB3ADB429BAAA1F5C8831C10726416DCD5DD5E77D
EA522D10B276A731728A3782829B1CD2C991352BDBA57DA671A26AC2179A0447
D6B59C8C654AD1F37AC10095DC281AE4515A9CA4A8B61CE6AA195F10F29B1AD6
04D9610BD176A20D34844BB6B3187F1692B87280C9189AE96AB9BF6EF8206C8A
F953E6E379B2602747B81AB548A46948E49BB21137674547BDAE9DBD919A2137
65C08436CB583589D02EFB9605B64BDBD7B3EBA63BC65EA24CE01765D2471BA9
E4DF23F174E37111FC8C5A1E3848E8F1F4017395C94155BB69C0396A329922DF
7F38C96540D2502C943C0440FB239C7D35B0FB4C04756FDAECD41AC22E610AA2
70CF5D41FB9D02F2A8835EA35CA404CB9A519A310B1B22B23DE56EECA74BC6C0
40356F29195B898788246B2E4D2BD332441DC719775D0D8D488169FA3089
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 39 /quoteright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F43F9A1290E91C463895BD12E8A831DAD661EF23CB9AD2C26CFB26
71B72D15270CD8CB1D59CA2D9DE884C96BB923B1EC8208BD7DCEAB0FC2293629
2AA1F72C6B470701C381E335C2364CFCEBACDD20CA36182CA7E70AFF5B14B02B
75CBD0738E35DAD8E60CB3DA4DDED557FF9ED386DA52D10615E700751C842FBC
85D89C0E713F556814E051C6CEFE7E83C2F379B88A801DDA565BE73013DD56D9
44D97798564787AE6D5A6A9FB777EEB850C7481B4A353EB9279731512C9B95D3
2ACA3A0D44585E55AFD968135F6492A9381FA2D126CF50373AB7D47B509AE6F5
C4B100BE8334ABE2268DAFB7983BF339540A8D8280F3576CDCD4F21408AA7D95
D50A7C1599E62D4FCAB001D5F9DA84FA530B88F2FE36B36F9968B5CF9FDBFA11
DCA0E08D087C4C5F4D744BFBA60FC22E964CE10AF512C228F4CFC3DB21E38CFE
AC11748F9B23F33426BC4AE3F026AA8178364703A31FFB8A31AB6328AA3B891E
A9410A536479A9A0378B1CE62E0205B073A9C3F004DB440C37234EC8C030E18A
42C47DD0FA1EE3521C98714EC451AB5E544183431A9C5254CA9A7F73A55B8B5D
A98941739E254A5DD0C519CDB28B2F4B9E4850788B0B46E26020DA98EE4E7AA3
9B55089D13329ACB496C86999B89ACF2099533DE1756F0248149468CC0F2C45A
CA7E24A4C93B99FB57A66912299D28DC5EA30C0D4DB0F6CDF4F8F910454D37E2
35E519763C2B61D2B1E6C3DE314A739F6DDBB748D0C6443D23FDFB6D6B162BE3
95DFA7EADEF780AF4D3EACFF2C28AB8FD4530E353E5270D5FA6599BA4CEECD08
BED2831AD39F1E8794319569D09632A4CD65FE1A20DE8FB18109D0F8B7EAE4F5
4715EACD45673984D60AF1EE8E6C93C4F789008648C1F96FA1F8B338EE47E2A2
2305B46D033B7C7A3E634072E1CE2711938D605AAC075BB8E678C339F7B42198
3E61AE2035C3829B1CEC2E9FBCD62C20CB0AE0607EE97E5A017628A9A8A5208E
BECACFDB8FEF5911988ACCD63572FFEE5C40A2025F26C24EC2A87A2745B3933F
41FB3EE69503CAE324705BE07519A307A6530BBD233F45464221B371CAEE0B23
787A20271277CA65E106143B0081D25E339919166E4C5685DB230CEBD600CD33
AEAD858BB6A43A41D38BF43D98B497587D795459121253EE898FCCBC2CEB4D2B
531BC917318A8EB11C4114060FADB071C8A822086E9A298740B5B09C8A925A3C
025767C0809544F529194EFEA0BD4DABA9BC0A35CC61054AD4CFF4EF6F6BACAB
56341055BBD2158D69568152561B8E8412C0F1034FB773AA050B8CCB23F49CCC
822F363B335D65A4D2B4D5AAC193EC41760DDEA9B218FB1969747968A767404F
D705B45223A6504CA4D48826FAE6756223F2FF5B53D73FE9678ACA19ABFFCD5B
59A380CC4084CF47BACF0C62164110F3599D8E6CB9E93D141668D361EB443AC8
0C0E83A3C7BD7646FCB6C28886EC210A1F84DB2461B673EFFDF8F0815D7853C6
F61278341A101828638960F2479000AD48A72EFA7FD1AC7044A40106216CAF4D
94EF709930ECA646B2F07D8358D48D0A768B6E6E0FCF3BFA597ACB9868737697
95F45C48945BF8CD5B0533A7673D9CEDB177A43541D7D09EC95204F5D53FDB09
DCC0036BC505B14FBBA68889E25444BFBAE4942F657F9D97DBFD591A23CFC73E
FC3F8EBE9754C29374D76DA1237A4FC26F3084909D712F005FA8B12F332098A5
5EDF16A009E3EDE0472C227802A5BF4C9235E2F15364F94D427B98B29EBD0CD4
D2B13228DED6A482790970C5959F392DDBA187B24F6075F39DC5E1DF623E1CDA
13106F20D14D13E3848CA95BD36E5C55162E3FE26F02259DD7D8F3B3D6F433B5
D663ACB77850F858A12B9318CCE8DAEC14FC13ECF3F5FF91497ED22632592633
4D4665D0E55F48B46ACF9201156F6C8D6F44BD9A96EAA11B4227A34C6438B8D7
77CE24737C044BBA551EAF2DC3E21EAE3FBA7645AB574455BC401E48A3A3F931
C5DA09DBFC6F97BF3C1BABEF910425B4C77DAEF3C721575FE10EB269A980EF2A
277D9F0F82299EF9A8A8294CF6D6F6F2EBD8A112A12630330C4FEA515F652C0A
8B4573C92CC976AF06D7B50719EFCB584D3BA811BF7B21FE8598B3AB03652A6A
A45481D6FE5D06149532684067C78D1E6AE1F11BD1DF334525F40A17C0780FFA
D5FF14863596A220D4770E281AC81D4C2E06C093E9EBE22FB52682C9C952A3C4
B7AE1C148595B2239E22CA73D76C68AEC22E4F107949E0133671E9A9A609FBDD
0B90C3F3C665E41C30CE3CF46A1DD000192FC1A05581E990083E518B6C839460
6BA036F6D6D55387C03EED1324A5FC79C778190DD5AEEBEF1B846EBA74AAB88D
ADA7F344AB0443CAFE371C95A06D169F15B92FB154A41E77BF2F6C66C3BC6E9D
7F08BAB0510C14D4DD066892E0C6CE9ED8BEB6CBE0420DE457EE415AF7C9EAE1
3962888F4872924D4495E7229435A68553EADC270262EA3074B76910C85EBC12
13B00A70A25B6E02499BCF9017D11C9A2C3CB9DCD74A7D2C6CE5CBB13583E0AD
C782E20725AD516990B85B5BD22A86926D5C1F367453F555D2585E9D6A636134
FF6930A4C004A2E67E8859FEFC2DEF84ECFA903E180C78B95E03EB7DB612716F
D76BEE745DADF4BDE2FADD92F07DB42A13F49F99FF665BEF70E76D9812B0C171
02F478B38C812123388E4A0D491696E2DE89DF93419B0DDB76B908C679AFDA95
EF3F0F965BDD26173DE184E683D203AE863D66AE25FE1DFFC58DD77EBC8FDDC2
F6F1B6DD7D909095F94F916FB2F000D3DEF679902FF59E3B76BDBFA5066D3EF4
F8FFF995FCDB96AFEE88958AF792FD0DB529BAF3FD6B2286FC17724250A72FBD
775292DF056CFAAC58DC182AD331B045E4221674EB15EA65CA1064175959BFC1
18DE8B1B9EDBF539C45059277FF822BA1ECC933993EBDDAA3180E1B391AA407F
65260D209FFBE3A3489261A38095A165DA41DAB8861155A034EDA04A626CE77A
BF7C979E3A03059C1473622C632442586F755B38196A0C170C5016A0D6924D79
7A42179750CDC0F19353016C31E53B1C802548E9E690A5557FB4E93ABA44CA4E
C6D1E2BCE002794741F993BBFE21B013523A40438A7DF6D1B7D8892870AE39CB
726BB0CD257941EFD9E086B4631B3364AFA54E3D7D5EF3B410D3E1BF02DD6249
34722D1097C332342E15F75B08A78687E9B3AA21AC42B13A3B38E63A71BE12A5
37C04DE9444D8E3AACFFE22DD09440EE9307549F8BA309F9A486E10296CE26A4
E1F602F63D644F48B742089C918658DD376972FA537DF301C012593BA7EBE408
87177E32CFC5968D9AAA4213297C06E26A42BD879E9A3C57F31A1B749EE2FAC5
25AE4194F920986C6C03B5F7C49C841E6A97E829F203FD1C42A3F26F3CA1276B
FC8969DA90FF2459B75BE7E79E6A34DAC73306C6E3ABDE976810FE698913B19B
B19FC89995AFD2D94BADCE1E9C54CF9A07507191B845CE8E6E6A59EE8D6FE3E9
A316E41BE90C693DE3139B4798138A8A4A8327DE271893B4F78325E8505EC0D9
79C44F12256094ADC1C38F8D8A23BB5B1228C1031EC54B3994EA142AA9A6A0FE
EB0F2575FE3A0DEF486528C964B714A2BAD26DBD0848588AED818044CF3C72C1
24E61F28C5748F5423ADD67C16B16783A74CB44F52137F549EA1B4E2060D8D13
8F01FB473E18C0521E9FE982D4B29DF4C2C3F3A51255CBFC75E7E1552378D572
9687642E3BF1E4F4A48121F241644584C7B44334712E359F1FC31E2FCA14AECA
227E965233FA87A83DAB9E233F42B5A3E475136FFD709A15ABD9E3A985E8E8FC
6B1ABEAF7C5A0B92A1B169B1729DA75FBCB673C563C34470C82B24631B3D1934
5A7AC199ECF1A0646A5BAA67437E97A0EBB4121AFCAA0F8956B8E334E69C67DD
D1E8A652FB8DA2064F1C0332C30BAFB11012E0240B190A48698C6A9D6DDD44C3
F7DC7CEA868723F0F413C995A3BA9F2AD432E6027EC5CB5CAA64B02CF8A15D60
587FC7D236BEC642597373C612E87B273DB68A4A83F1390445FCA218A87F563D
AB6D3481A92A736D19BE219E413E06661EC07CC6D69246C1B0DCE9EF4619C9D0
23E303A2A1AE669D6B020B2718D3EF866B22B97946E4CF7C40EB18FB54F7E91E
283DB3E4AA92DF1A6E2D0B65F1B3C36B4430D8AF79983D517EA64787C3DE0D43
F5248CD7CAD747C21C762873BB37992A2FAF21880E4ABF16CAAC88F95EA67211
09B99508A6EE7B493260846DC2C6D16B54DE1023E541FD595B5ED23A93DDF778
1E5E437C2D0E204AD90CAAF7A0B94495594710F7BB631D9C72C4EB36DCF7AC44
FA5358837F7C65D45A7C2EC663A6F92728615CD77241CEF63DD328C7CD56AFC6
2B6A88BD17B8591C5463A006FB22E2DE62BBF60FFD1154D85D7B42A9B86A0C08
F07CA4DC552B25EAD40248615DD1741264FAF45C2B35C8D2FE53F48F1B7819CB
6C4928AAF1BEEFFACED15F099DDA3F18AD0908F75EE8AEADD0E78C357CFE3565
DAF031EE25D893676DE502557765FE267EC6B58B12252470ACC0E108E4D3996A
E5FE7EF39F517A6D2F74B9B1B7657E7B291E803D142E37E7ACA66AB27937885A
906A8ACD1DA7292EE9775B6789A52A4EB95AC034E85BC0E671CC6F4257C82574
5FFC9C7EACE612207FC80AD04F0CE33A930AB94F1933D5C3D34E5FEF0AF2BEAC
3E18C6E60B9C6C96D94B55FE1128CF849D07521DE38F1E39FFB25FB9B23AF88D
0DC620643CB7CBC274729C142AAB5FCE21AE1AF4070A7CD734E4572D80FBF3E5
04EFE4EDCB547CE0775E61B1B69B3E7D25EB2D8366D0630CD759B858D998B127
8603C80C03EA292156A5254A9ADD50626025746C3A86E5E5FCDEBFD8069830E0
7E0B7200CF714DF7C5F140B5FFF392CA42CC2CE13FABD9A38C67199896A92E85
437A158E1830E3FF4CACA9285D5C3FC0189335CFAEDAFA8EBE7A19DF5B0A3E3C
6B1923A6560D12E5D36C7041D3683625DC8927A677A1270C87A5E4B948B92C01
3CBAF0244084E30FF7067E0C279FAB2C463417A761B5786BD259F1FD52397921
7B08BD22DE1388DB9FC05105A6112E554CB801E0D05B56902037960155B0E2E4
666983DFB53E2FE2132BFF66540C8262949DAF802BF04043C639FFF1F3BF110A
19A4579AABDBEF146F866B590579EB8C9CE8EA2E0D2FF10632B01D06AB5030AC
3E0B96184B859836379DCB4EF05AC1B58622EA99461F0F0F16368D36B209AC58
85C4346980A8C0D5956B4636AE3A1BED6346EBAA3CC638FA7766B3D999840990
50C749280FE59639CCDDAAE82713902A5C439D152F39126228E78BC0C0BEB91D
8735466D8EFF5517D85E3A1555E5F80CC795660F5175DC0F0ECE53EAC8750115
06F9C6A369809975C01B7C14D6BF2314E891FB267D0DB66A6FBD73A985424A0F
127EB6E71C6100C77427491BB4C25194CDC80980BA9106E208EE6FC291905A22
4C2970B375AEE41F3891C2178EB8C8080C0D89A306C982ED0F24AA23E0C60A15
7FF1698028673CA97541F8753A6F4151FBD5CD958AC961C10D5DC3F43D5D4A65
5AA86354EE9A02B1511665BE25EAA0AD44E66B753826C5EB56EC4F6ACCAC96B4
A2B1B34BE04DB4A6602B06545F57CC878B2ADE6A321D2166D9D899ED1F949EB2
540D5CC4E8546A73953C660E858E6EF60DABA4FF4FE002B9B11F9705E8D5E561
C78A51D4E2BC2AE6C0EF0BC64C13EDB9EC511D2259162CA018A14B6790F3AD11
F4C178BDF992EDD6586A14E3995BD7884A0B605D97625EAC0348706DAD0FEF25
886943585184AAB75E1279901DA0D1E6125FFF4FA5775015F4D3EEC07C05F0C4
B63DC1C1B7ABB9A66814BC1C30045BF1C4FD1EEC6B668E96D4BB8DEFEDAE2AB3
6042BA6F163ADEFB001170C23D4271DA9A0E33D34D4B823E8B0870BF67A04D74
85BD20BA0D270FD69B6EA49312999ACC4D967817F878D600C717394A6D3940E7
C59C6853CBB1F704766A2CC27D86C7D428C69E96D0EC1347846377B6ECB29BF9
DED862C42B2A3DECFEA5DCFBAEE04CEBEA0313DC0BF9BDDD3818C2A90735A6D3
26A95DBB4FA2D09E1764A32A0B076C6604191A7880C8EE0CB09C28B51D1C615D
3569C9B139C1DF07CFA6D58A6BF9B9815EAF34BFD4CC47BD52DA5377B632EAB0
7B1B04A43FF4493522FB20AFB737458DC4299497DC960E6F3509A8DF6D44B37E
AD7A86F75D89179A6D91ADFBB06D3391E342297596DBC127CD35771864EFD131
2FE8C0AA2134947D4ACF22EC5762EB5A4EDB55B56948EDAA2F8B08A01B3F52F0
C443B55EC9D31939DD73DB6E0EC573A918A32510EE3D22EBD329D3C871A27595
F0971871C1265D3053CB445BF6256D6B8883B805D04757837B74CDD607D8F8AC
7058540BBA057DA86C2A9A1D034E0C3A17FC6ED45D3718F523178CC4A27BFD78
2861FB416B3431485D435CD2D6F8D2651F4644CF51DAA8DE63687E0CF8ABCC42
63C0B9B37754664E7C8F475F37FB650C45AF556A3CC668022BDF730AE2343DB1
710BEC774A01BED8F6C7A612A416BA05A743B21EFB9CF85E711E0C36BEF82243
F8046D76663D3FBA0E8C807E4BA308019955F13BAF9830103C3E7F6C57CFF677
91C5335383305C781C8FC7577C4BAB5802F97D290232BFEF52803AC960EFB9E0
DD3B41B49574FA9FEE0242CBF9905BEFB50E06F817948647AF08F6AB4A600A14
4502EC6C0E3B62A5A415D26C1025E59B02BC2C14E0CDB4F12CEA70BB4A3126D2
AFEEEDEAA5DE4263B1B1BEBF8EDC8E63A0EA551950E31C322040FC1F123698DA
FFBFF6D875220A76645F446EE8F55F86E19F49D4ED07FF7D048A230504091129
5FCE0D5E63FC04C4724099993EE492B34A3C7C187A196BB5DBA6BB57DC0F5590
68DA171B805FC5B17FFDA6F60AD75F1E2CFCB095C9D3A62D114A58F8E53D6D11
00C4A23272A024204FEB48C9307AE1A76D3EDF222960963F2F799B2F59FF538F
427E3476DAA5FCB2E16B26B92F4A5E2568CE579C19DE6053D9BC5BF293C0680E
6012AE9AD1A8847B3CE46C60C2E0C555A1B102C142F8F707A44E479D8B775BAD
FBDA7E085775FFD2B62E97A13CF4A24210A2A4724D124280374839A6E3458424
26D1E99697D16CB2000EC4C9561B77830CB8993724C38C17F423CC4CA62EDBCC
1B5D3836082593C679B1FA22B30E6DD019D2E344FBFEB1C1A61191C736199781
BB9F60DAFE125823D1D80690075361AEC5F313B19E4FE187ECA9723040E8F1D9
B925E42220223CA6FE48F587F78AC45592A42CFCBAE849DFC2987ACD5795EE77
48E63CBFAD59D131ED0BC56AC99A6A09F35CC4B24D03D0E0644E5F9377697461
51AA05A42C1F99D31AF5065699509BDCEB3A30A7DDFFD52A16679BE9FF90048D
216C74E974B39F6D3FB96D978D8E996E9124AD0F0F612470F166A3B12DC8F0F8
80D72DC441A84B49A45525603F5BCB30E0F6B047BBF0A3EB97C2725D764B839A
01163B487511FA944F0C948C90164DC217F3C0BE393FC99DF4D3D2958D8BFF8D
CF657A9B3CAAD7274CAB1F0527620D83ED4EF03334615B5E3DCAF766A0676D20
5041AD0732D771F18F6F958CA5CBF47D0F0EC0C97E5D313EAF5E2EC7AE6E3F87
A462BC40593C54A51D41190ED00AEFBA5A2A7B25824B73A942AC6045917571BC
F40CDC61FFBCF6AA014C24A44C024762ADBF6E42F80AE96F421DB9C66DE0E9ED
1E8859F3BD1AE03EA946EA9DF9B2A6E922E07713DCEA2E108E7CE30390C69695
51B440D79F73E1B586EE4281748510226D3C6E192177E33A511D9A2326E8F0CC
C5E27D62431236282DC59D4539F7481547EE8D4970B8CA320958DE7A71F04D37
CB607DE78C869A251FD4988FADD66BAF9417F5CBD5B40BBA1E0B8418667FA4DF
99907283D6ED30D9524C4C2F71F4DFC172B8E43D90FA050F8EC332BF9D7FF699
03AF52E9E3F6B67E196C9737D685D7D4D5928AF2D3A35F928CA023E5FC7B66EB
0C8A7B6A31597D1674392327689491BAD52893AD17E867EA0B9494DEBCEE0414
A337654781BBFE0231E3B3DC8AA6DF1A24869B9DBF46260B39F9CE0EA971E76D
8C8CD0896DC4D5A60A862C917DEDD3081F13F895403023A095DD600436E0BF5E
60441AB2BB8852A96D2319ABF2000D04E6CF2F10D868AE69D8175A69070FBC7A
8A1AEDD63794CAB0B117AA039E23F4077C2140E3089717F2B44E62F70826D2D7
363036FA70B016B29FF4782DE1D2D532DFBE0E6EA0B23D3A9C83392FF1E76A85
BE04AEBFD48A316D5177C65F211AD7EAD2C5DD96FC8374D5985D065BD5B1A4E6
2FE03D79755D35D7DBFC1153853A9B2E2DB19C5A7CFCFFA2FCBCE37B6609D549
814CC7F353BB9B832002CB8DE794D19D17BC2474A9D6E49B2E2CE1536AFB526D
E00686B1FA18DDFA4E9985EFF469FA0D0ED785EFBD6F90D0877355B6D5FF45C8
0FB19FC6F8CF65E2F4952A8285AD67DA5D066A774759901ABC422EB9EC580148
E2254D6A840AC29FD7C32ED3FD81DED773BB1D96976C785EA96759B1B3DC2DF2
97ADD273FFDBB1B1D9D3F306BCB49C34A86CAA8E3D74657D4DEA4AA3C5513278
105012BA9CBE9CB10C443046E08A84CB37ABA666C10EF869706BD409513D9E98
AF8EE5B00233BD33443FEED6FD8F4DB23E773C9AC82139141B37E30B22CFF8F5
D07645D144BA17BBC6922087E5358EF70D184152A057956A0B284569DFE737C8
EEB34CF49C0E880C08C21586E617BCB8A4C9AC0674D79EE5FAB6F19634656F1E
D8CBF3B62D8A51D7992DA113922EB43C3DB68AC27CE880767C6521FEF475FE1B
8B1D1E907A319FAC56129C79D93A4DD97D7FF06E5D749649B582C06399C131F5
95ABD2C52AEA402C73676A0849AB7F549C976714850EB042EFD24608FE39FD75
14703F345194ED8AD0862AB4CA284EEB46DBD8355DCD210B6A1710151A75387A
BEC0DB5D6E0358778A3BE08DFCD53D0F1EC0F99F110C8B3A828ABE9D138C273F
73CCC2D321B669F57EA2BEE2282C777E17D72170EB76E69BA8F34417E5231CE5
6BC94EA1B4DC97D16478058CB06F0825FA5E435613933015556C5A7E4EE0C6D5
8D1E7DFADC06BB48E72C3B05B24250D5DB4ADD6B4E7AC1D35075C900A1D7F641
6DDBC2C4F8ABED6D3DD48468AFB197B0CAEC8D96DBA37F350534F0D2C51BFD54
5C69783952CEF79FB44D5149A4652663EB42A736CB16A2054929DE34F3A512D7
26FDE9FB0DAB0BB4466F76A8368D8F95E44551B3AEF91CB970CCAB93EBDFF309
E021AF47144A3574BFF3C609B9F925C9998E18A0E3F444019E952024BC000FBD
9014E07204258BFAA04F476476FCB189E89C0268008C5446F3838733757FA686
E9B72689E0BEAC0CF1ADA218DD78983FA8FE01C509738786DF3586BF52812986
46FDD28B3F704B6E7BF1BB4214529DAA3ED2E35020054C528F671CBF4D26A191
239DE0D2663548039952A926C3869B88EACA7FFE8E9E044432B361EFF3A669F6
ABBA54BA21833FEF3093455CF3455519B904492986196CC10478CAFDBAFE1E17
15227425D671008C616D769C94F77C06EEA5E59C67356434D3875938EB7D66E9
B9279AC17711D98F0817299584E43ACED8F6B5B379D64BFBD4E8B1A7D573E8E7
796E0907D360F8C9BA875F4F758524818FD1CEC66B9ED51E004A54A3DB9B6586
5A765916727B6E56154F5A1475F4760E43CE6C8F04B7FA442D2AFD9890500176
F39CCCBE6E6C87E2EE1A5F741D8F62A26203AEF797EE53CB50455C55345B09F4
E121AFB3576ABA18703D17ABF9D0B458924E80ABD8BB4DEB9847ED9656B15B5C
201DB9C6E115B389D1378B4FE161D8F433624673DB551FB39308C287E1BDADDE
476D55CFBAC425FD6E5585E64EDF4CD5CB66655D70D77FF8699B26CB5B5BB54B
4CF953D33CCC21A67E09D4C34B2B65E8BC266C031A6E4BFDAC3E01A37DA13EE5
620327D1E574A503F834FA18BE53827B20F5700250FC7072472014C3E693A6E7
0C15AD74BDC0E97AA5C6938435941DC0CD8D018F2DFA3390178D6082ED21EDCF
9EDC62B7B1666FFE53E43C0D4DAF87F2458693AAFCF911CDFAA2D7AA2AE8E298
75413D78E4524E4E1FA811F1FFFBB34FDE5D40E148BBAFDC26A435DD6845BA42
A4C6B76A350B7575D17AFBBC17A93D71488DEAD30B0F2853EC7BA448D01FBAE1
35BA2E63A1F73E3302D91D1886C46B652C4926CC3BF2372399EBA3CF002EE77F
1F679BFB57DE786AF04D3F4AFF7B70AFC871601AF5D39CBD98660505C3238262
3DEB7ACEDE1D996163CC9D7A6B53169DF0FD5E07DF07BB1C2AB8EEE5D63FA988
7C7AACEAEFD3B35D05347DA5E525F814C2B896E33C77409C5C0D6CA498E2942A
717417BC0449DDDCB513351AAD11D99BE928D3FF090741B62F89198A242D520A
C90AA5EAA092A63DDCD4602B286FBF0BD32FC5117CEE503B5BC3B0F8BCD561FE
56E28914E7C02F13AA290D53E371E3B76C71BB8422F2498C6B28716820BB8A47
03D4D84D1B7BE37C13449B0C60629BB6FF78451AE281DB3565F9E074B7E74362
0C9E69027768C5A10B6F9258E8CCE991870ACAEB42E6570633426763E86664CB
B104D1C3417036D978FDCC8BD7AAF93EC947D23EC7731BC51C1710E34997614A
E7DF69A59DA32C6E45494DDED6BE2B2746B34E64A1740C3C0A275D945218956D
B9E493EDF783496EE8366E0C058C02FDD0CDD86D8A3AE31B46A2A23665AC7BF3
CCA8E6271EC47EFDEBE80C528BD582AD8D77FCF4448C7F3648DFE60113AD3DA0
A0C40F9897207ECADED1650F63FC5AFEE52E5EE7014C9E27B884D940AF05E9A2
A4432B7BB6548F15D4823463D07483DD0F156A617D88AC677017BC176D3CAC89
03D14646B82AA5915713DA60034EFB96900FC5CC9F8F86BAD329D478C269EB8B
D559D3800E7FB58222C68C2B3F92ECCD3846331461C398C25BDD253A39CEFC15
75F865C6AB87E0E2893137E8C8784531E2075B01ED0A86B6D4AF9378262D7AD4
78F6934D6882C144F50463E3B5FD1813641D6CA062CDF7E4F8650CF87F02AA89
9B31AC089DC8E9307030A28D5DA5F56015E04051E304D2C707638B93D2DD9F90
1396CFF2BAEACF6E43379C703EFE59904DD1414DC361AAF9F77DC0218ADEF62F
48D6C8821C2896314F4B7242A3BB0979C4A0C733F510CE3D6F2AF84F40DF7F2B
8A1B691A51AE24D9DB742B35851AA1ACB3386487921AB6BEB0D19C7473F0FD45
512E0265039405BF45C7BF36F99B935EF513C4F4ABFB799DBA81CB4DDE7D4A5F
DB6F2147668F9AEAC86963EA9A4F43BE34E24209C0542E8F09A9B4FF820E6A04
AC6192F826CB2A9F27EB8B643254DBB0112CD41F1471F7DB5BA69FC64E173295
E356F79A82B78AAC9F25C2B6A8207783E1964E7194B7CBEA922D796D21B14CF4
F53FF460C8EC8213A0CD092B5CDFC081727D33BD8D0D229F35C38FDF433FB77B
14660E49B46181A0C15B287D130EA4967F61E68253A491E77427A62BA05FDF24
01CF3921BAA38127B0C03112816172D06B55DA1C8A2229DFF95ED200B6CD1514
6950F7B874791DCA917354CD7B5811F4BB155B0164533055D2EF51ED804496FC
F213930287345E595B87CBE3FD66528EBDE9835AC2B807F2DEF681EB71840111
70DC4E5AD89BA7463ED46731B3A77F3A214254D309566F85FEF1ADB09BC48B1E
16A24A7C6504CCAA0F297408D350579290F5083CF89615D5585C9AB010CCE237
745546FAA11B1F5943A6A5F067252933F822D18613850F5D48EEBB1512D857AF
996859B33D356A9952EA7710BC59C165FD754DAB40749901FCF086AC64AB009E
C038D08EE0AA3CD979C65AA15F3EB73FA04D54432BD0CA7A9E8438C88CDB917C
448634B3B03CFEEF33C5C7A274EE10904927D9208EC25146DAD4B17C914C5ED8
64C80041143775744B95096BE74E74291DC95CE80FC541F35BE80CEC9497F937
71F49E70ECD3AC6E5277FE777661C662850B8B0D1BC6535573BCB7E305F6FA6D
B23D680A97E1C136DE6E29A4DAE4D52BD65B7C7EFB3B3B5D086CA74EBF5E1F28
5F432762C57BC3CECA0633CAE4EEE0242E5DB7362574411D28EC70FFA1D2AD77
8592B1D21EF023C408F38DAF55F34ED3FA8CF5E0D8020B77E5D0151F6C467F79
445936FFFAC05F550112880C659943739820EB71F900B8C35AC19079EA2C0BD5
D71681E534A975EDEF6A9FFCBE12D8023AAA89979C730F5C8E9703CF076858AD
7C91E9DCE0561AE965726DFBAAFADC38EC318D3190A39399750F1760636D6E33
781E660B51C8CBBAB35708C9E6359C8E9F8D0883B6695B991DE839718A20EC86
2B2C99025BF00B1AB71AE3380ABF46AAB360CBBC42E9F158EB4EA2EC5EC49B54
DEEE15911060CFDCB108C4F25C76EB9850976CA76C3547D8854398BA98AFAEC9
C7B5763104E06CEAF726DF80F1AF030B52AD3E755AF7430D78CAFB324CED00AD
F016E655159A17072B2422DAA4644FF19F34116408E8B111D8B0B0C3F7D23883
056FD837658B7E4FAB227813E5B9ED45383F92CFE6C859AFAEEFEEAE02E8326C
2BBE4D864383347C71FE08FD98C6F25692C18B104D95193D56837AE52F1169BF
83C963CFDECF64FDEB9BA249B9B6030034F1FDB472CA734BE5D5A0BC1EE0E898
61AF4FE488724ECCEE2BD0A4EB2B071681547E8D465A9B457705FF99CEA7EB9F
E02432C4582E2AE877A5A9BC0BD6C132A4DD5BAF23D21816CBEBE3573EF45DBB
D8B3EA595AABCE8F0A40CE1143CD8EA1C51244C365AC0FC0E0154207C8AD5670
4B234FF80472330BC6D9377273EA333CDB04212FC05A15F1C2913E0912E0451E
25929854790181000DA7C88D723538755F135C333B876DFD0F9A2C68876AE24A
6E51E3FA02F4BDE5B531CEC2BEE532C7E41E7F97E998576C1E1E9771BCB14EA9
307F6B363655334141A02FB23AB60E276CAD9A6EC548F0FD0D40936CB4B3481C
944D218E8E6A6C2EAE837934A1368DE3A53306E0296A685CF772C70AB4DC59EF
32CB71078D4098F94E0F9BD678CF8C41D7DADF35342BC17A1E9AE4CF32B2000E
EFD45D36ACFDF383F9A6CDDE2C3F68F0D96F85B3E974DE06CCE3DD6D264291B3
3D521BACC03657D9D7B8D79ABAEE62EED6C79ABB527762281753FA389FB57275
7122945A1F2879D0C35E56A30062A7D6D9EF92E7D72E8B00006B8F488AC4DB02
3BB60BA9644C8B2A1AA8FD4E5F62101F473ACE598B3ACFF5EFA32182AC2D8D01
1CDCC9423EEBB54D4D097DB37030613512C84A677E26A89703FCD395BD202BE4
C641CDFE0EED5C5D3907BC9429C6BC043BE932B718ABC713CD4980C4FFA85BC6
35955CBB036631A558932133B7A4AF3C7BD64D64DC565BC5B4ABCF47BB50EAC5
BDDCDA9C23CD979C1495AA0080217B8DD1280E5382917B86425D810B2023736C
01B925A1126634827404C94AF1475F3D901AA3F49919D94835A6C3E47A913D79
A74B55DA63A6DA03214CC95D118F3C68E143B7157C3CCD88BA30472E33D06EEE
FC3C4A8D64B8BC052CD708F5A8B48A78837C8BEA1C6F7F8CC8886EB7E3D9ED1F
679B7CD0765E303A00C4681B8F185D505638B140E2548756891ABE241C6E48AF
ED2238B100BC1B77A79BD34D5ECA155E126AAE1E51BF4CCE0B6C374B438D6000
D2E31D542A71EC3911068FB3A8040C1CEFD6ED452A7461A12054BDBC26C6B3E8
481E236EAAC9E63A09A6BD6549A52A6A4F847464353F85F0DB0F92D1D047E2E7
8D7340303DC2CF3B631C9CB4BB2DB668520A0BB2E3B6CA84C8EACB50A9C78D0F
384035B65F157920C5ADC5458626C7E8458F11D4DD60E661B7E56DBEC4ECCA16
EC7CA776A11CF2E02A9035F5BBEDDA12CB2F7C401173C1D2D5B67E7E5767ADF6
A88B8D95C5D8F68706E7E82EABDDD97022BF416C55D21EB1B09C42384EBD99E0
63D8E97AD38DF0BFE7761E515393F7876BC6B77B0B26939A8F501BBD42BF5656
EBEE2406E742BF68AE046CA70DA088FD870E286307E49D5E0A924B94DBC43E0C
486326951ED55729ADCE4FE0C9BF86D6580C2C0F0C03231BF29B228C1BF90524
05106AFC09B1C0CE0961BE829DD1CAD449D198DB95C0AED15F3E115AD28BB961
9B65D23F13F7B626AB06A44FC42B28BD444DD1B0EFDA5AACC8EF8D85F0376B4C
4755F25015FC3D7027321C677ADF6963573D3DC5CD9D718CBB53DF2B36C8AC39
E0982E76916E6558946F540142000C7F76F41FE5ACC44574D235EF94170769B2
8114E3FAFCE371D6447AB42D8062E02A934615FA3B070B4598B4CA145761C23D
B068B91ED7D8DE855B97CFD4D8C7DE066EF08DEC6AD2A0A17B1352E14AA03CDC
E873B616602823ECA37B3AB444E3FAD741C2249D632B7FA66256B2047AF01DCE
FE3E5CC739D602814D52238B01D72C8EFA1C45EE232854728AFBE89FB1E86817
4F8C34C3F475A8019D53C590EE571D4AB7E252AB71AB19FEAFBC4EBE2F718E66
1DC397607C310BD4D1D3E1FFBA2CF5B08F6D0D6E11B3FE262773983F68C1D383
887DDBFC9662DD05EB409431C0BEC557A486DE5C7CD83E25B6CC77D5A4820EA7
A6CBF1E31E8768A4B3D6B14E9F680B68520A6F97C113A175BBEF7395F73832AC
CBCC1E70EF9E25F3686E19697FA0C98F96B333956FF78F319535307A870EC921
3DB2D0DA783021371E37E1612E8E8BFF15C27B844661669C8FF4EB51D4BF4DA2
F868378284B68CCA4B51DF2B8DE401F4F53FB25BDE326EE2EBEAEEA8FFC39F10
AFD8EE4AED80861A4145CA804007B273000D6E165D77E13C4CCE795781A959A0
18281FB728A4F2B415F3EEE17497ACFB979B57BA4127854B0316087210F4BE7C
9EFA667AAB58134752EB823684416E738936C6B391D682879489F06934C25AC5
1BBBE75EB2C644DAB026162A210BA7F2BD14B9CCAF9EB80D22C6ADA9DC8FD8D1
BBA72ADE89143B9B9FF8FA60A19B2C55DB06808BA42A1B3DFEF2109503F86841
6988F06A80E53F3296D91E666499A93D2E5BD12F0AFCE20DB9746B7D344BAB95
13F83A349FA776B5A45EF89063A5D08D372D38FB2AA3BE3613563CB692FBE0DC
1F2A91584D5D17C1BF702395E8E6048172841F5A4C4D8C39DD37E8ED037D60AE
71EF8075CE1CFCC7090917C461599A5E7589B78C2E2505B8DA72F8E96D39F1EB
ED4566668FE07B3181D9DB5610F5B56080C37635D1F95466BF10D8A2BD7DB2EB
6DCDE2C91518D7D2A0F2D8E16555528ADC9882585786D8DA8F590A99CB95FA57
0F51445CB2F8D041B68ECA70BBE708DD2AC348B57C448ADDA4C1A3E0E288EE74
A9DB3AF6C986A304F9AA6D057B816083F22B35386156A54AA9693712E2C8481F
D9AE1E6D882BDA8C26695FACA73C97D6009DC45F16DF192BF85E06FBCC0EC8AA
023ED64EC0B2B3278483944CA289630AC3723C0F02DE6CB54DA150BE8B0D25E1
88E9B11B31B85E2C244DE0DBCE77B9F9E9DDBD6D9D712C5DA5ECCB0570F79E1E
27D3E6EA42020655FF888DDBB460F9B9E0BC5C34FCBD8F76C52F52CF71BDCA00
3B38E601544A3308C99441BB837E6A3EDE9200F2FD92F784EA66B5A9963CB87A
7239D0D63937DEF80E9328D07BC757423E3999F20E0BFD7119B1390294EFEFAA
25DA731048CA9DE6B576E7AB20A27957A483470B776143EF077A1EF15041D62C
51D876986D693F84C01C4A84A1F45CB0E1942F0AAD624F95FC0C14EB3237B46B
F42BE2192BEAEC4A672CBF4AE045F4EC28ACDCAC7EF3CAD80FCB0802C71D9F62
C2DEF4938A5CF234B30817A85C42DA772CDE39F7085A13C0C179A67641A318FB
5B6D8493D8349EFB08D11D3C4BB51CC9F152C1D9D8618F4BAED585EE30542C70
7CE11AA8E76933A6897233897E9B00C9907950FEC3E1219611B03AE9DD1DFDF4
43DA52781AEF058950145D77336812DE5EF9715BA4B2C8033AACBCBF00291879
9EB1A2EF439A969CC23B3594C156DC9225B89E48E1DDF0544D2A76B30CBBDB3C
259FB49A69738D09AC5837C2159F604595128DB1D240CE34D274A786D174F841
CBCC9D2883230B8CD1A82DE939D358E57FEE00181D71EE19D9D8AA93B75AA294
74D8DDF7B2ACE1CF53AD06611157D82826D619C1D28BE0C00F247AE877326355
4E709C6F79980F425D486E07CD1E00CD17CA8622D2664466821B816F6BE306C8
8CF70566C3974D24C94E34C5DA58BA2CA57C1B3F4F47A8344261D93709C8B1DA
DA043A45FB77524B0DDEA81C99FE3B36FE830FB16F4F4553465B550EF50DE6E0
AE4437F1ABBFA672BBF6823473CE8E4484C20D687C64FD6C92AD1506B699BC44
99B046472D597F326BB2B3597CCB342365DDA7037347AA27F7E528686C8EBC3D
72DA4ECE23F1DDD6C1DD9025EFFDC7BD41AE24C3582A00233FF1DB1691EE6A31
ADD1F0C654866FDDDB306D7C787BDFC2342AFFAA74EF09F77A0CED4FBDB3CE4E
AA74671C6711E7137A19F93603607758C82C78E0D883A411B57F66177447A942
D12B42BF2DC150EB5714C38EB8ED6BFF6232519D906637184C34734624B62696
E96C672B5C89631AE1E020E28C0F8B73BFD5DDDFE9BAF7A2FAF15A8BA26F36C9
9B1FA6DB48CA42E08965F97DA3F43C001C3B2B97481D4B40068A71D532F372C4
69FA52A0270383E4394935A139A81D078BF7A96919E2F433A3CAAA3470633AFC
CBE566EA615983FCC78522E37C3BC4DAA645ED8C9D0F7CC5D7B2C350EDB264E5
12DC44E80F76209DEB62F4257E763DC8F02E61F085351C7246639D4289A2C2F1
AB53ED7907883CB84C440DD461676F8BFD69C9810CAF74E532409729CC3874BB
22276BEBBA69FEF64FD6F899819D2049C21A53D4D859F6B6531884AD03A2EC3C
CE27A5DC3F9009BB2158BBF4EDF7A873351BA0AC7AC9BEDD82940416C27198DD
0FE2FF157E7D842DBB6B07E4AF29DC22432C3D97BFA325CE803A7F9B21C1B63F
ACBD884E11CF8A11BDF38D573B31B0EFBD1CECFC30BA92D8B1FFF9210064C034
1CA5E2199F4B702F498FAF2AF5992B504E5D66C0D66C43DF5925416507790272
4C86D8481B6083EA6BA5030FB193C27ED37FFC8A3F82D9BCB80599F267ACE91E
545A88DBBCD2DEFA0D991F1E27CF73F513C7C7AC3D54F9F0822301F65A97E60D
4CA17A8E82D3876F198A7CA9F3AD7FF18C5B690EDF00F3FE91D84DBEA3BE6805
C7471EB138F6D19C37AA2958CF6D9E64337B697FD0157900802B58420E46774F
635438606F5662773B0D8FBCDAF747B9C6BF1CAECD24F2B661104FD0D8E3056B
18DBEB96AF8DB3E612672FF483F38F0117BF01A3FBD763C3ABDD54CD78D99A38
6D14B878303E7BE2E38B4D7816860BD2B81A9BFBA0BFB41636CA8F953847C45D
7900C15EE8608BD11F889FCF81BD3E44F99BCA79FC370E64841C1F6D36253116
AA06FEE2322A3D7548FB07D08F84F171FE1BD8DE0D983872C58A3EF67DB82ABB
80A69B70005182D52272F0719702F30101A26B8F5C41E3154696B11312F04475
B81EF61B0EB409B4F4E6FA820EE66BEAE61692C0186954238149F3D184750C57
79945A761AD219B55726D5D8A3D4E68A606D4AE3845E11A5B31F74937A2111F4
B06818ABDF931A7958012730798DC4F2B1A2AE2AD6F3AEF764419FB5508E3E98
24AD9C96F5F9BD153187136363CFDE4E2176CABBC645E1717EB5ECC6B3CA3909
BCAFCEBB3912E97F2E3A24373E0D4C94ADD5015709006526EFDE95D5BAD1F29C
3E1645A43DDD9A57D6E4EB10CE7B2A26FA55773FAD20B44F3E1FC32F8B65CCA0
52995434201BFE5B5819873E7C3734A4B7CE700557B7B06D6D7863A322E86330
BDEC7A56F7F293C9F48D856E77570D8F9B92CFFB07AFDB768B7D480466AF16BE
FE7DA46AFF92CE38925D720E85EFE7654A90D617BA671F65F130FBF5F080CCF1
4C9F68247FBD11DEA4C45FDFC52F1C1FA90EA87CDB6A9D45D8835AD771EE3105
BCF2A9650A3B6ED5647B4F18768E3B0D0A13DF6D41EF2F0037C5BD0725F68F32
F478FEE64F17EBDD288E453D520A7433FC7E0BAEA7DEEE96EE967B87F8800BE4
E80D4E5932DE6A11FBC73B645D027DD8FAB4DE210412D6AEE7B21697413DF2BB
54BE73956C0163B94966180CAE7478EC24E9F38D885CC0AFD3B2D90C0A97488D
EC333478758BCB7931CE7EDA5C06CD33A3DB7BF55A35BECFED3BE56B185B4772
DC69FE9D036ABC02964C44DCDC185794509AA81D0F66FF0B0A15483141588246
F715BA7EB744F1378CA05D4D310CF5C8E31D03B1F9578E5666B11B3E5D20E48C
04C74B4BA685099F897E691A8F76F28586E27195E50443F3EC18EA249535BCF1
A7BA7478A128DBB5EC86271CAB03DB20768E2ABBCF83DE5134DD9707BEE28E40
75605559946B65B1A9791960AE4B6EAF7545D6AB227891D7474D56C194F9328D
7E1263F64742781A5B0C4E94CC4A9256054D6370E9041410C9471A3DCB3F3AD4
C9C542AB14210777D907055650B89FC2DFC8C02FC575920BC2387EB5DFCEDC73
7E1C81E91F5768E8BB8E74B005B91F924C6FD2792DA2B5A3FA88B92B9F15B2E0
B2F1350A99EC54ABA12E95AE7A0C0EBB9B9EBF6D4EDF4B5CB55B9520925ACBA0
AE01C241407467D7A30F4A6E91A9F37E1F90CDFBDC8C5C97908B4C8C3465C274
B1E9AC1FE1B8D2C20A51F7612D2CB828D8667FE81DAC9C2731E4B4C116DFAA1C
8AB735BA47CF3DB238F7162A17A5EC22D2AA61A5C669723C1A3FA5BAEB7BA0D0
7F3A20CE2A7D6EA5C44E43EB44C8B360294D81DD87487E333B2D33AEC1CFE6A7
E5A4D6E55A3CC9A7D32366CEDBECF5C064B80355DC186EE6D5E8C11426E5B49B
02A734B9C5C62DCF5CA6F964E864F24D6733E9BCB203D3F28F43D026CF5DCF6C
EE0DB67E77C667C55FC6724FC64C8680B06D5BEA5D6D4253B1830156F9CE36BB
6ED2F8B6CBFEFB6D46253A6023FBC7A993560578864196B035C2D131A22F9DDD
18A1C7B79FBC9ABAB0389113CE64FD3461DC95E443D5E9670F5373B2E1C38574
BFA813E7F0F1F94C08EA84C689E5899FC77E530546B6226E4A9B54895AC51B26
3044E7C6DBB0F2ECC0F2C5F6FB9674B89A9CE299EDB0FA2A66F1C3A45674138C
E1AAB9DA79F056F3976DE2BD47EE69B2F80C2BBE503ABCA41845A090B7DCE6ED
9D75BC1D07BC5E0A052B67A05DAF77FBAA54FCC8236CD75D05914561855D5829
CAC3B1A1BE1BB1C38DA4F1E472BA396706909EE353B8F5439733055ECAA043EC
BA7A8064177DFB2ACA4361F0F8617943084F59093BCDBEBAC82EA0D9E4E7E464
82FCD6E01E7987FA3C4CEA4597496D6A2BFCF62D944549BD2E4EB2AA930DE0C3
5C42A7DF8FA5C2E3BA18431032B61ADED764E2136CCB5BEFB343CE0D53BAC797
ABB9BBCE4DFCFAFC3F4BDA0AEAFD9B543F19E81A7F428F2D49AEEFA6869E0D30
CD7FA413735AC2062E06CCE50C5BBDAE181B6027B1F5247E7BA8DD0D8F11CF51
34F7B10686DF165C0DC9AB650F463F34C46227A845F39A73AA2D324495E1AAFF
A4674879501DF3AE9C21771711929E2CF4E6A96D7EA75BA2768BD64DFBF28055
82EF5CD041BDD4983B73C0403106FEE93F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/UniqueID 5000768 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158223A6FA88131B1F171E129FD3D93F1D96C7B9CA647E44F7C88DC08AE8DD
9AD5CEE1CEBF48DE25B2081C4DE68DB262D48140DDE065ED14BC49D1C31A9141
525C7DA98CCE8E3196392E7CC944A3871381AB89F49649486C002BFB9868AD7D
CB5C1AAF8099653AFC4BDE0B934DBC586BB0734DEDA5444334FB5421F83930B5
CFAD1BB49419E3CF459EF266D04FBDA4D467D56929A551B8800C7A6C788A2048
7BEA2C74D7CDCB0EFE22E31292C3C35D79F9289601D571837A508EBF531591F1
A56E7D1E22A65FB87F2741DB017FE6C5895D6B38283878928E69D0B4B7D9FCE1
5EF46B077F00A027FF49E581739F38141B8B4B03A97451C9296C2100009D54C0
722BEC75EC3DD97F90FEC0044612E8EB5CA65ED931CC5E0FE1F28D6567509735
B6D2645F8EA27F25C4422B243192B9041EE87B67934AFFDAE5D2205E9E7DAD8A
3C087831F46724D977E6B768F35E7566E858B2CC4E9DD3BFC7614951C2A139B6
8C1936059511BE83E22175FD33DE7F72835EB14C8D5C3926CD47F8CD3FCB12D0
CC866F1414B3ADB8D0C7057CA3ED41F50F51F98245557B7C88B47FB90B939217
1DBF9964BBEC03013F324BD4B1E3053CE5935AE0DE2D8839376A78D70FA44F19
74ABA413D6624884D32EC1130C4E43A7FCC0FFCB223701D9052A758A98DD2884
28DC05CC52F59D616EF85F9DFBC28C80EBF44CB95368A12024C0BB437E97A0EB
B4121AF68EDC8F75DF47CCF6216626AAAFA4DFC47FF9D123C26CAE4B8FDD306B
66B9355E59A1D98F1F7053697D44C0741B8F28EE7DB9F2761DD12FB60ADA0247
C9FB6C645E702EC701B68DB40148C9FE39D955FE41A893432B8CB5E80FBFBA2F
FF1155EDDEFA2EF538083B9CB3ECF0786C7F4EF8C2A5A242E84CFD4DC50ADFEA
0C2ACBAD7686A3C54532B07F8856E3D629286E320BE4C005197209E047724453
58B5F9DE15A8D07B47ED81BD81CDBC0A6BFF8EF29877FA13D418CAED879EBB38
2A0600F3123E5BB8ACC107D8B722419A9C1F8EBE330CB37E572A8DB0D0565F05
E271CF122E3770490B395E4B6753DCA4A6667BB22C841A91A8AC118812C9BB0E
89F3D077266A39B34F4B3F800F4C6613C9390DD953FFA0EBCDCED96FF1576600
F1389BAC04F9EFA74966998231F43AB56A939CEA08AFA133FBDC57CD092B3743
A235A8448523E4FB61522B51536AD69F860DA406B0B75A27CEE1E7B75A2C332D
7F0A2D13ACAB1D2ABF05489EEEE1EE3B133ED53C51EAB75CF06C2B39A08C17B2
1FF5BBADD8023AB9D1FCF2AC39103594EC513B8D0E3767D8880357E5017147E5
372F54B764A8DECC5CE6F99021DFFBB66ACDDAEDF48DF5462FC528DFD9CBDD74
BFD2C45FD1A30675D11E8F2817E361F92C4EF485C8FD1E8D1BED5B24BC6E9028
702C35FE1AD1E853FF97236F55AF6FBCD9AF0E167742D0BD0E131BEBE6A3EBCB
36C819ADC8129883E984EC2061DFB9076663755FA79860C1C2C5C6B21B02CD81
95B2DFC7EE69059FF0772237BF80D6DDCA23C442FC7F602F7454B539410E44CC
26D3A3E0F450318BD182CB6F86A9427036BFF3BC35087D6FD299F59348E83D03
5D239244B1CFE54978102D98A02AC42F97E0A60594F529E8FF51941EDBB2A2F8
5ECF808E3F4FFD94B01957CD3FB55AC860F03B25E84E1FD6B673162DB60C0DFD
D137447C06EBD7A93A6C0E4A2AE7B93036E9A47C8B46867E4755F9209521010A
9DA6BAAF89C49B6ACB4DC451F9C298E764FA16D597879F762BF740A42AAF883A
B9A38A4C8F080133CF33344CC6DB7EEF07FC3A6FCA1100129D7F1AF9F3739F06
3D8D05B59B2A9DF0298F4DDA3A412FF4F71DC5AA368E0EA45AE3A0C9A76C320D
DC35376D4AE23E173182D4D98D4C5EFA0825D933E8F580318F2172FC810D8660
4C883BCDADDB6EF52427E0B6EF01893AA6D9E4B7582ACD74AC46BE3E8161DEF9
4D00C992E57075394491E440BC1FAC67742DFC48851CF2FB3FD9B134E7F7B9B3
49EB005E2E7957E228D691615958EBF63E296F9109677915EDEBA3654EAC3D7D
B0F23F6BA62413A6D32AE3655EE53594884ABCD9438DC463998811CE2124971A
52A5FF779385EB4DA75F7FCBD08EA5AC1920F4E395EB7A69DCE16AF779DB5E9C
C4CF9BCC9CF53232454B14C15C5E30DF58127605F77B4949B3B5E1DC217E8A1F
BD9B828B8E5DDE117195515FAE8AB259EB719E1F850331D50EF2E7C281D0DB7A
23E5BD03AE612624714E9347EB76B1AFBF0CEEF539B3350F8194910480F0F209
BB65AAE476588E98D30769FBC59E4382D77CA2CCE5EF95185D221C638D42440C
823B7E1446292E1E83326540226092FB64E999E27D331F055947FFE8F1569AF9
28D45EAD81CD008AF53351EB618A05E057650C001AB61E0272DCBD10FDD37B53
D2CB167BDAF30596267BBB68A650C1FB977045201E64134B695D6ACDE1BD7924
D3A52987FE058B210EFEA8FFFF18AFDDB577081D617807E103BE297E6EDBC3C0
8E524947A8D9C31E9C0071AB87C5BBEA97ED23CE280BD74C23F90B365B358880
DACB7F100E3DDC8DAA92921A8F4CF9FF67EE19346E6C98F132FCC9604D1645F1
AC5F879222847F8559607318973C5D9C36CD4C01B2B574AB854D1EB1AFA04C2F
1C40C4613ACE33437D14CC1177FE18A11431E4DCE16EA58A6EF30F424F91F39F
A44D0259E280000A2F51AF645F040911179C7CE6C0543CD1D732913AA47F13E1
914E22BFBCF0725FD97207BC9A0A700B1E0AEE2C1CA87487E8C2EEAEF6EAC61F
D8B86B506558C071602BC451C59A34F8E73A164C8BABB08359F67965DC08B417
31A48D9D969A7CF79B2232EFA81C92EEEB392214939ED7C5F9C8DE18FF877F23
1781F1A617F978A6837D8F353740E5AD450B9D341B3FA304A7939A55C1361C9C
C3DC569CF155DD833947108C6B3C5DF89E718FC08A4216AE5798EA85F5F07DDC
D1F73129177E79DA3C2D3E81F80B958735DC19D6C6702A7AA43008E3269EA5C4
50E621F7DFE27E56CB917FFB74A100116A49D89E11857F08BA082D9768CDD6FF
1B64EEE327225111BBA935857F7F945BC6900924CB8DD891B2BC3A900B412B53
DDB3C7E7CE47FE43965181657E06559BEE2F1E3CE6C90702F3F88600CA6F9594
2F44CD6D53FCC7ED31FD0184F53AAF74CC4171C8B0A3320932163A16A7D5D70C
5722EF2F13286CFFEACE21036BDE86DAF6701362C16BDE5646953451CB959412
83ADF2DD9BF34BCCC7B3DE4ECCCC123C7310346444BCE0E824FBF0144A4DD8C0
34AF62F5FBF11ED7DCA9744AAB0FDF77E941210504E4254BC751B622554A1E64
C01A2864291813DC2BFBBE50FD4002CAD1D54C447725D4753D2204557BD7E4D5
6FBC074980E9CB7D5C3230D84CFFC91A119D8FBCE9AB99DEED2E8FCA69836471
97F5B74F3D310350C0CA3DD1357E98A093B5FC6D91C47F604A5359F0626E8713
327D6CBB9A09FEA9D53C6E03584BBB28C04684886771364CC604446ACC6E3CC6
E3077760267EA85DC24BAB59C952B0309F9AA60EDF5F4AB685161E8744A9D7E5
741AEF440F0AED08C26017B13DE83B368605947B083FE852361361C72ABD4EE9
731DD51828900CD8C8BD48620BAEC3DA26ABF2D301AAF21C5BE4712196C5151F
2C9FDE6C75E7A2CE8C43B8A173BDC9C302D715EB69CF3D0E22D47476513A247B
E1507615CD2A43B80A127E623F8400700EAEB89BBDCF9EE0DC443893772DD949
1F5487CDD0F92E29A3FB2B4EDBA8C99AD13C0CEC45A515BA2A60FF3DD8AE1C61
8914CE6DE4A50FEA1232B561965362438D64AAAB59C07E10BFBE9E220F655B4F
8B150A2CADDFB6E0CAC4A52109946BEF3202BDB677A0CD5083C5DEC67837C097
87DCBF51439EE408139EF8354E766ED1375660B6AD0910A85DC3273AEDB2CAD6
891723D9A60C113A0A380795D4C4E357D1068463EC0CBEBFAF6D368B168F61C4
3085EDDBCB93AFEBDCF500015E8621A42DC036172641DC43EC83D265DA0C0D1C
7E860427013F33468CCF910BC03BE30375A58B56300FC4E42E97AD8A265920E0
540795490F50CE29033570F201CB12F83A3347DFEAD96025F8C29B95728C7D65
01286D965D235975102627C7696A35585DDD8FFB69E4A4EDD3DBD6072361A0AA
2AAB3D0334F9F4F0F91450AE0394E9163A8A6DD6EFE5205C3031592AAD2FC98E
6F449DC9DF6EACD7E3FA0DB304712643EB6B1EC35E62058B55AF4BE8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 55 /seven put
dup 68 /D put
dup 74 /J put
dup 77 /M put
dup 80 /P put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 117 /u put
dup 118 /v put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BFCF3BD739E32E7FE909AEE068D50FAC33605FFF98C7D0115FB860178FD03DB9
7985B78E0AC21F2EA065FA841F5928FB85163B2E2D8F850DC7EE313912C45C28
2783F6762C67882EFEDDC7E7567F91C16B16FD8D5A1ABF35B5586307701B91AD
54984598F2AD46FEE3D68A2731BEAA754C8E730FE0E84952EF77930E4118F8D7
2F3AD7552BBA90D0A74404B5696A3929AF269129EAD44ED1A5D8655F916C8FC8
33AAA8AC9CA8A2EB60D299F131D8019FEB315F4D41CB2DA11021C368BA40F4B9
E6ACF209E0F7C86DC471D27A295B9EC17A04E4A958BFFBB621FA6AD0FFB0971C
929ECA6401D0DF54743E42C64F967176CCBE7D344CA7464B03E183EF3E26A286
C5C6BD62ED1C25BF646DA36F0314F29457C2FFCB2E9162D7EA8570C54F7822FB
23E5DFCD5F486A98A79626BD03193E683A5C63F6947CCF09D6C87B7FA840C1D9
CF84DD04DFCAFE1E6319363F4C54E6076E6AF8D8C3C9128EA5CED6F0E7EBCA9C
2A32BB23DD7E279A0DCA3EEA89F53C8223E86E6442E9D50A49E64910A6493446
AEE72A74525C5B39B22256359751142DB818A0D1DD94B941F215FD6583BA33C4
B5E1D0B7FA670CE12C3727640DCF012E9C9A73D4B20E4199888899F5BAE37376
58A536DD12080D7BBABCC5867679A77EB6DF0260F4C938DC6ECA9EBA37C61E65
49CA66A514D4D2BE46CB742FC59269EA00570FD53675AD958A9BCDA1E3BF603D
CFA3E66B18DB6FC5E3D7036DDDF0E1FFFC5529EA37D9D79D7746FC616E2FD069
3B24D8DDDE5F0D3641157D476B0D6E3B31E3EC293154E97F3782E00C16E048D3
3A8C71AA63F0908630F65EA5D6637DE84A4DF324ABA031CC5EE5129123C47C90
32E99B7B87EA88FC09EF79551A91ED7399215F661895ECC7C6C24ABC4DFE04E5
34109DFEDA8C106D9F7C4A6E55833951B8165F84E32FF2F661B8F9CEFE44E5AE
258D5893CFC31908E757B01BAC22A61A2BF34C1C1FBB9B168D3DFF13AA5995F0
1843FA30C1DC4617CE087090197765D763BA62BA4AD43E84630D3338BBE41D63
77CFFC482CBD16D662D67DB0000772222B8A63FF49DBE651DD65B22167208AE4
DD46B9B689253BB08B71F7A4C82C1C63BEF8F5ED1789067877E9631036D1A7CE
09B953BB24DFE5824359B91B4D07477514DD3EE5E40A7413C9F15C0B44B73664
2F4C3EBCAFEF33A3F045646D5A8C13B5C0CBDDE39CA562230CFF61CE19C121B3
788BB7B9CCBF57857D1C2E10E805F99BCA43879764EA4B5B17564D9A54C91FAB
F3F3FDF56BBA42919B726B6614C9394FB9E1F6B837772CFCAAB1E9B3F81E8848
CB5D53D7A05FFC4389E3C82A40702BCF690BE85817A80F9A74669CCC994265D8
9E45C695045B6DC3DB68AE315F1219C34A2FC6050C6039D9062B0C4F9E53BF27
B0CE27C739197C9E41D349005767AA1826940AA9BA5DF195D90472366508B700
58B469712991361A16E6DC3EF173381DC2BF46D44EC8836B216F1841FCE53B8B
0B087E3AB7AEE8AD29B8DA1D247C4CD4FBEE37B1C1FB09BC9FA1CB12A8FA4CA0
6041F239C1D7468F8E37D2FBB5F03AEF59A6AFF01BB11D76083BD2DD31131527
4F8D0AAB6D161A820CBC310E16CEFFC427A139BAF9638BCAB3F64C3F4E2B2D73
EC9A305C623A6286D9E194777E0823FBE24A88139C4EB9D23AB504030D138EAE
F872227C9B6E0A488337293366C47A84B28AFA224C00A7493B3012B1BA2D5F82
1E8424D8ED7C5BAEDB55BD079603A458C50A76BF88B773FE36699CD1DE750A8D
DF61F00BDCB0711458052262CFE5A03F586AE2AEED3510DE3997F00561A8A0CB
443F24AAC12498483147D83B0C6A4D102DD55F3B9415967AD22D53FC7307B88F
1498A17AC4BE6AB365B0C328FDC32A3C909D6E2E4E84CCEB31A5804024F10D23
894166820305211219A8732A3036D38C91CA1CD59BD0AB74964E36C86B397795
BB00BD100F9B66C24BB9F9981CA5B52A519CD82FE4BBD43B0E158FFE9145CF4D
32B1095423BB7C5F1560E7B1CC508A68DC86314BAD1C9954AB5A02E6C24DB40A
3BCB19AF789E08193AB5D2358098687AD89095BB2410EC5654ACC70F54AF33BF
6A467961AB805E28DAD052C982B65346C2EB696072A449E0C23442F96EB1F6DC
440E3C01CE03CC6746E5404BDA39ACACBC93BCE32B56D49768D94E66C073A0E9
B22ED032C13672D4175C5501A4937FA0C7132F316A7E4CB9D9C968CED95385F3
46F585A48F89006A63445D47B356B1B57BDB4558C1B049AFE67E11DAB7E6FB45
886B915AAC9FAA438931208E4BD7D39BB8BDD2CCC745C7C177C4C428FA661313
AEE5740CDD914B6CE1962AC8779D320514B4E0AF677BFB55AD42995407CFD024
10FBC10CF4B0FBA894E28281F74982E9DA7312B8AD135434D446B7B7814F4303
736DBAAA186BF0783AF59B73A0B2B0641E179D09C7D622A574C131C4296D9ED1
B93779FA6BE5721D8C11F60949C075630DE2C3D6776BAC5E11EF83EBE9A6F2BA
C8007653C45CC04D282D0BF82ECDCE8613E0ED7EFA177D46D110732276BE9633
C7687457D9903328AB56EBE2DE1699321C396CF8A67379BFD4E8B46EF6F645E8
73D007E0F6E761DF9F2EF5CEE59BBDE8CCA215D81A87AD44B5A469CD8CE68A92
37F03D4C617DF286D99516EFF971E42C2003EA7BC60FBA37A66FD6797726E4A5
280D47B95B7C10BE676A4F6FC7E472308F1BBFE1457B3DD7FB22BA4BDD28DFAD
08DE6848398EB81FB90C8EDD8837C4B94C78727F4618D007BE787CCEA93FB2A8
BA5A3CD8F21BD8E79E8F088C8639D0A0C543651EE0EA6B2BFED2E7643D409038
3C7626E4331A032CCA99C8FA38035F431876652152151EF46102908DA4C66DD7
97D7A76E275987332BEF6B2D413187EBC0D40BEA8607AB962836E6CD43160425
E6DB3AF639E2027C4347D5CCAC45B1EA58C73C4122943AB8EF8DC1D58D6A2792
ACF63B7A6668CF8B7AACA040705B85590C643E4106D7B4F17D860CCF84CBA034
F43D2305B2AE732035F171217CE4A73BE25185C68FE7C8C47229084D3474127A
73F1CF71E1F963E77C30D9E6F0ED42B21F08B1ED5F50A73E438EB138932E6240
B52D895D207BCD81C33A77BCF434AD65F63714E24AE2625EEDFA948520FAD30C
C99DC8B3516B9538DB76D28A12E673E83558D7AD6A02C7E635C4B9B375724D31
556C51279571BDC4BC7CEC90A6E620E4745C3E63346B5888E63B5860C25D9FB3
BA626BCAE979C9384290B32C6708953F697B90852132843302EEE064AA35A53A
047092ACEB8E9B78A89FDAC0C3DEAB32242279D3357015A1A8E57A89B4B5B5B7
D329645A28F4F96B84508CF715ED7B5DBF519D188E4AA9E27A1E827A9F369296
7DAEF062E33A7C7CF4B4990530CE192EEEE29198FE52F896B85B163144D8EAAC
B8ACCBFB4777C512105F76876315D99E3E47E22D29FABC05AF02DD7F4A6B3976
00CBFF969224A58C8DB9C4EEA42A4C62A77BF1C5EF3B269127D6368E37FEE8AE
BDED21A8E3E13A9045B7DAD6DFF9F8D4A7C048960F4BC2869D2FE5BAEA447034
B30CF8CC4952F574A6AD5840E6A22063B2D719645B665379D41AF62713D59A60
5FBCE153CEFCBAC1525673E91B5142AF69EC50FE9E3EAD0F8F2F0EF35697DB5F
EDBAB576CFC5C2291DF901947973AB25C904C3951B4107BB0484C2CEC32EAD2E
BB3CC4B1B2A4CDD1B8D4BFCF845398291E2CBB916B62BBADE1C82F0FCDA920DD
B4BB94C53C6DE081967E9C79F6B07B21A1C2DEE53D1582E0F464CC25CD912EAB
9E2DBE7C4DD9A2F642A3DD1A96971F8E31913612D2658A96D3093C8B23FFECC1
EB9D1591A7A36663E6C3984B4B917D4B7C27A1DFE59D437DE949464B8BE16CCC
CBEBF5A5820A58C088EB76C9E1DF77D74C869704E3CF56991CB7D0D65A49BE6A
61B9AB79C22B21B0B31ECA213F0728DD3B72F9EFC807D9B994A2B2FED433A5DB
016067708E525DCE0FB74FE6D0301B431B2741865A7EF9492C51AD27262DEF4D
789BF1A1AF4513558F46BCE64D35B8EAE35B409F191B5FAD4339080CDF80198F
30471C52825D3E8D4AA981082C51443B1869EF21D3E0DE65B5C4F4871F067437
094858A2920665F061B9C52EFDEEF48E3475CB366E8A50351DE996DAE81CA568
A9BAE774DD229BBB12F2B84369D74FE1748664A2F2FC7AD08FA891D6A849D202
5182B31F68F062B08E64C06C7903D7EDCA1038FEA46B359C7F65FEC782E3DF7B
ABD02FE9891E0DEA1F7C39576E853082CC701FA83879CC3A9DC8BF0D8BE84AC4
80FC087C3E424C1FE124A0F5F046DBA009F39C3A470F36BBC1CF06AEAB296E02
AA7DC6859E97D7B7274CD67818C093733273C4E822B3A8149187AB275EFA1875
2CA022A9F46A78EEDDEBBE41D1435A9268D954E5453A5CF456C6EE6D72A6E305
A0C4AEB1CFA8C32A91F8CF772F0996D3E92B5347F14AAA768C70CCA67104995B
7AC07CF3029F90928C3AA32305882288C5BCA74CD10361D417EE1DBAB5E6D04C
5866BDC978AC0CB2BD0AFF3CC040F6D90F15060390ED3F7B509C3130FE717016
DC9F4ED0865B1AD704C544262E41A4730316AB516B53C4CC8C9DBDAB85F87043
C99E44AC1D5FB8AEBC64810EED64463C4BF9B6AF177B4CDE6BBB7208988E334F
80087C7583B43CA9A2D418A8F7DF663EA2585E89F1A380CB4028BBB937361B37
3084D61AD88ABA535F97279C135C90862B890ED05CA7DF84F0EA0E3FCD44603A
5F157BAF8BCE2AC7DE0B9F5F30029F2B29DD152AD19C3071180C86A53F21FB81
B96864D956851967B39FC99F08F64100B60DB259D295EC0561F3C58848D55A6A
BDBFCC9089ED3F9D32802AC6E4404AF3F69F5EC3FCC80DB70652B6AB36E96C02
114059B38D50C2E9451A9C6B78CD229C4411C5EB878EC4E821006740C2D685CD
D5070BFB531D8CFA4A52515EB5AD539653AE91E2ED647DC89F7991A5B9FEBD98
8A7E7120FB580A881B606A4DBEA46E9198A5715A8FA1D8EAA133D4EBCB72D9F4
D1001730E3722406F11538D11486495E65296131637C4E3AD8A4E0A02D466E3F
0B68897406059DD34E0996BE7032BA42DE11544BED6E413BD3550546DD4A64CC
12DA5AC6C9EB1385A03A0496569DD5642D434AF542ACC6BA2DB25CEE8B19D157
F5024EBABE3F4C6DA11B19327FE6755528A77A662342AA7C31526AD6790507E5
06B8F0AA44EB332EBE5A294D4AF6874D375EF58896C6954FD2C211ED7C9D8DA4
A7F3B2A00536C3B0ECF49A36F8A5F8542C98DB691FB1D23D4C919D6841E34C2E
9F075ED133B5CC81F94CECF77BC985CB3A24F094DEEF9AEE82BD37A8E8DCCD16
6C12DEF0B88A3B64D1C1C42A13F55D522D61146D2279BD9B39FDD68B2991FFBC
03F52DB3894A989C81A549579202CD5122ECE142BF7A6C0F20B7E5B81EE3E3AE
8B79943B57197342B4A35C1E48D04E51ADE3D0431C3AD31D6A2A7761EEC8F91B
CA10C0A8BB751A215B6FC33F7CBD0DAE2B516520C721520580684031177F4E49
FE364074185D9713FB1330C3DA0F40A854EF17A284BB2638C7BC26E07E2E56B9
F0E9FC11DDD89A5FAF2A210241ACE63914C7EE60F26F7CCEB67380DA53A40AE5
F884A2620B63C13EF9C60759B037640FA922AC7007F6A0DBC5DB3A0FEF24E510
51E6ADCEBB33B7DA100EBFE9E39FF13E29DC064F3CE6A1974B2F0162EBECB6B2
AEBA6981CFA08F45A3DEAB57C36ABF2C09EF92A8818C4A3D0023035EC6E113CB
2D9442535E6701E15BE5B9315174EDF54164DAAC90F1E160E71639D7B0226E01
00DF658722245CC3D5DBEC45D847D7E40D9F62BE1B34225050FAA79B69A67B4F
CB085A3CAF019C0D3985C2644DB78D25F6A88CE56A66C68E7DCD054D3BB563BB
E64DE6D6E47AB59DB3D75977FB0731BE31E532E381700909CABFAA9C7873523B
F01259379248522D20BCD0851BA293F2B3D1141F36FB283B879E39CED2CC2841
5571824152F6A1E51B0D022E4F547A08412463B21EE547E30E7ABDAD4449A7DE
03AF8DFEC57382C3C3B77D9BAD8949BE3D2999BB9D9B1CFD8C6E08566D246E32
0B47FA18F927134221D9A0622383AD76D88AAA7BA10EAE800042F1FAB946A285
FBE32693FC7EA4C4A57A6094986786F0F28DF3EEAE55FC782FE4F748771E0D3A
6A26DCB3F729750668A360506B714276F3DE93806C379C6D70E388F2E8CEEA89
7EFE0247E9CE1ABE83E421EFD140E592E8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/UniqueID 5000795 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 52 /four put
dup 53 /five put
dup 58 /colon put
dup 66 /B put
dup 67 /C put
dup 77 /M put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B5768B77E7B2B812E8C804239B23202AF0EAACB83E7A32BF32493421CE4EDA74
808C7F2D0818FA5CC7B9DE5158BC7A1B7A9C7B95BD29B01BC1DEB37D4EC57C01
38AE5277D067BF0242AD7D07C2EF591D6C3EE87A9D65A57C287DAAF60FDA68A2
1ADE7E7A457B95C7BC603CD8D9A6BD66548E5BB2167E415C21463C22C4459A92
374A9BF3C35E2A4FE2658D8835158A2BE0E39E2553001E83367987705ADB7596
D0E268828757AFC19E45C3C949A68C4F8F52F0A87021F773E844F7E60E12E4EF
FDC0700FA116E97797ADCF647FCA726B45639F0B4AF5301BBBEABDA877B61551
06DFA3A34871D5052A8040E24A0FC633249D6E1029ECC74140F92019D3A4D67D
7D02A567FB66A67AB2E9556E6C9AE40D3CE74A35338B9F9A3F4B89932B9982C8
D4F0302A61C41E33E1C26879D91DADEAA25F850083BE6CC26AE7437664ABBD22
4991097015E0C4F622C41AACE1064C1F5AFC65A5B3302A7D631BBFBAB0CC540D
B65D0E98718F1F3B103B327B3DC2C83E7D3A888053F0D0BDF164DBD65C482C7B
2AF38BCFB2CA224801CEB4D4A4D5B91808476E9AEB5C2F6B7AC6B70F3C41E627
310C98F6FBF4DDEE1D7ED0CE6921B94FD5CDA5E62DFB940A1ACD64BD643F5E9D
DEC9B00A0E69CB9A6A6684BC1B0536556BD458C129234D3773F94F50874AE14E
1915934FA4E505229BC965E14604D397C872C25FB03CD97D37AE7A9705C207C7
F148D6B149554E8FD28AF70E7E5FB147B155D6BE4D356E16B53BE75CC8D8F115
AF179E2BD3C62048876F0A9416806C70326E073B77FC787334F576D31F7852C6
27A80542DEBFE49BE6CCD78C678C5F36E472290FB76ED08BB3C6B692EDE01390
EE99FED78DD91910A1AEABF7239E40957EC518053E9D024954BF681FA77CD563
FF3183075E3F08CA40402B589999F531DA8E59256F388F8480E90BB9A19CD61D
8A9467F914DAE9F2BEF4FFA48A9FEBFB649820FB9C4605406A24C9944D6790B0
2E97CBA79DBFA7AC150CFDA76A4212AEB2B42B92925546D047F2BB2126BDD804
7C7870C2CB8A9BAD850E6585E96D46AD577462EFD14204352A5C7B180E4DC587
0AB2B8A63DAD443CF9171B03330689640A5D4C18451F77FFDDD5C1BA408779C6
0735EBD73C62B9E54F03E6F2234C3BF6021C2BEE99A201C40A60F683D9F8B690
50D0AC520D67A8E23F52BEF6147A4024BCB5AD0B73F12DD902A4F4DB798EC851
E41330690A5E43847A47D4B333D610E4396BB6CD27BBFAD90A5494FF5D106C29
BA73AB02F9F6E32B435A5DD4566D67458568EB373FC9BC0541C15E7C8499D8BD
D4CC852F53207B986E7E906F2CFE808FDC870F6E26B8E147262CF1D060E77DED
9B28D5B8F7165E2CCB01F7589CC0FEFF6A27596E0356F772C35DA48C729655BA
3B884F639003ACBADCBEBEB8F7BDBCDBED04E15FEA9285E11B5C4C599FA3E2D6
F4254CD7F4BA920132798FB2CD154673219232C3DD491C26F3324895A92ABD8B
D9C88C9FBC4F42591976711495E5B70056A52CBB0427B51CD482F977E251C62C
5ECE31A4356E83635ED3ED79936EC182B7A60B6562EFA570864D35CC10F2BA8B
C75D30E26C7CCAE1270DB9FC308F04CFE8710EA6FBFE9B769BEBFCAD6010C031
AD0AA51F26CE7BD12A00265AB49F23FE15F5BF36B4EC9CFE6CD4BCB77AB887E0
32E164F5179C1F02EC9FCD505456AA4F6426334552852D2AEFBE8FF000207ADF
2E800059CADA8B964226A4EA290944E60640E2EFE5DCAC42322079E164D801B6
23765CFD7613589B290082FD81D50546C02FD1F48CE28F3662F9FE9FDC447564
E0CAF9EA14C7465C6FCF796AF600ED71DDF9FCC38035642EB3729E1EC33F015D
FC5760B1CB257884DE06717D02F7B3969AA749E7F2C844850FA1C6A9FAAA0B52
65360828D53D06D677FCB7D7BCFC79B443341F7475741745261C7A3577633082
878A643A6CA7BD57179780E4583EE6A4D08F8FDDC76A5DF30D7BE229F5D72B2D
A8A5613AB500E095F3BB0398A2EB1662964EF8A668FEAAC16F5A38EEEB687A6E
C6212EF53D40714221386249291280D3AE56C5269668BCC459087C67BB282AB1
58D8AE1D20E6AEC09693AFC94355E98B1DDE9F7F84DBEDBDCB516C02DC632A9B
2B3308C6415BC6C30DFABA40C59AA9DEA206A2F834B85428D57335DFF36C2FB6
E77EF8BC91A5D1C94416083A50E73F61A784AEA7CBE0939A043F3E758D4A56BF
8EA1A17156094B02C1FD5F2C8E04066E538126765FE30F360DBE2949D3FC8D7E
A449F756E0E626BB3F42454C5C92DA74A029DF2C05B6CD9337804A71B18DABDE
D0EEBEC559A6D47D9F07130E918717D8F0D6A4AC72F14C3CFDF949C613408505
99926BFB601CC8144448CEAD95339B9C3E050B987E93842BD785F59ED8750DC3
72F177869D29DB7964F36C2E8CA9C892BBFB79B321E5C45CAB48905324CC5616
9D35DEAF08F6D0377EE16BD0B4C8A3B06C6D07950D47C45C19F011C5DCF77E98
9E66B61ADC143C3206DCFC05987CA75BE4CFC4D9AF3F98E4D5B27CDD7163A260
CD7AC52F3FC3BD59412BF01B4A4935F4B13629511F277FE3A950C6B733F2FF10
1B171323BB63B578041F50F45AFF90773374C3ED2AB19AA5DABC7F09F7CF0BDA
58D6FDA6C10AC017808C6E9594198AB10E4EEE3076CAC1F9B449BC0EFA035DB0
9BBF32CF0361CDF437D4AF5E4F9085DB76A9A612D9921A1D2D5650F6D6A8848C
B2E6631C462C90EDE96EB30D25FA1C740C8740ACDA8C4376ECAADA6E7D1908C8
1EFD81BC5B3761C3AFBAACE3A6C2D49023E2929CBF9531C7B6793FBCC1AC57C7
3CBE84AD4EEEFB74DA2E94BFC06548742DFA3A4DADB4063203588B070714AAA1
05C4930B69EC3609F281413ED8167951AD9E21BE5BB64B4E1B47C24A5683D5BE
3BDE0D9312704B38EA7F92F9DFD81A8560A605D7B4D1F39FA67EAE6D11D287DC
9759FE39FE8C9F53D6A66583B5A6B737E1DC6750EBF31CCEDE55787DC09FAEAC
1B07556DC312BB7F51AB36BD36A6F66884517D2B3504F6DB290D408054E2F9AA
9ECCD783DC85AD89719B80B9A767DDC9DCF84DFB064CD9F321DB51CA7D0F2F64
8B03CD64141F1C73B50E2203D236F8B3B4B13DB5954D37EC1F8162122038C10D
AABBA9A55C6A3E12EE02CD7E6209FDCBCBCB87D9F1E32D19CBA74FCF9D6DFEBB
A22DCC68D1E327E5BC689F7AD6B6E5FFE8E6AE9C78D3E2A88919F516058B7716
44E7A651CA181360A421C26AF14F56D9B4021269F268EF9DBF4AAAADA234A7AA
278674528838C2CA8E2B73CE3396A5E3D20BA8165F20A466C44AF5BEDC60C82D
AC1D98B9FD33EB474B43A51B349D702105B0D84DC30BABE24ADCE460200B1FC4
D896C9D84EFD9EC148AF42E8AC307B8B71135C3257B4B32964E733BA805E2E5B
C6F38F075892CFA769983270FB9A3906BCE1A4E1011200AB5FFEACF8FD1CC1F9
A30B81A78FB5D93C17B9C0D1A9B57612CE409C617CF5E0C589402D3309263A16
3F3E46E16963AF99EFA2ADFA959AA5C5A265BA599CFB4586F79B8A82FFBF97C9
7A2BF2AECE3311ECA7833E0E3E95DE2DC5F9E38F6A062E6C317043B18C0B3249
5245504AE1035C72FC694DE38D1FB1F16AAB776989BBEE5A86CB0C8FD21ACEB7
4AE3429467314F80431A3191726BA3CF81752E37231AB10AEB71AADE2DB4F589
E1FD4222BEFA17A55E745CB9E447C5D7E2E09F0C784AA06D305682BE27E5BDD1
70408D11B93A24B3666E8A1282BDA92B5F9E0E5120FF6AFC9C47140A74385996
77A0455036D4D592BA9351E71B17AD7FEC396B2E724C23BD39F2118DE9F5A940
3824DFA1D56D310452FC101B84D7EF841205272DF1501E1BD8276326F62533C1
4688F228F5C9DCF965C6BC8941952396B6D599B63D8A94F28761183B6A41FC7B
E4A90BD3D44E203EB64119A32A87CD8A0D3A2ADCBC2075793ACAF20EE3506A8D
762FC9C22D3C9DD14B53666CFEAC22FEF5DB111DEE20FE045FC4A5F7F18477C2
E386B237E7927BC72688208382114EDC9FE411CDFB9CA8A0282200D23F1DE168
DBA198C79E2A7A806E63A0D6291E5331F493601B888E2DEE6ACB551F5D7565E5
D2436BAD1B8FE356A2C5ADAA56BF71EE469D0A5F96B443F3BC144A17C7178BE6
99F0E2F7B4A88EC950642544248071CA70CED4544AF671A8B9898820D1AFE6FD
C3DCC09A7F84A0945BCAEC12A9B5F373E3DCA264BD024219671C425F9409954D
F16837C4275E94F8A7182EEAD265238DA0BB8B12C99607EBD0CF093E1B8DCB60
92DBFA7F3144DB2B4A8F0D03C8E09949D0D14851087993C27F001A5243A7A6A3
BEDBA269CE9E6AED1D7B25129CBE23D3F26DD1D10521F6828A07FEDE703A0B45
211B87E3AC8EAA73BBBBDD34811751048A622B213EC0BBA3A3B9AD9F89EBBD44
12A403D3909F623BA7E5FA7A4BAC630A8049337FC8E67446238C6F9CDB39DD03
8F922FC6EBA6AAF72A0FA94D5002103C35A877F9FE5438040DBF538347605E60
EDB462F6F94ACD3905B9F4C24EB22F2B7D866A704C8BCD31B0935A7149D29927
29C1604F7265BB22CEC7B33EE6581884E6B965507344D9775EEE62039336BB86
F2EA7508AEA01630A75BF2F89F9C8BA01B9A42036B25757F38270001CF8C1EC2
0142786CE0B0BD234A390DB522BE1C8642C097B9DE0D87C09DD44AC9AF50ADB9
9C329EF51D830209558CEF13A75AA1EBEC419C08F5DEC3EFDBBA79AA92B1C1F6
C1B64632B2FD235B0FC9AF4CAF3C0A06BD18572A2279BCCE07D1CA7D990491BD
46A32CD2DF089B4D2CE54A16788F2889FD457B0E9DD9C0C6C6B0C5EF7A1F21DB
7B9F7E127C65728730730FC5445F6ECCED258D79052F0888E9530A4250A15BC5
9BB4144B661EDD60013B3B39E580F18F6ED890E03A4A8A5D26F6188F80C1118E
A70C9DB809AAC7800DB972A0DD3E3D3EEA8F4AC3633C5CACD34FA4B9634036D7
55A52E90B591B351098C78C34439A2A891F678D078861CFA593DBCF8750FEBBC
E1B7A8E27513391465B80E4AB2ABF3973AA06F42764F9584A5CABE54CB5F1488
5CF1D152F61EF50C1E481A57E6D2380A7FE832BED60A850FC5B6481B0B91C6FA
FFD2C4EC5FB2E08ADD118F230342414846A54C6F9581F8E610C3AF7F4A68E691
1DEDD704393C35C2DF1C7579CA47D8CD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (project5.dvi)
@start /Fa 129[44 44 1[44 44 44 44 44 44 44 44 44 44
44 44 44 44 44 44 44 1[44 44 44 44 44 44 44 44 44 1[44
1[44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44
44 44 1[44 44 44 44 44 44 44 44 44 44 1[44 44 44 44 44
1[44 1[44 44 3[44 44 44 44 44 44 44 44 44 44 44 44 44
2[44 44 33[{}81 83.022 /CMTT10 rf /Fb 131[44 1[44 44
44 44 44 44 44 44 44 1[44 44 44 44 44 44 44 44 44 44
44 44 44 44 44 44 1[44 4[44 44 44 44 44 44 44 44 44 44
44 44 44 44 44 2[44 44 44 44 44 44 44 44 44 44 44 44
1[44 44 44 44 44 44 2[44 44 44 44 44 44 44 44 44 1[44
44 44 44 3[44 44 44 33[{}76 83.022 /CMITT10 rf /Fc 137[71
75 52 53 55 1[75 67 75 112 37 71 1[37 1[67 1[61 75 60
1[65 23[50 4[103 97 96 12[67 67 67 67 67 49[{}26 119.552
/CMBX12 rf /Fd 133[37 44 44 60 44 46 32 33 33 44 46 42
46 69 23 44 25 23 46 42 25 37 46 37 46 42 9[85 62 62
60 46 61 2[65 62 76 52 2[30 2[54 57 63 60 59 62 3[65
2[23 42 42 42 42 42 42 42 42 42 42 1[23 28 23 4[23 26[46
48 11[{}61 83.022 /CMR10 rf /Fe 139[37 38 39 14[42 53
46 31[72 65[{}7 83.022 /CMBX10 rf /Ff 133[43 3[51 54
2[38 2[49 54 1[27 51 1[27 54 49 1[43 54 43 1[49 16[66
2[89 2[50 5[75 12[49 3[49 49 49 49 3[27 44[{}25 99.6264
/CMR12 rf /Fg 138[73 51 52 51 2[66 2[36 1[40 36 3[58
1[58 13[99 96 73 2[90 2[122 9[96 94 7[36 4[66 66 2[66
49[{}21 143.462 /CMR17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title (CS 411 Project 5: USB Missile Turret)/Subject
(CS 411 Project 5)/Creator (LaTeX with hyperref package)/Author (Doug Dziggel David Merrick Michael Phan)/Keywords
(cs411 ``operating systems II'' usb missile turret) /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray 142
-316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 142 -316 a Black 0 TeXcolorgray
Black 0 TeXcolorgray 150 0 a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Background) /OUT
pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (section.2) cvn/Title (Design) /OUT pdfmark
end
 150 0 a
150 0 a
SDict begin [/Count -0/Dest (section.3) cvn/Title (Implementation)
/OUT pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (section.4) cvn/Title (Driver Code) /OUT
pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (section.5) cvn/Title (Controller Code)
/OUT pdfmark end
 150 0 a 150 0
a
SDict begin [/PageMode /UseNone/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 150 0 a 150 0 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 150 0 a 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end
 150
0 a 150 0 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << /PageLabels<</Nums[0<</S/D>>1<</S/D>>2<</S/D>>]>>
>> /PUT pdfmark end
 150 0 a 0 TeXcolorgray 0
TeXcolorgray 855 1946 a Fg(CS)43 b(411)g(Pro)7 b(ject)44
b(5:)57 b(USB)44 b(Missile)e(T)-11 b(urret)770 2312 y
Ff(Doug)32 b(Dziggel)294 b(Da)m(vid)33 b(Merric)m(k)295
b(Mic)m(hael)35 b(Phan)1681 2552 y(June)e(7,)g(2013)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray 142
-316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1767 1750 a Fe(Abstract)150 1932 y Fd(This)38 b(pap)r(er)g(describ)r
(es)f(the)i(design)e(pro)r(cess)g(and)h(implemen)n(tation)g(of)g
(creating)f(a)h(driv)n(er)e(for)i(the)g(Dream)150 2032
y(Cheeky)27 b(USB)h(Missile)f(Launc)n(her.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 1 3
TeXDict begin 1 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray 142
-316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end

150 0 a 150 0 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 150 0 a 83 x Fc(1)135 b(Bac)l(kground)p
0 TeXcolorgray 1929 5349 a Fd(1)p 0 TeXcolorgray eop
end
%%Page: 2 4
TeXDict begin 2 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray 142
-316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end

150 0 a 150 0 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 150 0 a 83 x Fc(2)135 b(Design)150 265
y Fd(T)-7 b(o)38 b(design)h(our)f(USB)h(driv)n(er)e(w)n(e)i(\014rst)f
(needed)h(to)g(do)n(wnload)e(and)i(run)g(the)g(Dream)f(Cheeky)h(soft)n
(w)n(are)e(in)150 364 y(Windo)n(ws.)59 b(Once)34 b(w)n(e)h(had)g
(successfully)f(installed)h(the)h(soft)n(w)n(are)d(and)i(Windo)n(ws)f
(driv)n(er)g(w)n(e)h(then)g(found)g(a)150 464 y(USB)j(sni\013er)g
(called)f(USBlyzer.)67 b(I)38 b(found)g(that)g(the)g(follo)n(wing)f
(Commands)g(con)n(trolled)g(the)h(USB)g(Missile)150 564
y(Launc)n(her.)275 663 y(Up:)f(01)27 b(00)f(00)h(00)g(00)f(00)h(00)g
(00)275 763 y(Do)n(wn:)36 b(02)27 b(01)g(00)f(00)h(00)g(00)f(00)h(00)
275 863 y(Left:)37 b(02)27 b(04)f(00)h(00)g(00)f(00)h(00)g(00)275
962 y(Righ)n(t:)36 b(02)27 b(08)g(00)f(00)h(00)g(00)f(00)h(00)275
1062 y(Fire:)36 b(02)27 b(10)g(00)f(00)h(00)g(00)f(00)h(00)275
1162 y(LED)g(on:)37 b(30)26 b(01)h(00)g(00)f(00)h(00)g(00)f(00)275
1261 y(LED)h(o\013:)37 b(30)27 b(00)f(00)h(00)g(00)f(00)h(00)g(00)275
1361 y(Filler:)36 b(01)27 b(00)g(00)f(00)h(00)g(00)f(00)h(00)275
1460 y(Stop:)37 b(02)26 b(20)h(00)g(00)f(00)h(00)g(00)f(00)275
1560 y(The)32 b(next)h(step)g(w)n(as)e(to)i(create)e(a)i(driv)n(er)e
(that)i(w)n(ould)f(use)g(the)h(ab)r(o)n(v)n(e)e(commands.)52
b(F)-7 b(or)32 b(our)f(design)h(w)n(e)150 1660 y(found)23
b(co)r(de)f(that)h(w)n(as)f(written)h(sp)r(eci\014cally)f(for)g(the)h
(Dream)f(Cheeky)g(USB)h(Missile)f(Launc)n(her)g(on)g(Lin)n(ux.)35
b(The)150 1759 y(driv)n(er)23 b(w)n(as)g(set)h(up)g(to)g(initalize,)h
(remo)n(v)n(e)d(and)i(run)g(input)h(commands.)35 b(The)24
b(\014le)g(op)r(erations)f(w)n(as)g(set)h(up)g(to)g(tie)150
1859 y(the)k(userspace)e(with)i(the)g(driv)n(er.)36 b(W)-7
b(e)28 b(had)f(t)n(w)n(o)g(userspace)f(programs,)f(one)j(to)f(bind)h
(the)g(missile)g(launc)n(her)e(to)150 1959 y(our)d(driv)n(er)f(and)i
(the)g(other)f(to)g(con)n(trol)g(the)h(missile)f(launc)n(her.)35
b(F)-7 b(or)23 b(the)h(missile)f(launc)n(h)h(con)n(troller)e(w)n(e)h
(decided)150 2058 y(to)i(con)n(trol)f(it)h(b)n(y)g(holding)g(the)g(k)n
(eys)f(do)n(wn)h(rather)f(than)h(sp)r(ecifying)g(a)g(direction)f(and)h
(a)g(time)h(to)f(mo)n(v)n(e)e(in)j(that)150 2158 y(direction.)150
2283 y
SDict begin H.S end
 150 2283 a 150 2283 a
SDict begin 12 H.A end
 150 2283 a 150 2283 a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 150
2283 a 149 x Fc(3)135 b(Implemen)l(tation)p 0 TeXcolorgray
0 TeXcolorgray 150 2797 a Fd(The)30 b(struct)g(usb)p
696 2797 25 4 v 30 w(ml)g(holds)g(all)g(of)g(the)g(di\013eren)n(t)g(v)
-5 b(ariables)29 b(asso)r(ciated)g(with)h(the)g(USB)h(device.)44
b(It)30 b(holds)g(the)150 2896 y(name,)d(in)n(terface,)g(IDs,)h(n)n(um)
n(b)r(er)g(of)f(times)h(op)r(ened,)g(lo)r(c)n(ks,)f(and)g(p)r(oin)n
(ters.)275 2996 y(The)32 b(struct)g(launc)n(her)p 1008
2996 V 28 w(table)g(creates)f(an)h(en)n(try)g(of)g(the)g(form)g(usb)p
2444 2996 V 30 w(device)p 2698 2996 V 29 w(id)h(and)e(inserts)h(it)g
(in)n(to)g(MOD-)150 3096 y(ULE)p 326 3096 V 30 w(DEVICE)p
685 3096 V 29 w(T)-7 b(ABLE,)28 b(whic)n(h)h(tells)g(the)g(k)n(ernel)f
(that)h(this)g(driv)n(er)e(co)r(de)i(is)f(able)h(to)f(supp)r(ort)h(the)
g(sp)r(eci\014ed)150 3195 y(hardw)n(are.)275 3295 y(The)e(struct)h
(launc)n(her)p 999 3295 V 29 w(driv)n(er)e(sets)h(the)h(name)g(of)f
(the)h(driv)n(er)e(that)i(supp)r(orts)f(the)h(hardw)n(are.)275
3395 y(The)j(function)h(launc)n(her)p 1091 3395 V 29
w(ctrl)p 1245 3395 V 29 w(callbac)n(k)e(will)i(grab)e(the)i(usb)f
(device)h(from)f(the)g(request)g(and)g(then)h(set)g(the)150
3494 y(usb)g(to)h(ha)n(v)n(e)e(correction)p 977 3494
V 28 w(required)g(=)h(0.)50 b(The)33 b(correction)p 2085
3494 V 28 w(required)e(\014eld)i(is)f(a)g(v)-5 b(ariable)31
b(for)h(setting)g(up)h(the)150 3594 y(pac)n(k)n(ets)26
b(that)i(are)f(sen)n(t)g(to)h(USB.)275 3693 y(The)g(function)i(launc)n
(her)p 1086 3693 V 29 w(ab)r(ort)p 1312 3693 V 29 w(transfers)e(p)r
(erforms)g(c)n(hec)n(ks)f(to)i(see)g(if)g(the)g(usb)g(device)g(that)g
(is)g(passed)f(in)150 3793 y(the)h(argumen)n(ts)f(exists,)g(if)i(its)f
(udev)f(exists,)h(and)g(if)g(it)g(is)g(actually)f(connected.)40
b(If)30 b(so,)e(it)h(will)g(set)g(the)g(USB)g(to)150
3893 y(b)r(e)g(seen)f(as)f(no)h(longer)f(running)h(b)n(y)g(setting)g
(in)n(t)p 1716 3893 V 30 w(in)p 1815 3893 V 30 w(running)g(=)g(0.)39
b(It)28 b(will)h(then)g(kill)f(an)n(y)f(curren)n(t)h(request)f(b)n(y)
150 3992 y(lo)r(oking)g(at)g(in)n(t)p 646 3992 V 30 w(in)p
745 3992 V 30 w(urb.)275 4092 y(The)c(function)h(launc)n(her)p
1075 4092 V 29 w(in)n(t)p 1203 4092 V 30 w(in)p 1302
4092 V 30 w(callbac)n(k)e(will)h(tak)n(e)g(a)g(request)g(and)g(prin)n
(t)g(out)g(debug)g(messages)f(that)i(alert)150 4192 y(the)31
b(function)g(is)g(called)f(and)g(state)g(what)h(the)g(data)f(and)g(n)n
(um)n(b)r(er)h(of)f(c)n(haracters)e(is.)46 b(It)31 b(then)g(prin)n(ts)f
(out)h(the)150 4291 y(status)22 b(of)g(the)g(request)f(and)h(if)g(the)h
(status)e(is)h(something)f(reco)n(v)n(erable,)g(it)h(will)g(try)g(to)g
(resubmit.)35 b(It)22 b(then)g(c)n(hec)n(ks)150 4391
y(the)33 b(request,)h(lo)r(c)n(ks)e(it)h(for)f(use,)i(and)f(c)n(hec)n
(ks)e(the)j(p)r(osition)e(of)h(the)g(launc)n(her)f(in)h(comparison)e
(with)i(the)g(max)150 4490 y(ranges.)h(If)26 b(the)f(launc)n(her)f(is)h
(at)g(its)g(max,)g(it)g(will)g(disable)g(the)g(command)g(and)g(mark)f
(that)h(correction)p 3429 4490 V 28 w(required)150 4590
y(o)r(ccured.)36 b(If)26 b(correction)p 937 4590 V 28
w(required)f(is)h(set,)g(it)g(will)h(insert)e(the)h(command)g(to)g
(stop)f(the)i(direction)e(of)h(mo)n(v)n(emen)n(t,)150
4690 y(unlo)r(c)n(k)k(the)i(data,)f(and)f(then)i(submit)f(the)g(new)g
(request.)46 b(The)31 b(resubmit)g(will)g(send)f(what)h(is)g(curren)n
(t)f(in)h(the)150 4789 y(request.)275 4889 y(The)g(function)h(launc)n
(her)p 1091 4889 V 29 w(delete)g(will)f(call)g(launc)n(her)p
1988 4889 V 29 w(ab)r(ort)p 2214 4889 V 29 w(transfers)f(to)i(cancel)f
(all)g(transfers,)g(then)h(will)150 4989 y(free)27 b(all)h(data)f
(structures.)p 0 TeXcolorgray 1929 5349 a(2)p 0 TeXcolorgray
eop end
%%Page: 3 5
TeXDict begin 3 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray 142
-316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 275 83 a Fd(The)31 b(function)g(launc)n
(her)p 1090 83 25 4 v 29 w(op)r(en)g(will)g(create)f(p)r(oin)n(ters)g
(to)h(structs)g(usb)p 2560 83 V 30 w(ml)g(and)g(usb)p
3003 83 V 30 w(in)n(terface.)46 b(It)31 b(creates)150
183 y(an)f(in)n(t)g(v)-5 b(ariable)29 b(called)g(subminor)h(and)g(sets)
f(it)i(to)e(the)i(MINOR)f(of)g(the)g(ino)r(de)g(ino)r(dep.)44
b(It)31 b(creates)d(a)i(m)n(utex)150 282 y(and)40 b(attempts)h(to)f
(\014nd)h(the)f(in)n(terface)g(of)g(the)h(minor)f(using)g(usb)p
2362 282 V 29 w(\014nd)p 2529 282 V 31 w(in)n(terface,)j(then)d(tries)g
(to)g(\014nd)h(dev)150 382 y(using)29 b(usb)p 499 382
V 30 w(get)p 640 382 V 30 w(in)n(tfdata.)42 b(Afterw)n(ard,)29
b(it)h(will)g(lo)r(c)n(k)f(the)h(device)f(using)g(do)n(wn)p
2669 382 V 29 w(in)n(terruptible,)h(then)g(incremen)n(t)150
482 y(op)r(en)p 328 482 V 30 w(coun)n(t.)k(It)22 b(then)g(instan)n
(tiates)f(the)g(in)n(terrupt)h(URB)f(and)g(sets)g(itself)h(to)g
(running)f(through)f(in)n(t)p 3321 482 V 30 w(in)p 3420
482 V 30 w(running.)150 581 y(It)28 b(submits)g(the)g(request)g(in)g
(in)n(t)p 1184 581 V 30 w(in)p 1283 581 V 30 w(urb,)g(then)g(sa)n(v)n
(es)e(the)i(ob)5 b(ject)28 b(in)g(the)g(\014le)g(p)r(oin)n(ter's)f
(priv)-5 b(ate)p 3252 581 V 29 w(data.)37 b(It)29 b(then)150
681 y(unlo)r(c)n(ks)e(the)h(device,)f(unlo)r(c)n(ks)g(the)h(m)n(utex,)g
(and)f(then)i(return)e(the)h(result)f(of)h(usb)p 2787
681 V 29 w(submit)p 3065 681 V 31 w(urb.)275 780 y(The)22
b(function)h(launc)n(her)p 1073 780 V 29 w(close)f(will)g(create)g(a)g
(\014le)g(o)n(v)n(er)f(to)h(the)h(device)f(and)h(grab)e(it)i(from)f
(the)h(\014ler)f(p)r(oin)n(ter's)150 880 y(priv)-5 b(ate)p
407 880 V 29 w(data.)51 b(It)33 b(c)n(hec)n(ks)e(if)i(it)g(exists,)g
(then)g(lo)r(c)n(ks)e(the)i(device.)51 b(The)32 b(op)r(en)p
2653 880 V 30 w(coun)n(t)g(is)g(c)n(hec)n(k)n(ed)g(to)g(see)g(if)h(the)
150 980 y(device)d(is)g(op)r(ened)g(b)r(efore.)45 b(If)31
b(the)f(device)g(isn't)h(moun)n(ted,)g(then)f(it)h(will)g(unlo)r(c)n(k)
e(the)i(device,)g(delete)f(it,)i(then)150 1079 y(exit.)37
b(It)28 b(then)g(calls)f(launc)n(her)p 1123 1079 V 29
w(ab)r(ort)p 1349 1079 V 29 w(transfers)f(and)i(unlo)r(c)n(ks)f(the)h
(device.)275 1179 y(The)f(function)h(launc)n(her)p 1083
1179 V 29 w(read)f(will)h(return)f(an)g(error)f(-EF)-9
b(A)n(UL)i(T.)275 1279 y(The)22 b(function)i(launc)n(her)p
1074 1279 V 29 w(write)e(will)i(set)e(retv)-5 b(al)23
b(to)g(-EF)-9 b(A)n(UL)i(T)22 b(and)h(c)n(hange)e(it)j(to)e(other)h
(errors)d(should)j(they)150 1378 y(o)r(ccur.)41 b(It)30
b(grabs)d(the)j(device)f(from)g(the)g(\014le)h(p)r(oin)n(ter's)e(priv)
-5 b(ate)p 2202 1378 V 30 w(data,)29 b(and)g(then)h(c)n(hec)n(ks)e(to)h
(see)g(if)g(dev)g(exists,)150 1478 y(is)34 b(op)r(en,)i(has)e(data,)h
(and)f(sets)g(coun)n(t)g(to)g(1.)56 b(It)35 b(copies)e(o)n(v)n(er)f
(the)j(command)f(and)g(stores)f(it)h(in)n(to)g(the)h(bu\013er)150
1577 y(user)p 304 1577 V 29 w(buf.)54 b(Then)33 b(it)h(will)f(b)r
(egins)g(clearing)f(the)h(bu\013er,)i(and)e(sets)g(the)g(device)g
(command)g(to)f(cmd.)54 b(When)34 b(it)150 1677 y(v)n(eri\014es)26
b(that)i(the)g(b)n(yte)g(has)f(b)r(een)h(submitted,)g(it)g(will)g(unlo)
r(c)n(k)f(and)h(exit.)275 1777 y(The)35 b(struct)h(fops)f(will)h(set)g
(the)g(name)g(of)f(op)r(en,)j(release,)f(read,)g(and)e(write)h
(functions)g(to)f(b)r(e)h(using)g(the)150 1876 y(launc)n(her)27
b(functions.)275 1976 y(The)e(function)h(launc)n(her)p
1079 1976 V 29 w(prob)r(e)f(will)h(set)g(up)g(the)f(class,)h(whic)n(h)f
(con)n(tains)g(the)h(name)f(of)g(the)h(launc)n(her)f(no)r(de)150
2076 y(and)j(the)h(list)f(of)g(functions)h(that)f(replace)g(the)g
(\014le)h(op)r(erations.)37 b(It)29 b(then)f(registers)f(the)h(in)n
(terface)g(and)g(class)f(to)150 2175 y(the)33 b(k)n(ernel.)53
b(If)34 b(the)f(device)g(isn't)g(op)r(ened)g(in)h(the)f(k)n(ernel,)h
(it)g(will)f(prin)n(t)g(an)g(error.)51 b(Otherwise)32
b(it)i(con)n(tin)n(ues)150 2275 y(and)g(allo)r(cates)f(dev)g(to)h(usb)p
1062 2275 V 30 w(ml.)56 b(It)35 b(sets)e(up)i(the)f(initial)g(v)-5
b(alues)34 b(with)g(command)g(set)g(to)f(stop,)j(semaphores)150
2374 y(initialized,)23 b(and)f(then)g(sets)g(the)g(device)g(v)-5
b(ariables.)33 b(The)22 b(in)n(terrupt)g(endp)r(oin)n(t)g(information)f
(is)h(created)f(through)150 2474 y(eac)n(h)i(b)n(yte)h(in)g(a)g(for)f
(lo)r(op)h(that)g(sets)g(the)g(in)n(t)p 1553 2474 V 30
w(in)p 1652 2474 V 30 w(endp)r(oin)n(t)g(in)g(dev)g(to)g(the)g(endp)r
(oin)n(ts.)36 b(It)24 b(allo)r(cates)f(sp)r(ec)h(for)g(the)150
2574 y(di\013eren)n(t)k(v)-5 b(ariables)27 b(in)h(the)g(dev)g(struct)g
(and)g(grabs)e(the)i(serial)f(n)n(um)n(b)r(er)h(from)f(the)i(device.)37
b(The)28 b(data)f(p)r(oin)n(ter)150 2673 y(is)g(sa)n(v)n(ed)g(using)g
(usb)p 805 2673 V 30 w(set)p 937 2673 V 30 w(in)n(tfdata)g(and)h(the)g
(in)n(terface)f(minor)g(is)g(sa)n(v)n(ed)f(to)i(the)g(device,)f(then)h
(exits.)275 2773 y(The)23 b(function)h(launc)n(her)p
1075 2773 V 29 w(disconnect)f(will)g(lo)r(c)n(k)g(the)h(m)n(utex,)g
(grab)e(the)i(inferface,)f(and)h(completely)f(unlo)r(c)n(ks)150
2873 y(the)34 b(device.)56 b(The)34 b(minor)f(no)r(de)h(is)g
(deregistered)e(using)i(usb)p 2144 2873 V 29 w(deregister)p
2526 2873 V 29 w(dev)g(and)f(deletes)h(the)g(device,)i(then)150
2972 y(unlo)r(c)n(ks)27 b(the)h(m)n(utex.)275 3072 y(The)18
b(functions)h(launc)n(her)p 1098 3072 V 28 w(init)g(will)g(set)f(the)h
(driv)n(er)e(to)i(recognize)d(the)j(launc)n(her)p 2787
3072 V 29 w(prob)r(e)f(and)g(launc)n(her)p 3500 3072
V 29 w(disconnect,)150 3171 y(then)28 b(connects)f(the)h(driv)n(er)f
(to)g(the)h(usb,)g(and)f(then)h(returns)f(the)h(result.)275
3271 y(The)f(function)h(launc)n(her)p 1083 3271 V 29
w(exit)g(will)g(deregister)e(the)i(driv)n(er.)p 0 TeXcolorgray
1929 5349 a(3)p 0 TeXcolorgray eop end
%%Page: 4 6
TeXDict begin 4 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray 142
-316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end

150 0 a 150 0 a
SDict begin [/View [/XYZ H.V]/Dest (section.4) cvn /DEST pdfmark end
 150 0 a 83 x Fc(4)135 b(Driv)l(er)46
b(Co)t(de)p 0.25 0.50 0.50 TeXcolorrgb 150 265 a Fb(/*)p
0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb 194 364 a(*)d(Dream)e(Cheeky)
g(USB)i(Thunder)d(Launcher)h(driver)p 0 TeXcolorgray
0.25 0.50 0.50 TeXcolorrgb 194 464 a(*)p 0 TeXcolorgray
0.25 0.50 0.50 TeXcolorrgb 194 564 a(*)i(Copyright)d(\(C\))i(2012)g
(Nick)g(Glynn)f(<Nick.Glynn@feabh)o(as)o(.co)o(m>)p 0
TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb 194 663 a(*)p
0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb 194 763 a(*)i(This)f(program)
e(is)j(free)f(software;)e(you)i(can)h(redistribute)38
b(it)43 b(and/or)p 0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb
194 863 a(*)g(modify)e(it)i(under)e(the)h(terms)g(of)h(the)f(GNU)g
(General)f(Public)g(License)g(as)p 0 TeXcolorgray 0.25 0.50 0.50
TeXcolorrgb 194 962 a(*)i(published)d(by)i(the)h(Free)f(Software)e
(Foundation,)f(version)i(2.)p 0 TeXcolorgray 0.25 0.50 0.50
TeXcolorrgb 194 1062 a(*)p 0 TeXcolorgray 0.25 0.50 0.50
TeXcolorrgb 194 1162 a(*)i(derived)d(from)i(the)h(USB)f(Missile)f
(Launcher)f(driver)p 0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb
194 1261 a(*)j(Copyright)d(\(C\))i(2007)g(Matthias)e(Vallentin)g
(<vallentin@icsi.)o(ber)o(ke)o(ley)o(.e)o(du)o(>)p 0
TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb 194 1361 a(*)p
0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb 194 1460 a(*)j(Note:)e(The)i
(device)e(node)h("/dev/launcher0)o(")c(is)k(created)f(with)h(root:root)
e(so)j(you)p 0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb
194 1560 a(*)304 b(will)42 b(need)g(to)h(chgrp,)e(chmod)h(or)g(sudo)g
(your)g(way)g(to)h(access)p 0 TeXcolorgray 0.25 0.50 0.50
TeXcolorrgb 194 1660 a(*/)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 150 1859 a(#)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 14 w(include)e(<linux)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 12 w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(module.h>)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 1959 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(include)g(<linux)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 12 w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(kernel.h>)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 2058 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(include)g(<linux)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 12 w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(usb.h>)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 2158 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(include)g(<linux)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 12 w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(slab.h>)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 2257 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(include)g(<linux)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 12 w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(usb.h>)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 2357 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(include)g(<linux)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 12 w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(mutex.h>)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 2457 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(include)g(<linux)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 12 w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(ioctl.h>)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 2556 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(include)g(<asm)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
12 w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 14
w(uaccess.h>)p 0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb
150 2756 a(/*)i(Rocket)e(launcher)f(specifics)g(*/)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 150 2855 a(#)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 14 w(define)h
(LAUNCHER_VENDOR_)o(ID)604 b(0x2123)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 150 2955 a(#)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 14 w(define)41 b(LAUNCHER_PRODUCT)o(_ID)560
b(0x1010)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 3154 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(define)41 b(LAUNCHER_NODE)823 b("launcher")p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 150 3254 a(#)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 14 w(define)41 b(LAUNCHER_CTRL_BU)o(FFE)o
(R_)o(SIZ)o(E)299 b(8)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 150 3353 a(#)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 14 w(define)41 b(LAUNCHER_CTRL_RE)o(QUE)o(ST)o(_TY)o(PE)255
b(0x21)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 150
3453 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(define)41 b(LAUNCHER_CTRL_RE)o(QUE)o(ST)473 b(0x09)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 150 3553 a(#)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 14 w(define)41
b(LAUNCHER_CTRL_VA)o(LUE)560 b(0x0)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 150 3652 a(#)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 14 w(define)41 b(LAUNCHER_CTRL_IN)o(DEX)560
b(0x0)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 150
3752 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(define)41 b(LAUNCHER_CTRL_CO)o(MMA)o(ND)o(_PR)o(EF)o(IX)168
b(0x02)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 150
3951 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(define)41 b(LAUNCHER_STOP)823 b(0x20)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 150 4051 a(#)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 14 w(define)41 b(LAUNCHER_UP)911
b(0x02)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 150
4150 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(define)41 b(LAUNCHER_DOWN)823 b(0x01)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 150 4250 a(#)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 14 w(define)41 b(LAUNCHER_LEFT)823
b(0x04)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 150
4350 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(define)41 b(LAUNCHER_RIGHT)779 b(0x08)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 150 4449 a(#)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 14 w(define)41 b(LAUNCHER_UP_LEFT)691
b(\(LAUNCHER_UP)38 b(|)44 b(LAUNCHER_LEFT\))p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 150 4549 a(#)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 14 w(define)d(LAUNCHER_DOWN_LE)o(FT)604
b(\(LAUNCHER_DOWN)38 b(|)43 b(LAUNCHER_LEFT\))p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 150 4648 a(#)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 14 w(define)e(LAUNCHER_UP_RIGH)o(T)648
b(\(LAUNCHER_UP)38 b(|)44 b(LAUNCHER_RIGHT\))p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 150 4748 a(#)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 14 w(define)d(LAUNCHER_DOWN_RI)o(GHT)560
b(\(LAUNCHER_DOWN)38 b(|)43 b(LAUNCHER_RIGHT\))p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 150 4848 a(#)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 14 w(define)e(LAUNCHER_FIRE)823
b(0x10)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 150
5047 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(define)41 b(LAUNCHER_MAX_UP)735 b(0x80)p 0 TeXcolorgray
0.25 0.50 0.50 TeXcolorrgb 521 w(/*)43 b(80)g(00)g(00)f(00)h(00)g(00)g
(00)f(00)h(*/)p 0 TeXcolorgray 0 TeXcolorgray 1929 5349
a Fd(4)p 0 TeXcolorgray eop end
%%Page: 5 7
TeXDict begin 5 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray 142
-316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 83 a Fb(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(define)41 b(LAUNCHER_MAX_DOW)o(N)648 b(0x40)p 0
TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb 521 w(/*)43 b(40)g(00)g(00)f
(00)h(00)g(00)g(00)f(00)h(*/)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 150 183 a(#)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 14 w(define)e(LAUNCHER_MAX_LEF)o(T)648 b(0x04)p
0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb 521 w(/*)43
b(00)g(04)g(00)f(00)h(00)g(00)g(00)f(00)h(*/)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 150 282 a(#)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 14 w(define)e(LAUNCHER_MAX_RIG)o(HT)604
b(0x08)p 0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb 521
w(/*)43 b(00)g(08)g(00)f(00)h(00)g(00)g(00)f(00)h(*/)p
0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 150 482 a Fa(static)p
0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 41 w(struct)p
0 TeXcolorgray 41 w(usb_class_driver)37 b(class;)p 0.00 0.50 0.00
TeXcolorrgb 150 581 a(static)p 0 TeXcolorgray 41 w(DEFINE_MUTEX\(dis)o
(con)o(ne)o(ct_)o(mu)o(tex)o(\);)p 0.00 0.50 0.00 TeXcolorrgb
150 780 a(struct)p 0 TeXcolorgray 41 w(usb_ml)k({)p 0.00 0.50 0.00
TeXcolorrgb 499 880 a(struct)p 0 TeXcolorgray 41 w(usb_device)p
0.40 0.40 0.40 TeXcolorrgb 649 w(*)p 0 TeXcolorgray(udev;)p
0.00 0.50 0.00 TeXcolorrgb 499 980 a(struct)p 0 TeXcolorgray
41 w(usb_interface)p 0.40 0.40 0.40 TeXcolorrgb 517 w(*)p
0 TeXcolorgray(interface;)p 0.69 0.00 0.25 TeXcolorrgb
499 1079 a(unsigned)p 0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb
40 w(char)p 0 TeXcolorgray 826 w(minor;)p 0.69 0.00 0.25
TeXcolorrgb 499 1179 a(char)p 0 TeXcolorgray 1218 w(serial_number[)p
0.40 0.40 0.40 TeXcolorrgb(8)p 0 TeXcolorgray(];)p 0.69 0.00 0.25
TeXcolorrgb 499 1378 a(int)p 0 TeXcolorgray 1262 w(open_count;)p
0.25 0.50 0.50 TeXcolorrgb 563 w Fb(/*)h(Open)g(count)g(for)g(this)g
(port)g(*/)p 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb
499 1478 a Fa(struct)p 0 TeXcolorgray 1130 w(semaphore)e(sem;)p
0.25 0.50 0.50 TeXcolorrgb 435 w Fb(/*)i(Locks)g(this)g(structure)e(*/)
p 0 TeXcolorgray 499 1577 a Fa(spinlock_t)954 b(cmd_spinlock;)p
0.25 0.50 0.50 TeXcolorrgb 475 w Fb(/*)42 b(locks)g(dev->command)c(*/)p
0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb 499 1777 a
Fa(char)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 1218
w(*)p 0 TeXcolorgray(int_in_buffer;)p 0.00 0.50 0.00
TeXcolorrgb 499 1876 a(struct)p 0 TeXcolorgray 41 w(usb_endpoint_des)o
(cr)o(ipt)o(or)p 0.40 0.40 0.40 TeXcolorrgb 80 w(*)p
0 TeXcolorgray(int_in_endpoint;)p 0.00 0.50 0.00 TeXcolorrgb
499 1976 a(struct)p 0 TeXcolorgray 41 w(urb)p 0.40 0.40 0.40
TeXcolorrgb 957 w(*)p 0 TeXcolorgray(int_in_urb;)p 0.69 0.00 0.25
TeXcolorrgb 499 2076 a(int)p 0 TeXcolorgray 1262 w(int_in_running;)p
0.69 0.00 0.25 TeXcolorrgb 499 2275 a(char)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb 1218 w(*)p 0 TeXcolorgray(ctrl_buffer;)p
0.25 0.50 0.50 TeXcolorrgb 475 w Fb(/*)k(8)h(byte)f(buffer)f(for)i(the)
f(control)f(msg)h(*/)p 0 TeXcolorgray 0.00 0.50 0.00
TeXcolorrgb 499 2374 a Fa(struct)p 0 TeXcolorgray 41
w(urb)p 0.40 0.40 0.40 TeXcolorrgb 957 w(*)p 0 TeXcolorgray(ctrl_urb;)p
0.00 0.50 0.00 TeXcolorrgb 499 2474 a(struct)p 0 TeXcolorgray
41 w(usb_ctrlrequest)p 0.40 0.40 0.40 TeXcolorrgb 429
w(*)p 0 TeXcolorgray(ctrl_dr;)p 0.25 0.50 0.50 TeXcolorrgb
651 w Fb(/*)g(Setup)g(packet)f(information)e(*/)p 0 TeXcolorgray
0.69 0.00 0.25 TeXcolorrgb 499 2574 a Fa(int)p 0 TeXcolorgray
1262 w(correction_requir)o(ed;)p 0.69 0.00 0.25 TeXcolorrgb
499 2673 a(unsigned)p 0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb
40 w(char)p 0 TeXcolorgray 826 w(command;)p 0.25 0.50 0.50
TeXcolorrgb 695 w Fb(/*)j(Last)g(issued)f(command)g(*/)p
0 TeXcolorgray 150 2773 a Fa(};)p 0.25 0.50 0.50 TeXcolorrgb
150 2972 a Fb(/*)i(Table)e(of)i(devices)e(that)h(work)g(with)g(this)f
(driver)h(*/)p 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb
150 3072 a Fa(static)p 0 TeXcolorgray 0.00 0.50 0.00
TeXcolorrgb 41 w(struct)p 0 TeXcolorgray 41 w(usb_device_id)c
(launcher_table[])p 0.40 0.40 0.40 TeXcolorrgb 37 w(=)p
0 TeXcolorgray 150 3171 a({)499 3271 y({)43 b(USB_DEVICE\(LAUNC)o(HE)o
(R_V)o(EN)o(DOR)o(_I)o(D,)37 b(LAUNCHER_PRODUCT)o(_ID)o(\))g(},)499
3371 y({})p 0.25 0.50 0.50 TeXcolorrgb 42 w Fb(/*)43
b(Terminating)c(entry)j(*/)p 0 TeXcolorgray 150 3470
a Fa(};)150 3570 y(MODULE_DEVICE_TA)o(BLE)37 b(\(usb,)k
(launcher_table\);)p 0.00 0.50 0.00 TeXcolorrgb 150 3769
a(static)p 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb
41 w(struct)p 0 TeXcolorgray 41 w(usb_driver)f(launcher_driver)p
0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray 150
3869 a({)499 3968 y(.name)p 0.40 0.40 0.40 TeXcolorrgb
41 w(=)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb 43
w(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(launcher_driver)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray
-1 w(,)499 4068 y(.id_table)p 0.40 0.40 0.40 TeXcolorrgb
40 w(=)p 0 TeXcolorgray 43 w(launcher_table,)150 4168
y(};)p 0.00 0.50 0.00 TeXcolorrgb 150 4367 a(static)p
0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb 41 w(void)p
0 TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb 42 w(launcher_ctrl_ca)o(llb)o
(ac)o(k)p 0 TeXcolorgray(\()p 0.00 0.50 0.00 TeXcolorrgb(s)o(tr)o(uc)o
(t)p 0 TeXcolorgray 38 w(urb)p 0.40 0.40 0.40 TeXcolorrgb
42 w(*)p 0 TeXcolorgray(urb\))150 4467 y({)p 0.00 0.50 0.00
TeXcolorrgb 499 4566 a(struct)p 0 TeXcolorgray 41 w(usb_ml)p
0.40 0.40 0.40 TeXcolorrgb 41 w(*)p 0 TeXcolorgray(dev)p
0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray 43
w(urb)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(context;)499
4666 y(pr_debug\()p 0.73 0.13 0.13 TeXcolorrgb(")p 0
TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(launc)o(her)o(_c)o(trl)o(_c)o
(all)o(ba)o(ck)p 0 TeXcolorgray 0.73 0.40 0.13 TeXcolorrgb
-1 w(\\n)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray -1 w(\);)499 4765 y(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(correction)o(_re)o(qu)o(ire)o(d)p 0.40 0.40 0.40
TeXcolorrgb 37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
44 w(0)p 0 TeXcolorgray(;)p 0.25 0.50 0.50 TeXcolorrgb
347 w Fb(/*)j(TODO:)f(do)g(we)h(need)f(race)g(protection?)d(*/)p
0 TeXcolorgray 150 4865 a Fa(})p 0.00 0.50 0.00 TeXcolorrgb
150 5064 a(static)p 0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb
41 w(void)p 0 TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb
42 w(launcher_abort_t)o(ran)o(sf)o(ers)p 0 TeXcolorgray
-1 w(\()p 0.00 0.50 0.00 TeXcolorrgb(s)o(tr)o(uct)p 0
TeXcolorgray 37 w(usb_ml)p 0.40 0.40 0.40 TeXcolorrgb
41 w(*)p 0 TeXcolorgray(dev\))p 0 TeXcolorgray 1929 5349
a Fd(5)p 0 TeXcolorgray eop end
%%Page: 6 8
TeXDict begin 6 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray 142
-316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 150 83 a Fa({)p 0.00 0.50 0.00
TeXcolorrgb 499 183 a(if)p 0 TeXcolorgray 42 w(\()p 0.40 0.40 0.40
TeXcolorrgb(!)p 0 TeXcolorgray 43 w(dev\))42 b({)847
282 y(pr_err\()p 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(dev)d(is)k(NULL)p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)p 0.00 0.50 0.00
TeXcolorrgb 847 382 a(return)p 0 TeXcolorgray(;)499 482
y(})p 0.00 0.50 0.00 TeXcolorrgb 499 681 a(if)p 0 TeXcolorgray
42 w(\()p 0.40 0.40 0.40 TeXcolorrgb(!)p 0 TeXcolorgray
43 w(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(udev\))d({)847
780 y(pr_err\()p 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(udev)f(is)k(NULL)p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)p 0.00 0.50 0.00
TeXcolorrgb 847 880 a(return)p 0 TeXcolorgray(;)499 980
y(})p 0.00 0.50 0.00 TeXcolorrgb 499 1179 a(if)p 0 TeXcolorgray
42 w(\(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(udev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(state)p 0.40 0.40 0.40
TeXcolorrgb 37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(=)p
0 TeXcolorgray 43 w(USB_STATE_NOTATT)o(AC)o(HE)o(D\))37
b({)847 1279 y(pr_err\()p 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(udev)i(not)j(attached)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)p
0.00 0.50 0.00 TeXcolorrgb 847 1378 a(return)p 0 TeXcolorgray(;)499
1478 y(})p 0.25 0.50 0.50 TeXcolorrgb 499 1677 a Fb(/*)g(Shutdown)f
(transfer)f(*/)p 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb
499 1777 a Fa(if)p 0 TeXcolorgray 42 w(\(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(int_in_runn)o(ing)o(\))d({)847 1876 y(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(int_in_runni)o(ng)p 0.40 0.40 0.40
TeXcolorrgb 37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
43 w(0)p 0 TeXcolorgray(;)847 1976 y(mb\(\);)p 0.00 0.50 0.00
TeXcolorrgb 847 2076 a(if)p 0 TeXcolorgray 43 w(\(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(int_in_urb\))g({)1196
2175 y(usb_kill_urb\(dev)p 0.40 0.40 0.40 TeXcolorrgb
-1 w(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(i)o(nt)o(_in)o(_u)o(rb)o(\);)847 2275
y(})499 2374 y(})p 0.00 0.50 0.00 TeXcolorrgb 499 2574
a(if)p 0 TeXcolorgray 42 w(\(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(ctrl_urb\))h({)847 2673 y(usb_kill_urb\(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
-1 w(>)p 0 TeXcolorgray(ct)o(rl)o(_u)o(rb\))o(;)499 2773
y(})150 2873 y(})p 0.00 0.50 0.00 TeXcolorrgb 150 3072
a(static)p 0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb
41 w(void)p 0 TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb
42 w(launcher_int_in_)o(cal)o(lb)o(ack)p 0 TeXcolorgray
-1 w(\()p 0.00 0.50 0.00 TeXcolorrgb(s)o(tr)o(uct)p 0
TeXcolorgray 37 w(urb)p 0.40 0.40 0.40 TeXcolorrgb 42
w(*)p 0 TeXcolorgray(urb\))150 3171 y({)p 0.00 0.50 0.00
TeXcolorrgb 499 3271 a(struct)p 0 TeXcolorgray 41 w(usb_ml)p
0.40 0.40 0.40 TeXcolorrgb 41 w(*)p 0 TeXcolorgray(dev)p
0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray 43
w(urb)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(context;)p
0.69 0.00 0.25 TeXcolorrgb 499 3371 a(int)p 0 TeXcolorgray
42 w(retval;)p 0.69 0.00 0.25 TeXcolorrgb 499 3470 a(int)p
0 TeXcolorgray 42 w(i;)499 3670 y(pr_debug\()p 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(launc)o(her)o
(_i)o(nt_)o(in)o(_ca)o(ll)o(ba)o(ck)p 0 TeXcolorgray
0.73 0.40 0.13 TeXcolorrgb(\\)o(n)p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray -1 w(\);)499 3869 y(pr_debug\()p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(actua)o(l_l)o(en)o(gth)o(:)f(0x\045X)42 b(-)h(data)f(was:)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb 42 w(")p 0
TeXcolorgray(,)h(urb)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(actual_leng)o(th\))o(;)p 0.00 0.50 0.00 TeXcolorrgb
499 3968 a(for)p 0 TeXcolorgray 42 w(\(i)p 0.40 0.40 0.40
TeXcolorrgb 43 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
43 w(0)p 0 TeXcolorgray(;)g(i)p 0.40 0.40 0.40 TeXcolorrgb
43 w(<)p 0 TeXcolorgray 43 w(urb)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(actual_leng)o(th;)p 0.40 0.40 0.40 TeXcolorrgb 37 w(+)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(+)p 0 TeXcolorgray(i\))f({)
847 4068 y(pr_debug\()p 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(0x\045X)p 0
TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb 38 w(")p 0 TeXcolorgray(,)h(\()
p 0.00 0.50 0.00 TeXcolorrgb(const)p 0 TeXcolorgray 0.69 0.00 0.25
TeXcolorrgb 41 w(unsigned)p 0 TeXcolorgray 0.69 0.00 0.25
TeXcolorrgb 40 w(char)p 0 TeXcolorgray(\)\(urb)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(transf)o(er)o(_bu)o(ff)o(er\))p 0.40 0.40 0.40
TeXcolorrgb 37 w(+)p 0 TeXcolorgray 43 w(i\);)499 4168
y(})p 0.00 0.50 0.00 TeXcolorrgb 499 4367 a(if)p 0 TeXcolorgray
42 w(\(urb)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(status\))c({)p
0.00 0.50 0.00 TeXcolorrgb 847 4467 a(if)p 0 TeXcolorgray
43 w(\(urb)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(status)p
0.40 0.40 0.40 TeXcolorrgb 39 w(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
43 w(-)p 0 TeXcolorgray(ENOENT\))h({)1196 4566 y(pr_debug\()p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(receiv)o(ed)d(-NOENT)p 0 TeXcolorgray 0.73 0.40 0.13
TeXcolorrgb(\\n)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray(\);)p 0.00 0.50 0.00 TeXcolorrgb 1196
4666 a(return)p 0 TeXcolorgray(;)847 4765 y(})p 0.00 0.50 0.00
TeXcolorrgb 44 w(else)p 0 TeXcolorgray 0.00 0.50 0.00
TeXcolorrgb 41 w(if)p 0 TeXcolorgray 43 w(\(urb)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(status)p 0.40 0.40 0.40 TeXcolorrgb 39
w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(=)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43 w(-)p 0 TeXcolorgray
(ECONNRESET\))h({)1196 4865 y(pr_debug\()p 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(receiv)o(ed)
81 b(-ECONNRESET)p 0 TeXcolorgray 0.73 0.40 0.13 TeXcolorrgb(\\n)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)p
0.00 0.50 0.00 TeXcolorrgb 1196 4965 a(return)p 0 TeXcolorgray(;)847
5064 y(})p 0.00 0.50 0.00 TeXcolorrgb 44 w(else)p 0 TeXcolorgray
0.00 0.50 0.00 TeXcolorrgb 41 w(if)p 0 TeXcolorgray 43
w(\(urb)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(status)p
0.40 0.40 0.40 TeXcolorrgb 39 w(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
43 w(-)p 0 TeXcolorgray(ESHUTDOWN\))39 b({)p 0 TeXcolorgray
1929 5349 a Fd(6)p 0 TeXcolorgray eop end
%%Page: 7 9
TeXDict begin 7 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray 142
-316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1196 83 a Fa(pr_debug\()p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(receiv)o(ed)37 b(-ESHUTDOWN)p 0 TeXcolorgray
0.73 0.40 0.13 TeXcolorrgb(\\n)p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray(\);)p 0.00 0.50 0.00 TeXcolorrgb
1196 183 a(return)p 0 TeXcolorgray(;)847 282 y(})p 0.00 0.50 0.00
TeXcolorrgb 44 w(else)p 0 TeXcolorgray 41 w({)1196 382
y(pr_err\()p 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(non-zero)g(urb)42 b(status)f(\(\045d\))p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(,)h(urb)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(status\);)p 0.00 0.50 0.00
TeXcolorrgb 1196 482 a(goto)p 0 TeXcolorgray 42 w(resubmit;)p
0.25 0.50 0.50 TeXcolorrgb 40 w Fb(/*)h(Maybe)e(we)i(can)f(recover.)f
(*/)p 0 TeXcolorgray 847 581 a Fa(})499 681 y(})p 0.00 0.50 0.00
TeXcolorrgb 499 880 a(if)p 0 TeXcolorgray 42 w(\(urb)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(actual_leng)o(th)p 0.40 0.40 0.40
TeXcolorrgb 37 w(>)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
43 w(0)p 0 TeXcolorgray(\))i({)847 980 y(spin_lock\()p
0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(c)o(md_)o(sp)o(in)o(loc)o(k\))o(;)p 0.00 0.50 0.00
TeXcolorrgb 847 1179 a(if)p 0 TeXcolorgray 43 w(\(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(int_in_buff)o(er)o([)p
0.40 0.40 0.40 TeXcolorrgb(0)p 0 TeXcolorgray -1 w(])p
0.40 0.40 0.40 TeXcolorrgb 38 w(&)p 0 TeXcolorgray 43
w(LAUNCHER_MAX_UP)p 0.40 0.40 0.40 TeXcolorrgb 37 w(&)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray
43 w(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(command)p
0.40 0.40 0.40 TeXcolorrgb 39 w(&)p 0 TeXcolorgray 43
w(LAUNCHER_UP\))38 b({)1196 1279 y(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(command)p 0.40 0.40 0.40 TeXcolorrgb 39
w(&)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(=)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 42 w(~)p 0 TeXcolorgray
(LAUNCHER_UP;)1196 1378 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(correction_)o(req)o(ui)o(red)p 0.40 0.40 0.40 TeXcolorrgb
37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43
w(1)p 0 TeXcolorgray(;)847 1478 y(})p 0.00 0.50 0.00
TeXcolorrgb 44 w(else)p 0 TeXcolorgray 0.00 0.50 0.00
TeXcolorrgb 41 w(if)p 0 TeXcolorgray 43 w(\(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(int_in_buff)o(er)o([)p 0.40 0.40 0.40
TeXcolorrgb(0)p 0 TeXcolorgray(])p 0.40 0.40 0.40 TeXcolorrgb
37 w(&)p 0 TeXcolorgray 43 w(LAUNCHER_MAX_DOW)o(N)p 0.40 0.40 0.40
TeXcolorrgb 37 w(&)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray 1327 1577 a(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(command)p
0.40 0.40 0.40 TeXcolorrgb 38 w(&)p 0 TeXcolorgray 44
w(LAUNCHER_DOWN\))f({)1196 1677 y(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(command)p 0.40 0.40 0.40 TeXcolorrgb 39
w(&)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(=)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 42 w(~)p 0 TeXcolorgray
(LAUNCHER_DOWN;)1196 1777 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(correction_)o(req)o(ui)o(red)p 0.40 0.40 0.40 TeXcolorrgb
37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43
w(1)p 0 TeXcolorgray(;)847 1876 y(})p 0.00 0.50 0.00
TeXcolorrgb 847 2076 a(if)p 0 TeXcolorgray 43 w(\(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(int_in_buff)o(er)o([)p
0.40 0.40 0.40 TeXcolorrgb(1)p 0 TeXcolorgray -1 w(])p
0.40 0.40 0.40 TeXcolorrgb 38 w(&)p 0 TeXcolorgray 43
w(LAUNCHER_MAX_LEF)o(T)p 0.40 0.40 0.40 TeXcolorrgb 37
w(&)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(&)p 0
TeXcolorgray 43 w(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(command)p
0.40 0.40 0.40 TeXcolorrgb 39 w(&)p 0 TeXcolorgray 43
w(LAUNCHER_LEFT\))h({)1196 2175 y(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(command)p 0.40 0.40 0.40 TeXcolorrgb 39
w(&)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(=)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 42 w(~)p 0 TeXcolorgray
(LAUNCHER_LEFT;)1196 2275 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(correction_)o(req)o(ui)o(red)p 0.40 0.40 0.40 TeXcolorrgb
37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43
w(1)p 0 TeXcolorgray(;)847 2374 y(})p 0.00 0.50 0.00
TeXcolorrgb 44 w(else)p 0 TeXcolorgray 0.00 0.50 0.00
TeXcolorrgb 41 w(if)p 0 TeXcolorgray 43 w(\(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(int_in_buff)o(er)o([)p 0.40 0.40 0.40
TeXcolorrgb(1)p 0 TeXcolorgray(])p 0.40 0.40 0.40 TeXcolorrgb
37 w(&)p 0 TeXcolorgray 43 w(LAUNCHER_MAX_RIG)o(HT)p
0.40 0.40 0.40 TeXcolorrgb 37 w(&)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(&)p 0 TeXcolorgray 1327 2474 a(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(command)p 0.40 0.40 0.40 TeXcolorrgb 38
w(&)p 0 TeXcolorgray 44 w(LAUNCHER_RIGHT\))f({)1196 2574
y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(command)p
0.40 0.40 0.40 TeXcolorrgb 39 w(&)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
42 w(~)p 0 TeXcolorgray(LAUNCHER_RIGHT;)1196 2673 y(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(correction_)o(req)o(ui)o(red)p
0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb 43 w(1)p 0 TeXcolorgray(;)847 2773 y(})p
0.00 0.50 0.00 TeXcolorrgb 847 3072 a(if)p 0 TeXcolorgray
43 w(\(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(correction_)o(re)o(qu)o
(ire)o(d\))g({)1196 3171 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(ctrl_buffer)o([)p 0.40 0.40 0.40 TeXcolorrgb(0)p 0 TeXcolorgray(])p
0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray 43
w(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(command;)1196
3271 y(spin_unlock\()p 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray(dev)p 0.40 0.40 0.40 TeXcolorrgb -1 w(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(c)o(md)o
(_sp)o(in)o(lo)o(ck\))o(;)1196 3371 y(retval)p 0.40 0.40 0.40
TeXcolorrgb 41 w(=)p 0 TeXcolorgray 43 w(usb_submit_urb\(de)o(v)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb -1 w(>)p 0 TeXcolorgray(ct)o(rl)o(_ur)o(b,)g(GFP_ATOMIC\);)
p 0.00 0.50 0.00 TeXcolorrgb 1196 3470 a(if)p 0 TeXcolorgray
43 w(\(retval\))j({)1545 3570 y(pr_err\()p 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(submitti)o
(ng)d(correction)i(control)i(URB)h(failed)f(\(\045d\))p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(,)h
(retval\);)1196 3670 y(})847 3769 y(})p 0.00 0.50 0.00
TeXcolorrgb 44 w(else)p 0 TeXcolorgray 41 w({)1196 3869
y(spin_unlock\()p 0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray(dev)p
0.40 0.40 0.40 TeXcolorrgb -1 w(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(c)o(md)o(_sp)o(in)o(lo)o(ck\))o(;)847
3968 y(})499 4068 y(})p 0.63 0.63 0.00 TeXcolorrgb 150
4267 a(resubmit:)p 0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb
499 4367 a Fb(/*)g(Resubmit)f(if)h(we're)g(still)g(running.)e(*/)p
0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 499 4467 a
Fa(if)p 0 TeXcolorgray 42 w(\(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(int_in_runn)o(ing)p 0.40 0.40 0.40 TeXcolorrgb 37 w(&)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray
43 w(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(udev\))f({)847
4566 y(retval)p 0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0
TeXcolorgray 44 w(usb_submit_urb\()o(dev)p 0.40 0.40 0.40
TeXcolorrgb -1 w(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray -1 w(int)o(_i)o(n_)o(urb)o(,)e(GFP_ATOMIC\);)p
0.00 0.50 0.00 TeXcolorrgb 847 4666 a(if)p 0 TeXcolorgray
43 w(\(retval\))j({)1196 4765 y(pr_err\()p 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(resubmit)o
(tin)o(g)d(urb)43 b(failed)e(\(\045d\))p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(,)g(retval\);)1196
4865 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(int_in_runn)o(ing)p
0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb 43 w(0)p 0 TeXcolorgray(;)847 4965 y(})499
5064 y(})p 0 TeXcolorgray 1929 5349 a Fd(7)p 0 TeXcolorgray
eop end
%%Page: 8 10
TeXDict begin 8 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray 142
-316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 150 83 a Fa(})p 0.00 0.50 0.00
TeXcolorrgb 150 282 a(static)p 0 TeXcolorgray 0.00 0.50 0.00
TeXcolorrgb 41 w(inline)p 0 TeXcolorgray 0.69 0.00 0.25
TeXcolorrgb 41 w(void)p 0 TeXcolorgray 0.00 0.00 1.00
TeXcolorrgb 42 w(launcher_delete)p 0 TeXcolorgray(\()p
0.00 0.50 0.00 TeXcolorrgb(s)o(tr)o(uc)o(t)p 0 TeXcolorgray
38 w(usb_ml)p 0.40 0.40 0.40 TeXcolorrgb 41 w(*)p 0 TeXcolorgray(dev\))
150 382 y({)499 482 y(launcher_abort_)o(tra)o(ns)o(fer)o(s\()o(dev)o
(\);)p 0.25 0.50 0.50 TeXcolorrgb 499 681 a Fb(/*)42
b(Free)g(data)g(structures.)d(*/)p 0 TeXcolorgray 0.00 0.50 0.00
TeXcolorrgb 499 780 a Fa(if)p 0 TeXcolorgray 42 w(\(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(int_in_urb\))e({)847 880
y(usb_free_urb\(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb -1 w(>)p 0
TeXcolorgray(in)o(t_)o(in)o(_ur)o(b\))o(;)499 980 y(})p
0.00 0.50 0.00 TeXcolorrgb 499 1079 a(if)p 0 TeXcolorgray
42 w(\(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(ctrl_urb\))h({)847
1179 y(usb_free_urb\(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb -1 w(>)p 0
TeXcolorgray(ct)o(rl)o(_u)o(rb\))o(;)499 1279 y(})499
1478 y(kfree\(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(int_)o(in_)o
(bu)o(ffe)o(r\))o(;)499 1577 y(kfree\(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(ctrl)o(_bu)o(ff)o(er\))o(;)499 1677 y(kfree\(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(ctrl)o(_dr)o(\);)499 1777
y(kfree\(dev\);)150 1876 y(})p 0.00 0.50 0.00 TeXcolorrgb
150 2076 a(static)p 0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb
41 w(int)p 0 TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb
42 w(launcher_open)p 0 TeXcolorgray(\()p 0.00 0.50 0.00
TeXcolorrgb(str)o(uct)p 0 TeXcolorgray 37 w(inode)p 0.40 0.40 0.40
TeXcolorrgb 41 w(*)p 0 TeXcolorgray(inodep,)p 0.00 0.50 0.00
TeXcolorrgb 41 w(struct)p 0 TeXcolorgray 41 w(file)p
0.40 0.40 0.40 TeXcolorrgb 42 w(*)p 0 TeXcolorgray(filp\))150
2175 y({)p 0.00 0.50 0.00 TeXcolorrgb 499 2275 a(struct)p
0 TeXcolorgray 41 w(usb_ml)p 0.40 0.40 0.40 TeXcolorrgb
41 w(*)p 0 TeXcolorgray(dev)p 0.40 0.40 0.40 TeXcolorrgb
42 w(=)p 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 43
w(NULL)p 0 TeXcolorgray(;)p 0.00 0.50 0.00 TeXcolorrgb
499 2374 a(struct)p 0 TeXcolorgray 41 w(usb_interface)p
0.40 0.40 0.40 TeXcolorrgb 38 w(*)p 0 TeXcolorgray(interface;)p
0.69 0.00 0.25 TeXcolorrgb 499 2474 a(int)p 0 TeXcolorgray
42 w(subminor;)p 0.69 0.00 0.25 TeXcolorrgb 499 2574
a(int)p 0 TeXcolorgray 42 w(retval)p 0.40 0.40 0.40 TeXcolorrgb
41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43
w(0)p 0 TeXcolorgray(;)499 2773 y(pr_debug\()p 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(launc)o(her)o
(_o)o(pen)p 0 TeXcolorgray 0.73 0.40 0.13 TeXcolorrgb
-1 w(\\n)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb
-1 w(")p 0 TeXcolorgray(\);)499 2873 y(subminor)p 0.40 0.40 0.40
TeXcolorrgb 40 w(=)p 0 TeXcolorgray 43 w(iminor\(inodep\);)499
3072 y(mutex_lock\()p 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray(dis)o(con)o(ne)o(ct_)o(mu)o(tex)o(\);)499
3271 y(interface)p 0.40 0.40 0.40 TeXcolorrgb 40 w(=)p
0 TeXcolorgray 43 w(usb_find_interfa)o(ce)o(\()p 0.40 0.40 0.40
TeXcolorrgb(&)p 0 TeXcolorgray -1 w(lau)o(nc)o(her)o(_d)o(ri)o(ver)o(,)
f(subminor\);)p 0.00 0.50 0.00 TeXcolorrgb 499 3371 a(if)p
0 TeXcolorgray 42 w(\()p 0.40 0.40 0.40 TeXcolorrgb(!)p
0 TeXcolorgray(interface\))i({)847 3470 y(pr_err\()p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(can't)g(find)j(device)f(for)h(minor)f(\045d)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(,)h
(subminor\);)847 3570 y(retval)p 0.40 0.40 0.40 TeXcolorrgb
41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 44
w(-)p 0 TeXcolorgray(ENODEV;)p 0.00 0.50 0.00 TeXcolorrgb
847 3670 a(goto)p 0 TeXcolorgray 42 w(exit;)499 3769
y(})499 3968 y(dev)p 0.40 0.40 0.40 TeXcolorrgb 42 w(=)p
0 TeXcolorgray 43 w(usb_get_intfdata\()o(in)o(ter)o(fa)o(ce)o(\);)p
0.00 0.50 0.00 TeXcolorrgb 499 4068 a(if)p 0 TeXcolorgray
42 w(\()p 0.40 0.40 0.40 TeXcolorrgb(!)p 0 TeXcolorgray(dev\))g({)847
4168 y(retval)p 0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 44 w(-)p 0 TeXcolorgray
(ENODEV;)p 0.00 0.50 0.00 TeXcolorrgb 847 4267 a(goto)p
0 TeXcolorgray 42 w(exit;)499 4367 y(})p 0.25 0.50 0.50
TeXcolorrgb 499 4566 a Fb(/*)g(lock)g(this)g(device)f(*/)p
0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 499 4666 a
Fa(if)p 0 TeXcolorgray 42 w(\(down_interruptib)o(le\()p
0.40 0.40 0.40 TeXcolorrgb -1 w(&)p 0 TeXcolorgray(d)o(ev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb -1 w(>)p 0 TeXcolorgray(s)o(em)o(\)\))c({)847
4765 y(pr_err\()p 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(sem)i(down)j(failed)p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)847
4865 y(retval)p 0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 44 w(-)p 0 TeXcolorgray
(ERESTARTSYS;)p 0.00 0.50 0.00 TeXcolorrgb 847 4965 a(goto)p
0 TeXcolorgray 42 w(exit;)499 5064 y(})p 0 TeXcolorgray
1929 5349 a Fd(8)p 0 TeXcolorgray eop end
%%Page: 9 11
TeXDict begin 9 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray 142
-316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb
499 183 a Fb(/*)42 b(Increment)e(our)j(usage)e(count)h(for)g(the)g
(device.)f(*/)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
499 282 a Fa(+)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(+)p
0 TeXcolorgray(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(open_cou)o
(nt;)p 0.00 0.50 0.00 TeXcolorrgb 499 382 a(if)p 0 TeXcolorgray
42 w(\(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(open_count)p
0.40 0.40 0.40 TeXcolorrgb 37 w(>)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb 44 w(1)p 0 TeXcolorgray(\))h({)847 482 y(pr_info\()p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(open_cou)o(nt)37 b(=)43 b(\045d)p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(,)f(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(open_count\);)499 581
y(})p 0.25 0.50 0.50 TeXcolorrgb 499 780 a Fb(/*)g(Initialize)e
(interrupt)g(URB.)i(*/)p 0 TeXcolorgray 499 880 a Fa(usb_fill_int_ur)o
(b\(d)o(ev)p 0.40 0.40 0.40 TeXcolorrgb -1 w(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(i)o(nt)o(_in)o(_u)o(rb)o
(,)c(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(udev,)1240
980 y(usb_rcvintpipe\()o(dev)p 0.40 0.40 0.40 TeXcolorrgb
-1 w(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray -1 w(ude)o(v,)f(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(int_in_endp)o(oi)o(nt)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb -1 w(>)p 0
TeXcolorgray(b)o(End)o(po)o(in)o(tAd)o(dr)o(ess)o(\),)1240
1079 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(int_in_buf)o(fer)o(,)1240
1179 y(le16_to_cpu\(dev)p 0.40 0.40 0.40 TeXcolorrgb
-1 w(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(i)o(nt)o(_in)o(_e)o(nd)o(poi)o(nt)p 0.40 0.40 0.40
TeXcolorrgb -1 w(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(w)o(Ma)o(xPa)o(ck)o(et)o(Siz)o(e\))o(,)1240
1279 y(launcher_int_in)o(_ca)o(ll)o(bac)o(k,)1240 1378
y(dev,)1240 1478 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(int_in_end)o(poi)o(nt)p 0.40 0.40 0.40 TeXcolorrgb -1
w(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0
TeXcolorgray(b)o(In)o(te)o(rva)o(l\))o(;)499 1677 y(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(int_in_run)o(nin)o(g)p
0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb 44 w(1)p 0 TeXcolorgray(;)499 1777 y(mb\(\);)499
1976 y(retval)p 0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0
TeXcolorgray 43 w(usb_submit_urb\(d)o(ev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
-1 w(>)p 0 TeXcolorgray(i)o(nt)o(_in)o(_u)o(rb,)g(GFP_KERNEL\);)p
0.00 0.50 0.00 TeXcolorrgb 499 2076 a(if)p 0 TeXcolorgray
42 w(\(retval\))k({)847 2175 y(pr_err\()p 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(submittin)o
(g)d(int)k(urb)g(failed)f(\(\045d\))p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(,)g(retval\);)847
2275 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(int_in_runni)o(ng)p
0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb 43 w(0)p 0 TeXcolorgray(;)p 0.40 0.40 0.40
TeXcolorrgb 847 2374 a(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(open_count)o(;)p 0.00 0.50 0.00 TeXcolorrgb 847 2474
a(goto)p 0 TeXcolorgray 42 w(unlock_exit;)499 2574 y(})p
0.25 0.50 0.50 TeXcolorrgb 499 2773 a Fb(/*)h(Save)g(our)h(object)e(in)
i(the)f(file's)f(private)g(structure.)e(*/)p 0 TeXcolorgray
499 2873 a Fa(filp)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(private_d)o
(ata)p 0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray
43 w(dev;)p 0.63 0.63 0.00 TeXcolorrgb 150 3072 a(unlock_exit:)p
0 TeXcolorgray 499 3171 a(up\()p 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(sem\);)p
0.63 0.63 0.00 TeXcolorrgb 150 3371 a(exit:)p 0 TeXcolorgray
499 3470 a(mutex_unlock\()p 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray(d)o(isc)o(on)o(nec)o(t_)o(mut)o(ex)o(\);)p
0.00 0.50 0.00 TeXcolorrgb 499 3570 a(return)p 0 TeXcolorgray
41 w(retval;)150 3670 y(})p 0.00 0.50 0.00 TeXcolorrgb
150 3869 a(static)p 0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb
41 w(int)p 0 TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb
42 w(launcher_close)p 0 TeXcolorgray(\()p 0.00 0.50 0.00
TeXcolorrgb(st)o(ruc)o(t)p 0 TeXcolorgray 37 w(inode)p
0.40 0.40 0.40 TeXcolorrgb 42 w(*)p 0 TeXcolorgray(inodep,)p
0.00 0.50 0.00 TeXcolorrgb 40 w(struct)p 0 TeXcolorgray
41 w(file)p 0.40 0.40 0.40 TeXcolorrgb 42 w(*)p 0 TeXcolorgray(filp\))
150 3968 y({)p 0.00 0.50 0.00 TeXcolorrgb 305 w(struct)p
0 TeXcolorgray 41 w(usb_ml)p 0.40 0.40 0.40 TeXcolorrgb
41 w(*)p 0 TeXcolorgray(dev)p 0.40 0.40 0.40 TeXcolorrgb
42 w(=)p 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 43
w(NULL)p 0 TeXcolorgray(;)p 0.69 0.00 0.25 TeXcolorrgb
499 4068 a(int)p 0 TeXcolorgray 42 w(retval)p 0.40 0.40 0.40
TeXcolorrgb 41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
43 w(0)p 0 TeXcolorgray(;)499 4267 y(pr_debug\()p 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(launc)o(her)o
(_c)o(los)o(e)p 0 TeXcolorgray 0.73 0.40 0.13 TeXcolorrgb(\\)o(n)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\))o(;)499
4367 y(dev)p 0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray
43 w(filp)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(private_dat)o(a;)p
0.00 0.50 0.00 TeXcolorrgb 499 4566 a(if)p 0 TeXcolorgray
42 w(\()p 0.40 0.40 0.40 TeXcolorrgb(!)p 0 TeXcolorgray
43 w(dev\))j({)847 4666 y(pr_err\()p 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(dev)d(is)k(NULL)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)847
4765 y(retval)p 0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 87 w(-)p 0 TeXcolorgray
(ENODEV;)p 0.00 0.50 0.00 TeXcolorrgb 847 4865 a(goto)p
0 TeXcolorgray 42 w(exit;)499 4965 y(})p 0 TeXcolorgray
1929 5349 a Fd(9)p 0 TeXcolorgray eop end
%%Page: 10 12
TeXDict begin 10 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray 142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray
142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb
499 83 a Fb(/*)42 b(Lock)g(our)h(device)e(*/)p 0 TeXcolorgray
0.00 0.50 0.00 TeXcolorrgb 499 183 a Fa(if)p 0 TeXcolorgray
42 w(\(down_interruptib)o(le\()p 0.40 0.40 0.40 TeXcolorrgb
-1 w(&)p 0 TeXcolorgray(d)o(ev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb -1 w(>)p 0
TeXcolorgray(s)o(em)o(\)\))c({)847 282 y(retval)p 0.40 0.40 0.40
TeXcolorrgb 41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
44 w(-)p 0 TeXcolorgray(ERESTARTSYS;)p 0.00 0.50 0.00
TeXcolorrgb 847 382 a(goto)p 0 TeXcolorgray 42 w(exit;)499
482 y(})p 0.00 0.50 0.00 TeXcolorrgb 499 681 a(if)p 0
TeXcolorgray 42 w(\(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(open_count)p 0.40 0.40 0.40 TeXcolorrgb 37 w(<)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb 43 w(0)p 0 TeXcolorgray(\))43 b({)847 780
y(pr_err\()p 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(device)38 b(not)43 b(opened)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)847
880 y(retval)p 0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 44 w(-)p 0 TeXcolorgray
(ENODEV;)p 0.00 0.50 0.00 TeXcolorrgb 847 980 a(goto)p
0 TeXcolorgray 42 w(unlock_exit;)499 1079 y(})p 0.00 0.50 0.00
TeXcolorrgb 499 1279 a(if)p 0 TeXcolorgray 42 w(\()p
0.40 0.40 0.40 TeXcolorrgb(!)p 0 TeXcolorgray 43 w(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(udev\))d({)847 1378 y(pr_warn\()p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(device)e(unplugged)i(before)h(the)h(file)g(was)g(released)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)847
1478 y(up)h(\()p 0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(sem\);)p 0.25 0.50 0.50
TeXcolorrgb 344 w Fb(/*)g(Unlock)e(here)h(as)g(LAUNCHER_delete)c(frees)
j(dev.)h(*/)p 0 TeXcolorgray 847 1577 a Fa(launcher_delete\(d)o(ev\))o
(;)p 0.00 0.50 0.00 TeXcolorrgb 847 1677 a(goto)p 0 TeXcolorgray
42 w(exit;)499 1777 y(})p 0.00 0.50 0.00 TeXcolorrgb
499 1976 a(if)p 0 TeXcolorgray 42 w(\(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(open_count)p 0.40 0.40 0.40 TeXcolorrgb
37 w(>)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 44
w(1)p 0 TeXcolorgray(\))g({)847 2076 y(pr_info\()p 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(open_cou)o
(nt)37 b(=)43 b(\045d)p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray(,)f(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(open_count\);)499 2175 y(})499 2374 y(launcher_abort_)o
(tra)o(ns)o(fer)o(s\()o(dev)o(\);)p 0.40 0.40 0.40 TeXcolorrgb
499 2474 a(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(open_cou)o
(nt;)p 0.63 0.63 0.00 TeXcolorrgb 150 2673 a(unlock_exit:)p
0 TeXcolorgray 499 2773 a(up\()p 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(sem\);)p
0.63 0.63 0.00 TeXcolorrgb 150 2972 a(exit:)p 0 TeXcolorgray
0.00 0.50 0.00 TeXcolorrgb 499 3072 a(return)p 0 TeXcolorgray
41 w(retval;)150 3171 y(})p 0.00 0.50 0.00 TeXcolorrgb
150 3371 a(static)p 0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb
41 w(ssize_t)p 0 TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb
41 w(launcher_read)p 0 TeXcolorgray(\()p 0.00 0.50 0.00
TeXcolorrgb(st)o(ru)o(ct)p 0 TeXcolorgray 37 w(file)p
0.40 0.40 0.40 TeXcolorrgb 42 w(*)p 0 TeXcolorgray(f,)p
0.69 0.00 0.25 TeXcolorrgb 42 w(char)p 0 TeXcolorgray
42 w(__user)p 0.40 0.40 0.40 TeXcolorrgb 41 w(*)p 0 TeXcolorgray(buf,)p
0.69 0.00 0.25 TeXcolorrgb 42 w(size_t)p 0 TeXcolorgray
41 w(cnt,)g(loff_t)p 0.40 0.40 0.40 TeXcolorrgb 41 w(*)p
0 TeXcolorgray(off\))150 3470 y({)p 0.69 0.00 0.25 TeXcolorrgb
499 3570 a(int)p 0 TeXcolorgray 42 w(retval)p 0.40 0.40 0.40
TeXcolorrgb 41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
43 w(-)p 0 TeXcolorgray(EFAULT;)499 3670 y(pr_debug\()p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(launc)o(her)o(_r)o(ead)p 0 TeXcolorgray 0.73 0.40 0.13
TeXcolorrgb -1 w(\\n)p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb -1 w(")p 0 TeXcolorgray(\);)p 0.00 0.50 0.00
TeXcolorrgb 499 3769 a(return)p 0 TeXcolorgray 41 w(retval;)150
3869 y(})p 0.00 0.50 0.00 TeXcolorrgb 150 4068 a(static)p
0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb 41 w(ssize_t)p
0 TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb 41 w(launcher_write)p
0 TeXcolorgray(\()p 0.00 0.50 0.00 TeXcolorrgb(s)o(tr)o(uct)p
0 TeXcolorgray 37 w(file)p 0.40 0.40 0.40 TeXcolorrgb
42 w(*)p 0 TeXcolorgray(filp,)p 0.00 0.50 0.00 TeXcolorrgb
41 w(const)p 0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb
41 w(char)p 0 TeXcolorgray 42 w(__user)p 0.40 0.40 0.40
TeXcolorrgb 41 w(*)p 0 TeXcolorgray(user_buf,)p 0.69 0.00 0.25
TeXcolorrgb 1458 4168 a(size_t)p 0 TeXcolorgray 41 w(count,)f(loff_t)p
0.40 0.40 0.40 TeXcolorrgb 41 w(*)p 0 TeXcolorgray(off\))150
4267 y({)p 0.69 0.00 0.25 TeXcolorrgb 499 4367 a(int)p
0 TeXcolorgray 42 w(retval)p 0.40 0.40 0.40 TeXcolorrgb
41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43
w(-)p 0 TeXcolorgray(EFAULT;)p 0.00 0.50 0.00 TeXcolorrgb
499 4467 a(struct)p 0 TeXcolorgray 41 w(usb_ml)p 0.40 0.40 0.40
TeXcolorrgb 41 w(*)p 0 TeXcolorgray(dev;)p 0.69 0.00 0.25
TeXcolorrgb 499 4566 a(unsigned)p 0 TeXcolorgray 0.69 0.00 0.25
TeXcolorrgb 40 w(char)p 0 TeXcolorgray 42 w(buf[)p 0.40 0.40 0.40
TeXcolorrgb(8)p 0 TeXcolorgray(];)p 0.69 0.00 0.25 TeXcolorrgb
499 4666 a(unsigned)p 0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb
40 w(char)p 0 TeXcolorgray 42 w(cmd)p 0.40 0.40 0.40
TeXcolorrgb 42 w(=)p 0 TeXcolorgray 43 w(LAUNCHER_STOP;)499
4865 y(pr_debug\()p 0.73 0.13 0.13 TeXcolorrgb(")p 0
TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(launc)o(her)o(_w)o(rit)o(e)p
0 TeXcolorgray 0.73 0.40 0.13 TeXcolorrgb(\\)o(n)p 0
TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\))o(;)499
4965 y(dev)p 0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray
43 w(filp)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(private_dat)o(a;)p
0 TeXcolorgray 1908 5349 a Fd(10)p 0 TeXcolorgray eop
end
%%Page: 11 13
TeXDict begin 11 12 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray 142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray
142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb
499 83 a Fb(/*)42 b(Lock)g(this)g(object.)f(*/)p 0 TeXcolorgray
0.00 0.50 0.00 TeXcolorrgb 499 183 a Fa(if)p 0 TeXcolorgray
42 w(\(down_interruptib)o(le\()p 0.40 0.40 0.40 TeXcolorrgb
-1 w(&)p 0 TeXcolorgray(d)o(ev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb -1 w(>)p 0
TeXcolorgray(s)o(em)o(\)\))c({)847 282 y(retval)p 0.40 0.40 0.40
TeXcolorrgb 41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
44 w(-)p 0 TeXcolorgray(ERESTARTSYS;)p 0.00 0.50 0.00
TeXcolorrgb 847 382 a(goto)p 0 TeXcolorgray 42 w(exit;)499
482 y(})p 0.25 0.50 0.50 TeXcolorrgb 499 681 a Fb(/*)42
b(Verify)g(that)f(the)i(device)e(wasn't)g(unplugged.)e(*/)p
0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 499 780 a Fa(if)p
0 TeXcolorgray 42 w(\()p 0.40 0.40 0.40 TeXcolorrgb(!)p
0 TeXcolorgray 43 w(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(udev\))h
({)847 880 y(retval)p 0.40 0.40 0.40 TeXcolorrgb 41 w(=)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 44 w(-)p 0
TeXcolorgray(ENODEV;)847 980 y(pr_err\()p 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(No)g(device)h
(or)i(device)e(unplugged)f(\(\045d\))p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(,)h(retval\);)p
0.00 0.50 0.00 TeXcolorrgb 847 1079 a(goto)p 0 TeXcolorgray
42 w(unlock_exit;)499 1179 y(})p 0.25 0.50 0.50 TeXcolorrgb
499 1378 a Fb(/*)h(Verify)g(that)f(we)i(actually)e(have)g(some)h(data)g
(to)h(write.)e(*/)p 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb
499 1478 a Fa(if)p 0 TeXcolorgray 42 w(\(count)p 0.40 0.40 0.40
TeXcolorrgb 42 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(=)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 42 w(0)p 0
TeXcolorgray(\))i({)p 0.00 0.50 0.00 TeXcolorrgb 847
1577 a(goto)p 0 TeXcolorgray 42 w(unlock_exit;)499 1677
y(})p 0.25 0.50 0.50 TeXcolorrgb 499 1876 a Fb(/*)f(We)h(only)f(accept)
f(one-byte)g(writes.)f(*/)p 0 TeXcolorgray 0.00 0.50 0.00
TeXcolorrgb 499 1976 a Fa(if)p 0 TeXcolorgray 42 w(\(count)p
0.40 0.40 0.40 TeXcolorrgb 42 w(!)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
42 w(1)p 0 TeXcolorgray(\))j({)847 2076 y(count)p 0.40 0.40 0.40
TeXcolorrgb 42 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
43 w(1)p 0 TeXcolorgray(;)499 2175 y(})p 0.00 0.50 0.00
TeXcolorrgb 499 2374 a(if)p 0 TeXcolorgray 42 w(\(copy_from_user\()p
0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray -1 w(cmd)o(,)37
b(user_buf,)j(count\)\))h({)847 2474 y(retval)p 0.40 0.40 0.40
TeXcolorrgb 41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
44 w(-)p 0 TeXcolorgray(EFAULT;)p 0.00 0.50 0.00 TeXcolorrgb
847 2574 a(goto)p 0 TeXcolorgray 42 w(unlock_exit;)499
2673 y(})499 2873 y(pr_info\()p 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(Receiv)o(ed)c(command)k
(0x\045x)p 0 TeXcolorgray 0.73 0.40 0.13 TeXcolorrgb(\\n)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(,)f
(cmd\);)p 0.25 0.50 0.50 TeXcolorrgb 499 3072 a Fb(/*)i(TODO:)g(Check)f
(the)i(range)e(of)i(the)f(commands)f(allowed)f(-)k(otherwise)39
b(we're)p 0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb 542
3171 a(*)349 b(trusting)40 b(the)i(user)g(not)g(to)h(be)g(silly)p
0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb 542 3271 a(*/)p
0 TeXcolorgray 499 3470 a Fa(memset\()p 0.40 0.40 0.40
TeXcolorrgb(&)p 0 TeXcolorgray(buf,)p 0.40 0.40 0.40
TeXcolorrgb 38 w(0)p 0 TeXcolorgray(,)p 0.00 0.50 0.00
TeXcolorrgb 43 w(sizeof)p 0 TeXcolorgray(\(buf\)\);)499
3570 y(buf[)p 0.40 0.40 0.40 TeXcolorrgb(0)p 0 TeXcolorgray(])p
0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0 TeXcolorgray 43
w(LAUNCHER_CTRL_CO)o(MMA)o(ND)o(_P)o(REF)o(IX)o(;)499
3670 y(buf[)p 0.40 0.40 0.40 TeXcolorrgb(1)p 0 TeXcolorgray(])p
0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0 TeXcolorgray 43
w(cmd;)p 0.25 0.50 0.50 TeXcolorrgb 499 3869 a Fb(/*)f(The)h
(interrupt-in-end)o(po)o(int)37 b(handler)j(also)i(modifies)f
(dev->command.)d(*/)p 0 TeXcolorgray 499 3968 a Fa(spin_lock\()p
0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
-1 w(>)p 0 TeXcolorgray(cm)o(d_)o(spi)o(nl)o(ock)o(\);)499
4068 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(command)p
0.40 0.40 0.40 TeXcolorrgb 38 w(=)p 0 TeXcolorgray 43
w(cmd;)499 4168 y(spin_unlock\()p 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray(de)o(v)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
-1 w(cm)o(d_s)o(pi)o(nlo)o(ck)o(\);)499 4367 y(pr_debug\()p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(Sendi)o(ng)f(usb_control_messa)o(ge)o(\(\))p
0 TeXcolorgray 0.73 0.40 0.13 TeXcolorrgb(\\)o(n)p 0
TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray
-1 w(\);)499 4467 y(retval)p 0.40 0.40 0.40 TeXcolorrgb
41 w(=)p 0 TeXcolorgray 43 w(usb_control_msg\()o(dev)p
0.40 0.40 0.40 TeXcolorrgb -1 w(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray -1 w(ud)o(ev,)1196 4566
y(usb_sndctrlpipe\()o(dev)p 0.40 0.40 0.40 TeXcolorrgb
-1 w(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray -1 w(ude)o(v,)p 0.40 0.40 0.40 TeXcolorrgb
37 w(0)p 0 TeXcolorgray(\),)1196 4666 y(LAUNCHER_CTRL_RE)o(QUE)o(ST)o
(,)1196 4765 y(LAUNCHER_CTRL_RE)o(QUE)o(ST)o(_TY)o(PE)o(,)1196
4865 y(LAUNCHER_CTRL_VA)o(LUE)o(,)1196 4965 y(LAUNCHER_CTRL_IN)o(DEX)o
(,)p 0.40 0.40 0.40 TeXcolorrgb 1196 5064 a(&)p 0 TeXcolorgray(buf,)p
0 TeXcolorgray 1908 5349 a Fd(11)p 0 TeXcolorgray eop
end
%%Page: 12 14
TeXDict begin 12 13 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray 142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray
142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb
1196 83 a Fa(sizeof)p 0 TeXcolorgray(\(buf\),)1196 183
y(HZ)p 0.40 0.40 0.40 TeXcolorrgb(*)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(5)p 0 TeXcolorgray(\);)p 0.00 0.50 0.00
TeXcolorrgb 499 482 a(if)p 0 TeXcolorgray 42 w(\(retval)p
0.40 0.40 0.40 TeXcolorrgb 41 w(<)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb 43 w(0)p 0 TeXcolorgray(\))43 b({)847 581
y(pr_err\()p 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(usb_contr)o(ol_)o(ms)o(g)37
b(failed)42 b(\(\045d\))p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray(,)f(retval\);)p 0.00 0.50 0.00
TeXcolorrgb 847 681 a(goto)p 0 TeXcolorgray 42 w(unlock_exit;)499
780 y(})p 0.25 0.50 0.50 TeXcolorrgb 499 980 a Fb(/*)h(We've)g(only)g
(written)f(one)h(byte)g(hopefully!)d(*/)p 0 TeXcolorgray
499 1079 a Fa(retval)p 0.40 0.40 0.40 TeXcolorrgb 41
w(=)p 0 TeXcolorgray 43 w(count;)p 0.63 0.63 0.00 TeXcolorrgb
150 1279 a(unlock_exit:)p 0 TeXcolorgray 499 1378 a(up\()p
0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(sem\);)p 0.63 0.63 0.00 TeXcolorrgb 150
1577 a(exit:)p 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb
499 1677 a(return)p 0 TeXcolorgray 41 w(retval;)150 1777
y(})p 0.00 0.50 0.00 TeXcolorrgb 150 1976 a(static)p
0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 41 w(struct)p
0 TeXcolorgray 41 w(file_operations)f(fops)p 0.40 0.40 0.40
TeXcolorrgb 42 w(=)p 0 TeXcolorgray 150 2076 a({)499
2175 y(.open)p 0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0
TeXcolorgray 43 w(launcher_open,)499 2275 y(.release)p
0.40 0.40 0.40 TeXcolorrgb 40 w(=)p 0 TeXcolorgray 43
w(launcher_close,)499 2374 y(.read)p 0.40 0.40 0.40 TeXcolorrgb
41 w(=)p 0 TeXcolorgray 43 w(launcher_read,)499 2474
y(.write)p 0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0 TeXcolorgray
43 w(launcher_write,)150 2574 y(};)p 0.00 0.50 0.00 TeXcolorrgb
150 2773 a(static)p 0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb
41 w(int)p 0 TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb
42 w(launcher_probe)p 0 TeXcolorgray(\()p 0.00 0.50 0.00
TeXcolorrgb(st)o(ruc)o(t)p 0 TeXcolorgray 37 w(usb_interface)p
0.40 0.40 0.40 TeXcolorrgb 39 w(*)p 0 TeXcolorgray(interface,)p
0.00 0.50 0.00 TeXcolorrgb 39 w(const)p 0 TeXcolorgray
0.00 0.50 0.00 TeXcolorrgb 41 w(struct)p 0 TeXcolorgray
41 w(usb_device_id)p 0.40 0.40 0.40 TeXcolorrgb 38 w(*)p
0 TeXcolorgray(id\))150 2873 y({)p 0.00 0.50 0.00 TeXcolorrgb
499 2972 a(struct)p 0 TeXcolorgray 41 w(usb_device)p
0.40 0.40 0.40 TeXcolorrgb 39 w(*)p 0 TeXcolorgray(udev)p
0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray 43
w(interface_to_usb)o(de)o(v\(i)o(nt)o(erf)o(ac)o(e\);)p
0.00 0.50 0.00 TeXcolorrgb 499 3072 a(struct)p 0 TeXcolorgray
41 w(usb_ml)p 0.40 0.40 0.40 TeXcolorrgb 41 w(*)p 0 TeXcolorgray(dev)p
0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray 0.00 0.50 0.00
TeXcolorrgb 43 w(NULL)p 0 TeXcolorgray(;)p 0.00 0.50 0.00
TeXcolorrgb 499 3171 a(struct)p 0 TeXcolorgray 41 w(usb_host_interfa)o
(ce)p 0.40 0.40 0.40 TeXcolorrgb 37 w(*)p 0 TeXcolorgray(iface_desc;)p
0.00 0.50 0.00 TeXcolorrgb 499 3271 a(struct)p 0 TeXcolorgray
41 w(usb_endpoint_des)o(cr)o(ipt)o(or)p 0.40 0.40 0.40
TeXcolorrgb 37 w(*)p 0 TeXcolorgray(endpoint;)p 0.69 0.00 0.25
TeXcolorrgb 499 3371 a(int)p 0 TeXcolorgray 42 w(i,)43
b(int_end_size;)p 0.69 0.00 0.25 TeXcolorrgb 499 3470
a(int)p 0 TeXcolorgray 42 w(retval)p 0.40 0.40 0.40 TeXcolorrgb
41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43
w(-)p 0 TeXcolorgray(ENODEV;)499 3670 y(pr_debug\()p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(launc)o(her)o(_p)o(rob)o(e)p 0 TeXcolorgray
0.73 0.40 0.13 TeXcolorrgb(\\)o(n)p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray(\))o(;)p 0.25 0.50 0.50
TeXcolorrgb 499 3869 a Fb(/*)f(Set)h(up)g(our)f(class)f(*/)p
0 TeXcolorgray 499 3968 a Fa(class.name)p 0.40 0.40 0.40
TeXcolorrgb 39 w(=)p 0 TeXcolorgray 43 w(LAUNCHER_NODE)p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(\045d)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray -1 w(;)499 4068 y(class.fops)p 0.40 0.40 0.40
TeXcolorrgb 39 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
43 w(&)p 0 TeXcolorgray(fops;)p 0.00 0.50 0.00 TeXcolorrgb
499 4267 a(if)p 0 TeXcolorgray 42 w(\(\(retval)p 0.40 0.40 0.40
TeXcolorrgb 41 w(=)p 0 TeXcolorgray 43 w(usb_register_dev)o(\(i)o(nte)o
(rf)o(ace)o(,)p 0.40 0.40 0.40 TeXcolorrgb 37 w(&)p 0
TeXcolorgray(class\)\))p 0.40 0.40 0.40 TeXcolorrgb 41
w(<)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43 w(0)p
0 TeXcolorgray(\))i({)p 0.25 0.50 0.50 TeXcolorrgb 847
4367 a Fb(/*)g(Something)d(stopped)h(us)h(from)g(registering)d(this)j
(driver)f(*/)p 0 TeXcolorgray 847 4467 a Fa(pr_err\()p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(Not)e(able)j(to)h(get)f(a)i(minor)d(for)h(this)g(device.)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)p
0.00 0.50 0.00 TeXcolorrgb 847 4566 a(goto)p 0 TeXcolorgray
42 w(exit;)499 4666 y(})p 0.00 0.50 0.00 TeXcolorrgb
43 w(else)p 0 TeXcolorgray 42 w({)847 4765 y(pr_info\()p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(Minor)c(receieved)i(-)j(\045d)p 0 TeXcolorgray
0.73 0.40 0.13 TeXcolorrgb(\\n)p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray(,)e(interface)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(minor\))o(;)499 4865 y(})p 0.00 0.50 0.00
TeXcolorrgb 499 5064 a(if)p 0 TeXcolorgray 42 w(\()p
0.40 0.40 0.40 TeXcolorrgb(!)p 0 TeXcolorgray(udev\))g({)p
0 TeXcolorgray 1908 5349 a Fd(12)p 0 TeXcolorgray eop
end
%%Page: 13 15
TeXDict begin 13 14 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray 142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray
142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.13) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb
847 83 a Fb(/*)43 b(Something)d(has)i(gone)g(bad)h(*/)p
0 TeXcolorgray 847 183 a Fa(pr_err\()p 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(udev)c(is)k
(NULL)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray(\);)p 0.00 0.50 0.00 TeXcolorrgb 847 282
a(goto)p 0 TeXcolorgray 42 w(exit;)499 382 y(})499 581
y(dev)p 0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray
43 w(kzalloc\()p 0.00 0.50 0.00 TeXcolorrgb(sizeof)p
0 TeXcolorgray(\()p 0.00 0.50 0.00 TeXcolorrgb(st)o(ru)o(ct)p
0 TeXcolorgray 37 w(usb_ml\),)d(GFP_KERNEL\);)p 0.00 0.50 0.00
TeXcolorrgb 499 681 a(if)p 0 TeXcolorgray 42 w(\()p 0.40 0.40 0.40
TeXcolorrgb(!)p 0 TeXcolorgray(dev\))i({)847 780 y(pr_err\()p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(cannot)c(allocate)i(memory)i(for)g(struct)f(usb_ml)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)847
880 y(retval)p 0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 44 w(-)p 0 TeXcolorgray
(ENOMEM;)p 0.00 0.50 0.00 TeXcolorrgb 847 980 a(goto)p
0 TeXcolorgray 42 w(exit;)499 1079 y(})499 1279 y(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(command)p 0.40 0.40 0.40
TeXcolorrgb 38 w(=)p 0 TeXcolorgray 43 w(LAUNCHER_STOP;)499
1478 y(sema_init\()p 0.40 0.40 0.40 TeXcolorrgb(&)p 0
TeXcolorgray(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb -1 w(>)p 0 TeXcolorgray(se)o(m,)p
0.40 0.40 0.40 TeXcolorrgb 37 w(1)p 0 TeXcolorgray(\);)499
1577 y(spin_lock_init\()p 0.40 0.40 0.40 TeXcolorrgb
-1 w(&)p 0 TeXcolorgray(de)o(v)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb -1 w(>)p 0
TeXcolorgray(cm)o(d_)o(spi)o(nl)o(oc)o(k\);)499 1777
y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(udev)p
0.40 0.40 0.40 TeXcolorrgb 40 w(=)p 0 TeXcolorgray 43
w(udev;)499 1876 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(interface)
p 0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray
44 w(interface;)499 1976 y(iface_desc)p 0.40 0.40 0.40
TeXcolorrgb 39 w(=)p 0 TeXcolorgray 43 w(interface)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(cur_al)o(ts)o(ett)o(in)o(g;)p
0.25 0.50 0.50 TeXcolorrgb 499 2175 a Fb(/*)h(Set)h(up)g(interrupt)c
(endpoint)i(information.)d(*/)p 0 TeXcolorgray 0.00 0.50 0.00
TeXcolorrgb 499 2275 a Fa(for)p 0 TeXcolorgray 42 w(\(i)p
0.40 0.40 0.40 TeXcolorrgb 43 w(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb 43 w(0)p 0 TeXcolorgray(;)43 b(i)p 0.40 0.40 0.40
TeXcolorrgb 43 w(<)p 0 TeXcolorgray 43 w(iface_desc)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(desc)o(.bN)o(um)o(End)o(po)o(in)o(ts;)p
0.40 0.40 0.40 TeXcolorrgb 37 w(+)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(+)p 0 TeXcolorgray(i\))f({)847 2374 y(endpoint)p
0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb 43 w(&)p 0 TeXcolorgray(iface_desc)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(end)o(po)o(int)o([i)o(].)o(des)o(c;)p
0.00 0.50 0.00 TeXcolorrgb 847 2574 a(if)p 0 TeXcolorgray
43 w(\(\(\(endpoint)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(bEnd)o(po)
o(in)o(tAd)o(dr)o(ess)p 0.40 0.40 0.40 TeXcolorrgb 37
w(&)p 0 TeXcolorgray 43 w(USB_ENDPOINT_DIR)o(_M)o(ASK)o(\))p
0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(=)p 0 TeXcolorgray 43 w(USB_DIR_IN\))p 0.40 0.40 0.40
TeXcolorrgb 1545 2673 a(&)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(&)p 0 TeXcolorgray 43 w(\(\(endpoint)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(bmA)o(tt)o(rib)o(ut)o(es)p 0.40 0.40 0.40
TeXcolorrgb 37 w(&)p 0 TeXcolorgray 43 w(USB_ENDPOINT_XFER)o(TY)o(PE_)o
(MA)o(SK\))p 0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(=)p 0 TeXcolorgray 1893 2773
a(USB_ENDPOINT_XFER)o(_IN)o(T\))o(\))1196 2873 y(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(int_in_endp)o(oin)o(t)p
0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray 44
w(endpoint;)499 3072 y(})p 0.00 0.50 0.00 TeXcolorrgb
499 3271 a(if)p 0 TeXcolorgray 42 w(\()p 0.40 0.40 0.40
TeXcolorrgb(!)p 0 TeXcolorgray(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(int_in_end)o(poi)o(nt)o(\))c({)847 3371 y(pr_err\()p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(could)h(not)j(find)g(interrupt)e(in)i(endpoint)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)p
0.00 0.50 0.00 TeXcolorrgb 847 3470 a(goto)p 0 TeXcolorgray
42 w(error;)499 3570 y(})499 3769 y(int_end_size)p 0.40 0.40 0.40
TeXcolorrgb 38 w(=)p 0 TeXcolorgray 43 w(le16_to_cpu\(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray -1 w(int)o(_i)o(n_e)o(nd)o(po)o(int)p
0.40 0.40 0.40 TeXcolorrgb -1 w(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray -1 w(wMa)o(xP)o(ack)o(et)o(Si)o(ze\))o
(;)499 3968 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(int_in_buf)o
(fer)p 0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray
43 w(kmalloc\(int_end_)o(siz)o(e,)37 b(GFP_KERNEL\);)p
0.00 0.50 0.00 TeXcolorrgb 499 4068 a(if)p 0 TeXcolorgray
42 w(\()p 0.40 0.40 0.40 TeXcolorrgb(!)p 0 TeXcolorgray(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(int_in_buf)o(fer)o(\))g({)847
4168 y(pr_err\()p 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(could)i(not)j(allocate)e(int_in_buffer)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)847
4267 y(retval)p 0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 44 w(-)p 0 TeXcolorgray
(ENOMEM;)p 0.00 0.50 0.00 TeXcolorrgb 847 4367 a(goto)p
0 TeXcolorgray 42 w(error;)499 4467 y(})499 4666 y(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(int_in_urb)p 0.40 0.40 0.40
TeXcolorrgb 37 w(=)p 0 TeXcolorgray 43 w(usb_alloc_urb\()p
0.40 0.40 0.40 TeXcolorrgb(0)p 0 TeXcolorgray(,)d(GFP_KERNEL\);)p
0.00 0.50 0.00 TeXcolorrgb 499 4765 a(if)p 0 TeXcolorgray
42 w(\()p 0.40 0.40 0.40 TeXcolorrgb(!)p 0 TeXcolorgray(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(int_in_urb)o(\))h({)847
4865 y(pr_err\()p 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(could)h(not)j(allocate)e(int_in_urb)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)847
4965 y(retval)p 0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 44 w(-)p 0 TeXcolorgray
(ENOMEM;)p 0.00 0.50 0.00 TeXcolorrgb 847 5064 a(goto)p
0 TeXcolorgray 42 w(error;)p 0 TeXcolorgray 1908 5349
a Fd(13)p 0 TeXcolorgray eop end
%%Page: 14 16
TeXDict begin 14 15 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray 142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray
142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.14) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 499 83 a Fa(})p 0.25 0.50 0.50
TeXcolorrgb 499 282 a Fb(/*)42 b(Set)h(up)g(the)f(control)f(URB.)h(*/)p
0 TeXcolorgray 499 382 a Fa(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(ctrl_urb)p
0.40 0.40 0.40 TeXcolorrgb 38 w(=)p 0 TeXcolorgray 43
w(usb_alloc_urb\()p 0.40 0.40 0.40 TeXcolorrgb(0)p 0
TeXcolorgray(,)37 b(GFP_KERNEL\);)p 0.00 0.50 0.00 TeXcolorrgb
499 482 a(if)p 0 TeXcolorgray 42 w(\()p 0.40 0.40 0.40
TeXcolorrgb(!)p 0 TeXcolorgray(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(ctrl_urb\))g({)847 581 y(pr_err\()p 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(could)i(not)j(allocate)e
(ctrl_urb)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray(\);)847 681 y(retval)p 0.40 0.40 0.40
TeXcolorrgb 41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
44 w(-)p 0 TeXcolorgray(ENOMEM;)p 0.00 0.50 0.00 TeXcolorrgb
847 780 a(goto)p 0 TeXcolorgray 42 w(error;)499 880 y(})499
1079 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(ctrl_buffe)o(r)p
0.40 0.40 0.40 TeXcolorrgb 38 w(=)p 0 TeXcolorgray 43
w(kzalloc\(LAUNCHER)o(_C)o(TRL)o(_B)o(UF)o(FER)o(_S)o(IZE)o(,)d
(GFP_KERNEL\);)p 0.00 0.50 0.00 TeXcolorrgb 499 1179
a(if)p 0 TeXcolorgray 42 w(\()p 0.40 0.40 0.40 TeXcolorrgb(!)p
0 TeXcolorgray(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(ctrl_buffe)o
(r\))g({)847 1279 y(pr_err\()p 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(could)i(not)j(allocate)e
(ctrl_buffer)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray(\);)847 1378 y(retval)p 0.40 0.40 0.40
TeXcolorrgb 41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
44 w(-)p 0 TeXcolorgray(ENOMEM;)p 0.00 0.50 0.00 TeXcolorrgb
847 1478 a(goto)p 0 TeXcolorgray 42 w(error;)499 1577
y(})499 1777 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(ctrl_dr)p
0.40 0.40 0.40 TeXcolorrgb 38 w(=)p 0 TeXcolorgray 43
w(kmalloc\()p 0.00 0.50 0.00 TeXcolorrgb(sizeof)p 0 TeXcolorgray(\()p
0.00 0.50 0.00 TeXcolorrgb(st)o(ruc)o(t)p 0 TeXcolorgray
37 w(usb_ctrlrequest\),)d(GFP_KERNEL\);)p 0.00 0.50 0.00
TeXcolorrgb 499 1876 a(if)p 0 TeXcolorgray 42 w(\()p
0.40 0.40 0.40 TeXcolorrgb(!)p 0 TeXcolorgray(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(ctrl_dr\))h({)847 1976 y(pr_err\()p 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(could)h(not)j
(allocate)e(usb_ctrlrequest)p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray(\))o(;)847 2076 y(retval)p
0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb 44 w(-)p 0 TeXcolorgray(ENOMEM;)p 0.00 0.50 0.00
TeXcolorrgb 847 2175 a(goto)p 0 TeXcolorgray 42 w(error;)499
2275 y(})499 2374 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(ctrl_dr)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(b)o(Req)o(ue)o(stT)o(yp)o(e)p
0.40 0.40 0.40 TeXcolorrgb 38 w(=)p 0 TeXcolorgray 43
w(LAUNCHER_CTRL_R)o(EQU)o(ES)o(T_T)o(YP)o(E;)499 2474
y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(ctrl_dr)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(b)o(Req)o(ue)o(st)p 0.40 0.40 0.40
TeXcolorrgb 37 w(=)p 0 TeXcolorgray 43 w(LAUNCHER_CTRL_REQ)o(UE)o(ST;)
499 2574 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(ctrl_dr)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(w)o(Val)o(ue)p 0.40 0.40 0.40
TeXcolorrgb 37 w(=)p 0 TeXcolorgray 43 w(cpu_to_le16\(LAUNC)o(HE)o(R_)o
(CTR)o(L_)o(VAL)o(UE)o(\);)499 2673 y(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(ctrl_dr)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(w)o(Ind)o
(ex)p 0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray
43 w(cpu_to_le16\(LAUNC)o(HE)o(R_)o(CTR)o(L_)o(IND)o(EX)o(\);)499
2773 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(ctrl_dr)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(w)o(Len)o(gt)o(h)p 0.40 0.40 0.40
TeXcolorrgb 38 w(=)p 0 TeXcolorgray 43 w(cpu_to_le16\(LAUN)o(CH)o(ER)o
(_CT)o(RL)o(_BU)o(FF)o(ER_)o(SI)o(ZE)o(\);)499 2972 y(usb_fill_contro)o
(l_u)o(rb)o(\(de)o(v)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb -1 w(>)p 0
TeXcolorgray(ct)o(rl)o(_u)o(rb,)d(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(udev,)1196 3072 y(usb_sndctrlpipe\()o(dev)p
0.40 0.40 0.40 TeXcolorrgb -1 w(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray -1 w(ude)o(v,)p 0.40 0.40 0.40
TeXcolorrgb 37 w(0)p 0 TeXcolorgray(\),)1196 3171 y(\()p
0.69 0.00 0.25 TeXcolorrgb(unsigned)p 0 TeXcolorgray
0.69 0.00 0.25 TeXcolorrgb 40 w(char)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb 42 w(*)p 0 TeXcolorgray(\)dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(ctrl_dr,)1196 3271 y(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(ctrl_buffer)o(,)1196 3371
y(LAUNCHER_CTRL_BU)o(FFE)o(R_)o(SIZ)o(E,)1196 3470 y(launcher_ctrl_ca)o
(llb)o(ac)o(k,)1196 3570 y(dev\);)p 0.25 0.50 0.50 TeXcolorrgb
499 3769 a Fb(/*)42 b(Retrieve)f(a)i(serial.)e(*/)p 0
TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 499 3869 a Fa(if)p
0 TeXcolorgray 42 w(\()p 0.40 0.40 0.40 TeXcolorrgb(!)p
0 TeXcolorgray(usb_string\(udev)o(,)d(udev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(descripto)o(r.i)o(Se)o(ri)o(alN)o(um)o(ber)o(,)f(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(serial_numbe)o(r,)p 0.00 0.50 0.00
TeXcolorrgb 1545 3968 a(sizeof)p 0 TeXcolorgray(\(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(seri)o(al)o(_n)o(umb)o(er)o(\)\)\))g({)
847 4068 y(pr_err\()p 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(could)i(not)j(retrieve)e
(serial)h(number)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray(\);)p 0.00 0.50 0.00 TeXcolorrgb 847 4168
a(goto)p 0 TeXcolorgray 42 w(error;)499 4267 y(})p 0.25 0.50 0.50
TeXcolorrgb 499 4467 a Fb(/*)h(Save)g(our)h(data)f(pointer)e(in)j(this)
f(interface)e(device.)h(*/)p 0 TeXcolorgray 499 4566
a Fa(usb_set_intfdat)o(a\(i)o(nt)o(erf)o(ac)o(e,)c(dev\);)499
4765 y(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(minor)p
0.40 0.40 0.40 TeXcolorrgb 39 w(=)p 0 TeXcolorgray 43
w(interface)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(minor;)p
0.63 0.63 0.00 TeXcolorrgb 150 4965 a(exit:)p 0 TeXcolorgray
0.00 0.50 0.00 TeXcolorrgb 499 5064 a(return)p 0 TeXcolorgray
41 w(retval;)p 0 TeXcolorgray 1908 5349 a Fd(14)p 0 TeXcolorgray
eop end
%%Page: 15 17
TeXDict begin 15 16 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray 142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray
142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.15) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.63 0.63 0.00 TeXcolorrgb
150 183 a Fa(error:)p 0 TeXcolorgray 499 282 a(launcher_delete)o(\(de)o
(v\))o(;)p 0.00 0.50 0.00 TeXcolorrgb 499 382 a(return)p
0 TeXcolorgray 41 w(retval;)150 482 y(})p 0.00 0.50 0.00
TeXcolorrgb 150 681 a(static)p 0 TeXcolorgray 0.69 0.00 0.25
TeXcolorrgb 41 w(void)p 0 TeXcolorgray 0.00 0.00 1.00
TeXcolorrgb 42 w(launcher_disconn)o(ect)p 0 TeXcolorgray
-1 w(\()p 0.00 0.50 0.00 TeXcolorrgb(s)o(tru)o(ct)p 0
TeXcolorgray 37 w(usb_interface)p 0.40 0.40 0.40 TeXcolorrgb
38 w(*)p 0 TeXcolorgray(interface\))150 780 y({)p 0.00 0.50 0.00
TeXcolorrgb 499 880 a(struct)p 0 TeXcolorgray 41 w(usb_ml)p
0.40 0.40 0.40 TeXcolorrgb 41 w(*)p 0 TeXcolorgray(dev;)p
0.69 0.00 0.25 TeXcolorrgb 499 980 a(int)p 0 TeXcolorgray
42 w(minor;)499 1179 y(pr_debug\()p 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(launc)o(her)o(_d)o(isc)o(on)o
(nec)o(t)p 0 TeXcolorgray 0.73 0.40 0.13 TeXcolorrgb(\\)o(n)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray
-1 w(\);)499 1279 y(mutex_lock\()p 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray(dis)o(con)o(ne)o(ct_)o(mu)o(tex)o(\);)p
0.25 0.50 0.50 TeXcolorrgb 342 w Fb(/*)43 b(Not)f(interruptible)c(*/)p
0 TeXcolorgray 499 1478 a Fa(dev)p 0.40 0.40 0.40 TeXcolorrgb
42 w(=)p 0 TeXcolorgray 43 w(usb_get_intfdata\()o(in)o(ter)o(fa)o(ce)o
(\);)499 1577 y(usb_set_intfdat)o(a\(i)o(nt)o(erf)o(ac)o(e,)p
0.00 0.50 0.00 TeXcolorrgb 37 w(NULL)p 0 TeXcolorgray(\);)499
1777 y(down\()p 0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(sem\))o(;)p 0.25 0.50 0.50
TeXcolorrgb 38 w Fb(/*)k(Not)h(interruptible)38 b(*/)p
0 TeXcolorgray 499 1976 a Fa(minor)p 0.40 0.40 0.40 TeXcolorrgb
41 w(=)p 0 TeXcolorgray 43 w(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(minor;)p
0.25 0.50 0.50 TeXcolorrgb 499 2175 a Fb(/*)k(Give)g(back)g(our)h
(minor.)e(*/)p 0 TeXcolorgray 499 2275 a Fa(usb_deregister_)o(dev)o
(\(i)o(nte)o(rf)o(ace)o(,)p 0.40 0.40 0.40 TeXcolorrgb
37 w(&)p 0 TeXcolorgray(class\);)p 0.25 0.50 0.50 TeXcolorrgb
499 2474 a Fb(/*)h(If)h(the)g(device)e(is)h(not)h(opened,)d(then)i(we)h
(clean)f(up)g(right)g(now.)g(*/)p 0 TeXcolorgray 0.00 0.50 0.00
TeXcolorrgb 499 2574 a Fa(if)p 0 TeXcolorgray 42 w(\()p
0.40 0.40 0.40 TeXcolorrgb(!)p 0 TeXcolorgray 43 w(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(open_count\))37 b({)847
2673 y(up\()p 0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray(dev)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(sem\);)847 2773 y(launcher_delete\(d)o
(ev\))o(;)499 2873 y(})p 0.00 0.50 0.00 TeXcolorrgb 43
w(else)p 0 TeXcolorgray 42 w({)847 2972 y(dev)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(udev)p 0.40 0.40 0.40 TeXcolorrgb 40 w(=)p
0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 43 w(NULL)p
0 TeXcolorgray(;)847 3072 y(up\()p 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray(dev)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(sem\);)499
3171 y(})499 3371 y(mutex_unlock\()p 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray(d)o(isc)o(on)o(nec)o(t_)o(mut)o(ex)o(\);)150
3570 y(})p 0.00 0.50 0.00 TeXcolorrgb 150 3769 a(static)p
0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb 41 w(int)p
0 TeXcolorgray 42 w(__init)p 0.00 0.00 1.00 TeXcolorrgb
42 w(launcher_init)p 0 TeXcolorgray(\()p 0.69 0.00 0.25
TeXcolorrgb(v)o(oid)p 0 TeXcolorgray -1 w(\))150 3869
y({)p 0.69 0.00 0.25 TeXcolorrgb 499 3968 a(int)p 0 TeXcolorgray
42 w(result;)499 4168 y(pr_debug\()p 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(launc)o(her)o(_i)o(nit)p
0 TeXcolorgray 0.73 0.40 0.13 TeXcolorrgb -1 w(\\n)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb -1 w(")p 0
TeXcolorgray(\);)p 0.25 0.50 0.50 TeXcolorrgb 499 4367
a Fb(/*)42 b(Wire)g(up)h(our)f(probe/disconnect)37 b(*/)p
0 TeXcolorgray 499 4467 a Fa(launcher_driver)o(.pr)o(ob)o(e)p
0.40 0.40 0.40 TeXcolorrgb 38 w(=)p 0 TeXcolorgray 43
w(launcher_probe;)499 4566 y(launcher_driver)o(.di)o(sc)o(onn)o(ec)o(t)
p 0.40 0.40 0.40 TeXcolorrgb 38 w(=)p 0 TeXcolorgray
43 w(launcher_discon)o(nec)o(t;)p 0.25 0.50 0.50 TeXcolorrgb
499 4765 a Fb(/*)42 b(Register)f(this)h(driver)f(with)h(the)g(USB)g
(subsystem)e(*/)p 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb
499 4865 a Fa(if)p 0 TeXcolorgray 42 w(\(\(result)p 0.40 0.40 0.40
TeXcolorrgb 41 w(=)p 0 TeXcolorgray 43 w(usb_register\()p
0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray(la)o(un)o(che)o(r_)o(dri)
o(ve)o(r\))o(\)\))d({)847 4965 y(pr_err\()p 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(usb_regis)o
(ter)o(\(\))g(failed.)k(Error)g(number)g(\045d)p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(,)h(result\);)499
5064 y(})p 0 TeXcolorgray 1908 5349 a Fd(15)p 0 TeXcolorgray
eop end
%%Page: 16 18
TeXDict begin 16 17 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray 142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray
142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.16) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb
499 83 a Fa(return)p 0 TeXcolorgray 41 w(result;)150
183 y(})p 0.00 0.50 0.00 TeXcolorrgb 150 382 a(static)p
0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb 41 w(void)p
0 TeXcolorgray 42 w(__exit)p 0.00 0.00 1.00 TeXcolorrgb
41 w(launcher_exit)p 0 TeXcolorgray(\()p 0.69 0.00 0.25
TeXcolorrgb(voi)o(d)p 0 TeXcolorgray(\))150 482 y({)499
581 y(pr_debug\()p 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(launc)o(her)o(_e)o(xit)p 0
TeXcolorgray 0.73 0.40 0.13 TeXcolorrgb -1 w(\\n)p 0
TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb -1 w(")p 0 TeXcolorgray(\);)p
0.25 0.50 0.50 TeXcolorrgb 499 681 a Fb(/*)42 b(Deregister)e(this)i
(driver)f(with)h(the)g(USB)h(subsystem)c(*/)p 0 TeXcolorgray
499 780 a Fa(usb_deregister\()p 0.40 0.40 0.40 TeXcolorrgb
-1 w(&)p 0 TeXcolorgray(la)o(un)o(che)o(r_)o(dri)o(ve)o(r\))o(;)150
880 y(})150 1079 y(module_init\(laun)o(che)o(r_)o(in)o(it\))o(;)150
1179 y(module_exit\(laun)o(che)o(r_)o(ex)o(it\))o(;)150
1378 y(MODULE_LICENSE\()p 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb -1 w(GPL)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb -1 w(")p 0
TeXcolorgray(\))o(;)150 1478 y(MODULE_AUTHOR\()p 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(N)o(ick)e
(Glynn)k(<Nick.Glynn@feabh)o(as)o(.co)o(m>)p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb -1 w(")p 0 TeXcolorgray(\))o(;)150
1577 y(MODULE_DESCRIPTI)o(ON\()p 0.73 0.13 0.13 TeXcolorrgb
-1 w(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(U)o(SB)c(Launcher)j
(Driver)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray(\);)p 0 TeXcolorgray 1908 5349 a Fd(16)p
0 TeXcolorgray eop end
%%Page: 17 19
TeXDict begin 17 18 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray 142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray
142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.17) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end

150 0 a 150 0 a
SDict begin [/View [/XYZ H.V]/Dest (section.5) cvn /DEST pdfmark end
 150 0 a 83 x Fc(5)135 b(Con)l(troller)46
b(Co)t(de)p 0.74 0.48 0.00 TeXcolorrgb 150 265 a Fb(#)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 14 w(include)41
b(<fcntl.h>)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 364 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(include)g(<stdio.h>)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 150 464 a(#)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 14 w(include)g(<stdlib.h>)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 150 564 a(#)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 14 w(include)g(<unistd.h>)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 150 763 a(#)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 14 w(define)g(LAUNCHER_NODE)
474 b(")p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 14
w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 14 w(dev)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 13 w(/)p 0
TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 14 w(launcher0")p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 150 863 a(#)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 14 w(define)41
b(LAUNCHER_FIRE)474 b(0x10)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 150 962 a(#)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 14 w(define)41 b(LAUNCHER_STOP)474 b(0x20)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 150 1062 a(#)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 14 w(define)41
b(LAUNCHER_UP)562 b(0x02)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 150 1162 a(#)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 14 w(define)41 b(LAUNCHER_DOWN)474 b(0x01)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 150 1261 a(#)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 14 w(define)41
b(LAUNCHER_LEFT)474 b(0x04)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 150 1361 a(#)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 14 w(define)41 b(LAUNCHER_RIGHT)430 b(0x08)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 150 1460 a(#)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 14 w(define)41
b(LAUNCHER_UP_LEFT)342 b(\(LAUNCHER_UP)39 b(|)k(LAUNCHER_LEFT\))p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 150 1560 a(#)p
0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb 14 w(define)e
(LAUNCHER_DOWN_LE)o(FT)255 b(\(LAUNCHER_DOWN)38 b(|)43
b(LAUNCHER_LEFT\))p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 1660 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(define)e(LAUNCHER_UP_RIGH)o(T)299 b(\(LAUNCHER_UP)39
b(|)k(LAUNCHER_RIGHT\))p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 150 1759 a(#)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 14 w(define)e(LAUNCHER_DOWN_RI)o(GHT)211
b(\(LAUNCHER_DOWN)38 b(|)43 b(LAUNCHER_RIGHT\))p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 150 1959 a(#)p 0 TeXcolorgray
0.74 0.48 0.00 TeXcolorrgb 14 w(define)e(SEC)h(1000)p
0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 150 2158 a
Fa(static)p 0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb
41 w(void)p 0 TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb
42 w(launcher_cmd)p 0 TeXcolorgray(\()p 0.69 0.00 0.25
TeXcolorrgb(int)p 0 TeXcolorgray 37 w(fd,)p 0.69 0.00 0.25
TeXcolorrgb 42 w(int)p 0 TeXcolorgray 43 w(cmd\))150
2257 y({)p 0.69 0.00 0.25 TeXcolorrgb 499 2357 a(int)p
0 TeXcolorgray 42 w(retval)p 0.40 0.40 0.40 TeXcolorrgb
41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43
w(0)p 0 TeXcolorgray(;)499 2556 y(retval)p 0.40 0.40 0.40
TeXcolorrgb 41 w(=)p 0 TeXcolorgray 43 w(write\(fd,)p
0.40 0.40 0.40 TeXcolorrgb 40 w(&)p 0 TeXcolorgray(cmd,)p
0.40 0.40 0.40 TeXcolorrgb 41 w(1)p 0 TeXcolorgray(\);)p
0.00 0.50 0.00 TeXcolorrgb 499 2656 a(if)p 0 TeXcolorgray
42 w(\(retval)p 0.40 0.40 0.40 TeXcolorrgb 41 w(<)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43 w(0)p 0 TeXcolorgray(\))h({)
847 2756 y(fprintf\(stderr,)p 0.73 0.13 0.13 TeXcolorrgb
38 w(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(Could)e(not)h(send)g
(command)f(to)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb
43 w(")p 0 TeXcolorgray 43 w(LAUNCHER_NODE)p 0.73 0.13 0.13
TeXcolorrgb 1196 2855 a(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb 43 w(\(error)g(\045d\))p 0 TeXcolorgray 0.73 0.40 0.13
TeXcolorrgb(\\n)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray(,)g(retval\);)499 2955 y(})p 0.00 0.50 0.00
TeXcolorrgb 43 w(else)p 0 TeXcolorgray 0.00 0.50 0.00
TeXcolorrgb 42 w(if)p 0 TeXcolorgray 43 w(\(LAUNCHER_FIRE)p
0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(=)p 0 TeXcolorgray 43 w(cmd\))h({)847 3054
y(usleep\()p 0.40 0.40 0.40 TeXcolorrgb(5000000)p 0 TeXcolorgray(\);)
499 3154 y(})150 3254 y(})p 0.69 0.00 0.25 TeXcolorrgb
150 3453 a(int)p 0 TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb
42 w(main)p 0 TeXcolorgray(\()p 0.69 0.00 0.25 TeXcolorrgb(int)p
0 TeXcolorgray 41 w(argc,)p 0.69 0.00 0.25 TeXcolorrgb
41 w(char)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
42 w(*)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(*)p
0 TeXcolorgray(argv\))150 3553 y({)p 0.69 0.00 0.25 TeXcolorrgb
499 3652 a(char)p 0 TeXcolorgray 42 w(c;)p 0.69 0.00 0.25
TeXcolorrgb 499 3752 a(int)p 0 TeXcolorgray 42 w(fd;)p
0.69 0.00 0.25 TeXcolorrgb 499 3851 a(int)p 0 TeXcolorgray
42 w(cmd)p 0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray
44 w(LAUNCHER_STOP;)p 0.69 0.00 0.25 TeXcolorrgb 499
3951 a(char)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
42 w(*)p 0 TeXcolorgray(dev)p 0.40 0.40 0.40 TeXcolorrgb
42 w(=)p 0 TeXcolorgray 43 w(LAUNCHER_NODE;)p 0.69 0.00 0.25
TeXcolorrgb 499 4051 a(unsigned)p 0 TeXcolorgray 0.69 0.00 0.25
TeXcolorrgb 40 w(int)p 0 TeXcolorgray 42 w(duration)p
0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb 43 w(50)p 0 TeXcolorgray(;)499 4250 y(fd)p
0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray 44
w(open\(dev,)d(O_RDWR\);)p 0.00 0.50 0.00 TeXcolorrgb
499 4350 a(if)p 0 TeXcolorgray 42 w(\(fd)p 0.40 0.40 0.40
TeXcolorrgb 43 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(=)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43 w(-)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(1)p 0 TeXcolorgray(\))j({)847
4449 y(perror\()p 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(Couldn't)37 b(open)42 b(file:)g(\045m)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)847
4549 y(exit\()p 0.40 0.40 0.40 TeXcolorrgb(1)p 0 TeXcolorgray(\);)499
4648 y(})499 4848 y(system\()p 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(/bin/st)o(ty)37
b(raw)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray(\);)p 0.00 0.50 0.00 TeXcolorrgb 499 4947
a(while)p 0 TeXcolorgray 41 w(\(\(c)p 0.40 0.40 0.40
TeXcolorrgb 43 w(=)p 0 TeXcolorgray 43 w(getchar\(\)\))p
0.40 0.40 0.40 TeXcolorrgb 39 w(!)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(=)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb
43 w('q')p 0 TeXcolorgray(\))42 b({)p 0.00 0.50 0.00
TeXcolorrgb 847 5047 a(switch)p 0 TeXcolorgray 41 w(\(c\))h({)p
0 TeXcolorgray 1908 5349 a Fd(17)p 0 TeXcolorgray eop
end
%%Page: 18 20
TeXDict begin 18 19 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray 142 -316 a
SDict begin H.S end
 142 -316 a 0 TeXcolorgray 0 TeXcolorgray
142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.18) cvn /DEST pdfmark end
 142 -316 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb
804 83 a Fa(case)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb
42 w('a')p 0 TeXcolorgray(:)1196 183 y(cmd)p 0.40 0.40 0.40
TeXcolorrgb 42 w(=)p 0 TeXcolorgray 44 w(LAUNCHER_LEFT;)p
0.00 0.50 0.00 TeXcolorrgb 1196 282 a(break)p 0 TeXcolorgray(;)p
0.00 0.50 0.00 TeXcolorrgb 847 382 a(case)p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb 42 w('d')p 0 TeXcolorgray(:)1196
482 y(cmd)p 0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray
44 w(LAUNCHER_RIGHT;)p 0.00 0.50 0.00 TeXcolorrgb 1196
581 a(break)p 0 TeXcolorgray(;)p 0.00 0.50 0.00 TeXcolorrgb
847 681 a(case)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb
42 w('w')p 0 TeXcolorgray(:)1196 780 y(cmd)p 0.40 0.40 0.40
TeXcolorrgb 42 w(=)p 0 TeXcolorgray 44 w(LAUNCHER_UP;)p
0.00 0.50 0.00 TeXcolorrgb 1196 880 a(break)p 0 TeXcolorgray(;)p
0.00 0.50 0.00 TeXcolorrgb 847 980 a(case)p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb 42 w('s')p 0 TeXcolorgray(:)1196
1079 y(cmd)p 0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray
44 w(LAUNCHER_DOWN;)p 0.00 0.50 0.00 TeXcolorrgb 1196
1179 a(break)p 0 TeXcolorgray(;)p 0.00 0.50 0.00 TeXcolorrgb
847 1279 a(case)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb
42 w(')43 b(')p 0 TeXcolorgray(:)1196 1378 y(cmd)p 0.40 0.40 0.40
TeXcolorrgb 42 w(=)p 0 TeXcolorgray 44 w(LAUNCHER_FIRE;)p
0.00 0.50 0.00 TeXcolorrgb 1196 1478 a(break)p 0 TeXcolorgray(;)p
0.00 0.50 0.00 TeXcolorrgb 847 1577 a(case)p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb 42 w('e')p 0 TeXcolorgray(:)1196
1677 y(cmd)p 0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray
44 w(LAUNCHER_STOP;)p 0.00 0.50 0.00 TeXcolorrgb 1196
1777 a(break)p 0 TeXcolorgray(;)847 1876 y(})847 1976
y(launcher_cmd\(fd,)37 b(cmd\);)847 2076 y(usleep\(duration)p
0.40 0.40 0.40 TeXcolorrgb 38 w(*)p 0 TeXcolorgray(SEC\);)847
2175 y(launcher_cmd\(fd,)g(LAUNCHER_STOP\);)499 2275
y(})499 2474 y(close\(fd\);)499 2574 y(system\()p 0.73 0.13 0.13
TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(/bin/st)o(ty)
g(cooked)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray(\);)p 0.00 0.50 0.00 TeXcolorrgb 499 2673
a(return)p 0 TeXcolorgray 41 w(EXIT_SUCCESS;)150 2773
y(})p 0 TeXcolorgray 1908 5349 a Fd(18)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
