%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: mywriteup.dvi
%%CreationDate: Mon May 27 21:15:08 2013
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR10 CMR17 CMTI10 CMBX10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter mywriteup.dvi -o
%+ mywriteup.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.05.27:2115
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /colon put
dup 66 /B put
dup 68 /D put
dup 73 /I put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405CF54722827FBC24AEF08
F6DD0BC6A79A2DB1FF539454E8F5D1A42D40CCFBC093AFD3E57973A009095CEA
B91FAFD236C47F453B38DB0067907A28EB5E9ADE87A2181F1D6DE4E183631716
C21F0F952E0666AC74371F8B5C888DC44FBA5607435A619684F502CF625663C7
94B0DAA79BE8E129E7F5C5AD1B7495C1BC9B1C759867467F55148C7FF2F914D8
95218C4C3C2D2DB3482C21EA050F23D6A7A056B172EB210276CDB3B1DCA47A99
96AF4B0A1E4A219C2559BDAF6F4C56D862C31ED9A2DED98A79B1993FE3C7F50F
9AAC0E3EBD9F7431FFB72E03A05ED59A723EA87D7B7EC6CAEB5D464B4F6421A4
37931A2EBD816C7AC81F42E9372DE5AF671D6B68572D60295D4052FBE669D0E8
8C03298934B13B595BFC1A4614AC3A618C17E9952987100AFC0EC031C970FC19
30C18A3C23D649EE2C8CBE0C05C80DD94D75107FA358E8822DBC0E89BB7C580C
ABEA97A53651FF71BD54185D979C523DFB7852469ABE08037B577708D281F576
2ADE506C2DA47286A8A2312B11DE4C7EF99A1D62984C5FE0BFA48E59B3683BAD
EA266C87FA3773242E1A590EC370531F629C33E5C7B79CE97EFA358C5A9E08E4
484F46950FD8026C281C0A7FE832B1274866DF0C12B4C6F5C9ED4C27F458F2C5
8A0385AD4D3598BCEF98DBF163EFB354398CAF586AA3EDB86502516ABBA71A38
37CE8DEC9CF5422C7025D6BAE791B34C8CBF53CABD2D554B95812BB76A4FA9A3
D5FB9DC1FFEE884F2FEFBBD39715F12F6776BF860BCFC52C42690425FF6CA294
BA9F96292669E6989CAE5A672AE0243228CB9881A8D662574F75447878D49515
6D76E078DEE98A4BC6F5A14D76CAC5D1484130FE175985E63363B41F13C0173A
AD78997B23CF1B3D7BA61C188D3A4C97526A6436EC2F8374D28C46FBE233FF5E
12E956F9812F3D1F708C2548510A255027D81C4C17B989618FAD618572995964
8AFC2D52F92110BD898A13D5662A04F4E61E548D010C14747204ACD050130FF7
C7D8E436E9076C2468FFAD1BC244ADFD2B1DCDCCA7AC9BB4A6AD408529E972C9
A01B6176AD76F2D10739CCD19811D25FB40A3E14E39785EFEA4EF9D755A3E4D8
EB67D4371A6DB6980D29BA796BC45A117686B4320A7EB783C5A2798EF5D7942F
B1FD2351EE849A2A3FCCE2A38F645DDB28568DED94E4DEE8238731537F26989B
9AEFB30E389486839390D022DB8833D519648978FC294C8F05C0547A24954DAB
12E261CA28C66A704C2953D0836C6E72F5EAF55BB2C12B340C94D9A9C4FF6692
7DE084795F5E1CDB3D025652BD5566437278D29C42C582CF5355F5CFF0AF4F19
46CBED163B399ED246B6E79AC950AD010C421358F0A5769FA7FD05BCD1AE29CA
663C6E04AC355BB5283045EF5F6AD25E7C2384A9C349C4CAE6F14BD2CE57A3AC
A274D636595EAC73169AEEE03524433EB81FD398D7FE5471B001FE69C5BA0248
A040A38DCD8E0E751843F6C31ADB2ADAEDFBCED29DB9E89F16FF1B189937A55C
4627D629F9582D60D550BDD645F9F48782D161E2F91588E2E6C7EE9EB90A8464
FB90D85AFF7C21CF910170A302FD0E1ABEE8023A42288C6B983FD5E04057DAF5
3EB71646DFA587CB045EEE4C08179E8A41B189F4E42D87887CCCECC4D28D6259
74936BC88136D65A14A2FDD8FAC5E0D484945E51640526B6ED82481491206624
298790048804F65A0A8D20AECCB87E7BC2F1041A669F5090EDBB7F76B118DB50
3EFF2D47999C40A84B03DE2C8B442955AAC2BE49723429486C031788F2BDA122
FCC15E1ECB98C22CBABE6F7D3B5EC3745DA995B25BD4F672F1B7F4B843D4D3D4
2E2E4043AF5F6E1B00D1DC4416066DD2EB481970DCE4C16CC4AF7468EB2292B6
5BCE78364687DDA9C97A7D3178EAA05D276F44DF7C0239A2A5FA06DE6047ED83
DCBB6EA0084FFEC6F4DB23D53A21F7CB753C577E965C8424FC99465D3C043E39
85779D480FA04F44E7F0B729672F48C971317822CCC9B787957EDB50FF7D42C4
57E61542E42C26280B488E2478A2A25E6A86907F4E6F05804249345E1FC0A345
00B62392C604161497077F35F83923BBB0C2D5765B0E13A0EEEAE57C21EB7432
6943ECC4BEDFD6B6F576719386ACE7065A3E78A216B1D66C8E558A0F8D30AF7A
73DC24761EC16D3FCC2E6A0561D827987500CA929216BB960A63D3E2C926C7D9
2EFEE9BC4749A4DC4C2CAFB302E1E646F18E31A64418F0A7055CDCB0BA91E4E9
19DF71E189D3D95E6BF9E5A01169EB47360426B477729FF5AC956A67261C5F5F
89B246E8F77979F883215006E1AB30FD43294008471D9E7BEFD6A7DE8320A567
2D76673CAF4A48E3FE133A2E86EC496BD4A24D9638B33E7CBCEC238A11A361A4
8BDA542BFF18F7F87AEFD89BD289AA790D2B33F4D243F659355C791B00106EAC
2B987E7AD0496493C151972EB93A66BFFA0AA55DB4BE80EA6CB007213FC4033F
39145C16F1A1AB7AA6A359DEBB3E255A250A4E8BDF2A142B72CFEA7BC6933B0D
BE948B54191FB4D90F67F3E262FA1F7877E9BD628B69E3FF55E6F26CA0931541
275D6963669DA5E78C2E5DC94AB75BE98A57EA06BDBD0A34C33960ACEE10C56F
D6794521C68969A7C606E1A02B3395F4965C6244ECE491B0C79CD332CDC301DE
F992421D1246E235C579A6BB8B9DFEA1F61BE6988B070290558CB006B21EE8C4
4FE37D132225E9C679A5F95EEEB7E9B1F909BC3982991A7CEDB2361DEB8923C8
C978EB711A6B5E1D655B72BC754282290DCF74788F6C7D105BBF0C7CF5F16832
AEB4A4240334947B1DFC676F67A7480CABF0E765AB9598351883F7C6E63A6A99
ECA2038991D1E6D2F8F1C9930D03890DB19D40621D0E289E31E72D3B69A25FF5
6921C7330FB36EADB2B57D6618516FE1CFE1594D8459BC0281F8C610589C022A
1229FF6B59CE696E3EE68C45BA58499B23D0019A9E0C09533DE4A0EB346A90A3
BCDDD45E2F2B3ADDE03C7D42AA5E825D0AE31AED1CD131F0E0EFDC83B8B61148
BD52E2AC33F21BEBE78492CCA8643E1EBBFDD16F297D8353525D72D26DF5C147
A5779F10C34894EAC6A1BC35B34D129562EA29E0E21FB137B80B0529ADC378E7
B15BCD85C633D6D966FABE3CED9D42C127D0BB2CFCE17B4DC2DE331A3B9EDF26
F9C46177CF01A7AD441E95415A6EFFF48E829DFB675D74240FAAE26DCA18C222
145CEFE70708D524AD3488692031C0A3608BD8356581F810DCBB49FFF740D72D
F1F19024A8C3E08DBB60DB323B350144CED25FAD3FEADBB666E3DEDAFCCD6889
16793220560E0C160614AF105036397D3A7B89EFDF536861E73E36497EA60377
65FC0262B70CF243F2229D4EF4601ECEBB7466D7F5621995EB0AA1E8FC063D3B
AE85590C634990E3D24CFC2A142E74511CAAD6E04EF1AC4DBDF9597E5AFD836B
82187B54E1E575C40649188301D0A10386B16BDF8A91D794C620622C808843C0
7581ABC35FFEBC26CA39430F48A0201293A95E584BC4D6BC59725D2792D5472C
F7254D15117AFC72169F9180F64F3EEB356ABC08542989B34B365F4CD9117C45
A7A112F538C04239A627CFBF808873F15076630C415ABF4552A99A6FBFC8156F
64AE4193F0C9EBDFA6267E6179D94BBAEBE8377297562F180D4F254B62173F26
25A5C7F2A231E9848368E497B3740D1DF0752E30AD637DE32323EF5DE1EB8B1A
C7EE85439B25F1232BBC5776C77E212E3F77A7B1342C12D258445E9373D92968
36CAD9F04255D81FED3B5E0EEF78DA62960DB0161769C2A8F128EB0DF95B3B7F
EAA2A75C2EE77840DE54FC648CC083F63FA6AF525895D3732590DCCDED61D2AE
90D1B5E6682A71EEC29D08745F6A3563C26EC8932E6A5349ECF8A345457995A5
B9BECFFD59D6BE0989E7BE007826F1CDAAC83E5C2FBE053CC3998951B6C2E771
634EEF26947489CE0ABFA6A7228F2C9B802DFD0B53BA0173AD59D44FF20B46BC
D8073084E5D3B114E780618B0D7727AE6EC0F554AB192BA9E04CBDB624EFE1D7
23DA4A414D7DD9B2737D9093F22A459689E88E115D0BA235297730AD417AE7B4
E235A12664249A67D90952C610458862DABCE5CD9E72095700040E4A97266871
97EE6437515D9177AD7BD6D7DF6AE34B5D213CA6A8276CC3646BC3D57E555F97
EB822CD19A02694B6EDA2AE51290CEE32496A2CBA183644527BFB85D17F67896
F6A6D19F93978F5077BCFCA7123DADCEECF87F583BF8AF7C623658369F0305C1
5DD24AF25C8ADBD6FFA518F2CEBCC43B5773055A0EA81B7D61A4D82BA1899481
905CB26627D01DFD4B73D657EB25B29885D5341740115DEBE173BF13D171760B
6A68510401902A24B663EE191B178C15117D3D857B7F7496BC3EB14D5168FE7B
B795C49C2DCA6E27BEB6BAA1D38B5C7F5CD0D88FE38C6D638BC761BD395E8CBE
54B654F1AE452DD104A9B78B037E64F75DBB3F5D83234D2FEF259482260D67F7
B665C7377EB7450AE328B660DE03110F936F417C85B79E8145358FD8B10287A5
3626612978C98231E4817B2D913180D465C4A0B85A0EFA018B4A2626A479EC5C
6E554B47F58F16BCA856650578F342C9215CD273865915C164571A61A2A93DE7
4245DD8B69CAD7B58C2FBD0E864F02893C7646366C975247AA022CD6F9E9060C
6136EB43ACA8FE0B75AC9F91AA7FF54AE57E9EFB873E268E02084FFF308FF45B
37B171E1E267ABC8C471ED3F8BF28287E4E06BCFDE61A9AB94C081817796ABB7
1621C90379853A6C34A103B429105E7876D3353603B6C75F2339F19FC08C3AD7
6F3529CA49D66610836085D72CE3B67C18552202DDE085CD3E842A2F52A48FFE
9D78D455E54275D791DEA42DA5B0160B9F2CCF1E07B1B1B53CE937B4A10A9418
19337EDC94D3A11438C1F5C98F834AF7BDF603CB1D43F9273AAF77F38C0D29A3
C49A6856A6B8D6FCF3D0A340BA389C892A110AE89B514630FDE6880F8E29C4F4
0D1976B7F03271BCBFF35CB7128ED1C846B55265BB7D93BEE9B3D23F170ED306
A129B2571D266F9E1DA96DA93EC0B5791BB1C2838818BD7CB5DA8E90C24DE403
0175BEC4C023DB2BB48D2831276E8B4225FD464207E522411E36C40437007DB2
222824274AE7E4D1D63FCC287EBCE5D06FDB978C99A97486B4CFB34C8E1581FF
08ADC4F0B164E8F00A7ABB941C7F65EBD1440F6A85B71AA3755DBB1004D9EC0C
66A694E714E2B7488589ADD8F96FF2A34CF08F7E534BCFD7B7CE4AEECBEE4D65
5F971AE52A1C92A801A523274A21D868B5AC4A1502081A51EEDC358EDF617CC3
0595442D182A788F1CF6B931BAF818F6CCDBF09298133912515F74A5B8152BE3
3278017876B6F9B4196B8F8D8A3F59A984A4BC9F8E85C993BA90C2F6639D1B3E
7C51E52BB79CD01BE44FC4C052705436F3B6BB47C1CD52D1F06579B8FAB9F4C7
1671828400A88462251DBFDFB82F60CFADEC16CFFCDE2F44A96F31FF4F08AF2A
DD3DCC1EDF76BF9DD7AB2F579ECBB63FF91AEAA61ED542AB59CC0471BBD413CC
693F3E1D3A4B557DA65C28DFAA596046A8B70770A91FFFED125461D651B90925
3A7A662CFF2B479F2E359EB1900F512BF1AEF1C8B0EB10DC1A1375A14DC360D9
4D6B4FB0FA3E5C4BD4DEAC64C09A2D3926B06603036A80387BC55DBB271D74F6
33D74247B70C6BF8EC999554B20C0CAA0C4A760EBE89703414196B4B5F6250FC
2217
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 44 /comma put
dup 46 /period put
dup 63 /question put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 72 /H put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 83 /S put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C4DD885310A706B320AB25C8D742C6F29953254FA54DAAEE60ED477877D19BC
D28E9AB576B0EA088171FD000B60D73B3C57F754BC07EBC9BF751B7D2B32459D
993861B7C4B0D98C422A11BECEF76F4EFC0ECAEE89723E6CED53E3678D733363
2DF068AEF0FE7DFB57393BDAA439A6A4C396F86032A98009EAE1247B7DE83B3B
E46DF2898598FF5E6CA6953127432A967E4FD41CDD60D6E413059A58FA556EF3
309178B57C16A763CFC9BEEC276944BDEA255789EF4E1ECDE1EA43EEDB955513
F42EDDCF39AE522A1DC2D80B2772B05DA60F3DC15A815A6BAFEDC399C7956E75
3851CB3588E22936FBFB63A58300298B11C45D82385C083D07AF133BB1BC941A
FDD9F34D5E0B8087EF2A58C54D8AB7580EE3ED58AEB83B72CB9028F472AA0C3D
5C0DD07F3D20112C51366AF49C461175B32F43B33E558E7595CDB39F19A8B2D0
FDA3CC3A8318A933B24E87EDDEF5E7412BE9549342DA85A525069325D0249001
658803AB814B49D0EC4DDE1F83683BD817FAFCFA53893D1A325A4C1E1DBAEEB2
50684E0537FC2B95ECCF67D43C844D9DC5C9BA2289DAF7CD762C3532A7135736
E643E0DC78100DFE97250C43B1991234B694E0A8461F7CDE9493AD8A97C04169
4D77015503A61DFE15BF85257C42A6ED10B516C5BA69177FE94D14189B85DFEF
3367BEBCD432452AD0CC4A3242CAD8AE8D5312E30FB0F68A1D67CAB86E5D20FE
4CD02E9CF52080A349F300601476E758BEE751734EC7DA0F874514415488DCCA
989D92A9A5AE9517964FE3C6D3E462D3E94031CFCBB9FE1ECC964ED780BFED3B
44B090AAEA6E981C242C13E4F2E17E39365039B79093E2646CB23BD51874DC4B
DAE8EA84F1F7A14E0F9CC72634649BAC610B7785CCB2F5AFAC368839063A2D7B
896CDD2E0F277D65451AABA347DBB8B8DDDFE34FB2A32E83FD52D86ACD161E5B
E318A87A50DE32880E4F8401B1A2D86B497ECC11F8F363EE8B2CF7F10996DFBE
CC88D61BD4F7281200B3FEB73BFF28217DE2A1FAC2CC2194744C939FA1615BB2
2D43A095CDCAF7ED406786649F3E39FE437E0B554B7EF4E595B4323F872E40A6
3EC0F31761A61B8DB56BB49CB03B554F6BD3B60649AD262EC912BE3A915EEDA0
6D9C3394C744EC3E8F16BE35A602413B6DCE3AF49F41D29E43F883C9EFAB7B29
08E6FD8826CA54932E19048EBB821E85278FDCCAB2C81EAD188DA7AFFA2141BB
01D2EE9964D9C876DBAA6FF2541D7FF2880013C9894B29240330162148B28708
8A01F191C64AD8109CA3B50152DB2D021E2B931857D2AC112246CBB1CB92D4AE
9246A669505F8BDFDC6BE14005CC5A46ADC07B94B121FC625F0C33AD150E24DA
F03B8EFB60D478D9D15C3DBAEC6BF64C8708C76125DEC46220819B4E7723968F
F0DBFF58E219D3BAD0F91EDF2DB8BE351701B11A6F508E88AD6F156D282BF59A
6533C67CD199D7DFED699553E1BF093AD22B11AB69216F2A8C2B705A0D9C51CA
51E75BA84E9168414F2530D99F19FB324638753A298887AC2A3D82286F512A50
8DF97EC26B62C958FFB11929EACD0D44A922F9F1FD6619135249612EC0F9CD7C
03A95D98D2D7F20C6DEDE5129946FE242A23E104AE59A3953C9C419C86F9F223
96C8BB2146CFA26D2419DDE8F9E83538DD8A00527B5C96A6C2AE5FC4F5CF12C0
38DA1FE8DD54932BB4B62E7172B75A762AEA44D95B2103295FF09EBF46171FCB
72711CCBCB6314B560ABCA461FAF68B06F416A5CED4A802BEF49E3D87B32E4AE
A6B90A31A2496187F1B543764C2C7A533B7C5487103E824D595F07427FC691BE
55F7076A140F3D2E418EBA6B40F611F1C05788318B74AA62E29BD85A13D82446
3E8FF7E8091CF26066E0F64C39459C6AA8CE63A4BB9BDB7733A731DEBFD3CCE2
C05A009F714810E3D4FE5D5F215B4310D3D61867D809E6247F83C3EEF112BDAB
95A464E1E1CE419632D8804B9FF1A2F8DB09ABABA416D3B03B327139C5BA2071
F33667B79EA6FE04036CA963C1AE76FD0F365BCAC3F4E786CD189880AFF836C3
561768F90BFC3231F5DB9F07059CDE0A46ADD92D842380DA9CB71AC70B3E32B9
436EA549A328892FFF0E5BDC95A348AACE502CFAEC2C11EFEEC30B2A9C36E540
1384417AD94FF1D2AFC320BAC0651A5B719FA58526710AD10283FA6713F34134
5014ED3C9825C086E63D7D7AE06D97DBA027E99357968682CC729A2A546FA05A
5FDE444D45B695E29D4217E05E5D2CCFABA8491C87AAE0BE85C11F76313136AB
3CF4E9F0F1F0EDF11C6639E38FC1A99085AE703583B1C34404FB517F3080D2DB
E0B5E540D9CB50AB230B02FB9F2DFAEEC26BD730E924423F8E66E75F96C70E40
BA3439FB9457C8C2E52AF4BDC5EE79041B1037BBE0BBD8DB37955DDF948154C1
BA94C96F0E5D65C60D97DF7DA2637E07BD96BB067E5C541A4DCD94C2BD046E8B
C8FC799FBCDD6305B460E0A13A3C4EE1BBF042BA154AA081F446E3729D55EE3E
78DB1650E28F8B79182954A114BBE5F62DB9D2D27BAFC7A6C061BC474F589226
66B5C37A550F5D9AC05E6DE867A9CDE5B65D230184A18975C1B072D43D6005B0
0DC49DCD4CD3A903E3C9C22A722E4C6177EB7211F181A713D30CEC8D10019B2D
ABFFF07362783D2D2AC5CC9F2FE3A1076531C2523CF54244A52FA06C01CB626A
76CC82C59F610A0007F01FDEE8BEEF36A41C532703D0718F792F1F4258BA7FB6
39697F3E59A8981B6A271176430368369EF1751D83BE33C91234886DCDB07CAB
17CD28A6C5DFD26B837A26572DE552CD22B73461BE5DBAFC4B277D8208AF495D
3E8E2743C4E48F4D3A3E05F11B1FF263368E65DE52FC4A888B9205815C5B54EE
CA9CDC5FA2C759F9F8E6CCFF9AE608DE877227927C9E4F49E6178A5AE38F9688
9E8B9EA7A298C00517254B6539868AE398D8CE4BE1184CA4815ACB2D25573248
2E2A5A5183ED5E662C7F75F60FDDECDE4B3E4C59A5B654247E5054ED226BF6C8
17AB83184F79B9FDAF27CD7F9CDAA83A72000425B8EE9CCB737B0F113E5739F7
8500888892EDAA592BD2C89DFF718EED8B16C016FA519715C46F39FC0DF27ED2
A56A1E33A7931DC421A044E769AE1696E0E2B3F76B08FB59FE41FFD3718E7DA6
49744C30DB5F1C8B8820F33458663DEA2071B0052BCB68460EB132EE3418DCEE
E34D7FC2B3133E66B67ECF3B73F528EB09C0C32EAB7AA2FD357287D6B4472E0C
511BF1D1DBE6DEB00207D94636303A2F8C942A890DAFE8CB7255ABCBD079D9A8
AA06898306E52E9FA1F968E334FC7AA178A9C62F5D97064B98A0164C8C2BDEE8
240B90CC76ECC14489D7D94136FFA3B3B1EA0D1E3F5CE2EBA23FBE6459F25F08
61A3D3FF48999147DD906CC4210F8D9C28694F2351F10699074361F44B3FF845
097FD19592303B913BEDA65F8C8055F2AAC7BE6F7D3545DC4DD375D0483699D2
0BFA05AE526638BCBC42745488E187636ED8844E8E43380036EC4EEE97C82B87
1940F14F17AA05FDE980F4B1AAD11EAB44C8064696622FE466E42CB2ED4497D3
4C2014AA484D88FC45D8863D6E3D54F38EEDC6638FB4B9CC0B3B57170A0F0968
7FDF4A10F1203E2F4C557C69BFCB5F4BECF957FC86C1EB0D21566B5F75BA6658
EC13FD22DC3BD4B4C6DB0B9643C5837A323D158DE5DB07D4C56F8B7303BF347D
9E9F02E594AC36616D15657EA2A0162D1482A5DAF6D03356806C44AFF9971A1C
80B70C61CFA2075B88B5282A9A2F45F06258057ABAFDC19462C5648060870EF6
A0F25B0D6DA731BA15048D73010991BD831EDA591D3381DEE7BF85C805E1EFA0
59B268D38DD3F7E2CFAB0096EE4F7C3CE2BCA23F7B7DABE9AD459ACCEFBDF953
D8587A69EA60F426F77FBF1F861169526A74AF8F71626C85A968D1146BC11619
F7CBA0301A73E53F9AF1B73ECB731B90CFCC1A825FB863C7D9F7EE013FEFBCC4
E7A248768ADA74DA540433C69ABB917DBACF87285A4958F4CD6ABDBD4551321D
EB3DAF5AC188328D8AD4F137CDCE3E856EB0310C3A702F962CA7FB3C2F8D3EFA
597ACBDA9400D8C3D1137D09F7F56AEFB7A2748B536E28E61D3070B15DD80404
DAB8336C54566F5360CE72E6C97C8EB78AAB9672C633BC45BA4D195F7FEA9D02
E783326C191C4BEE600C239F8F09557E73097A45F94C92FDC9487668434FDB68
D057A78730503B625FAA84500F423A5B31B027A3A1FAEB23B6545C56E58055BB
7F312AF9E52D870F8D1F7EDFB1F9A89A3D378A5CAA78829D29311A716AAF941B
4C46DD98679A9C161C923134321FD59F3A8820E5FF598F7E5866FC7E3BEA0536
DEBCB13E443B99A81F003063E693618ADBF5B1F382E70758F8E5AE56C6AC8A23
4F08EF1E92C3B9A770B99888B302E4B92AD4EB7100FCF97CAF2CB2000916C2D8
1800D737BA2394B45DDA9B44B89B1CD05D47F3DF9B723F4207219A6F5ED81511
B0D7E4E33F24A88E9200BF349F001AC0CD78883A469559046A4D944B38847C10
CECEC940190E465611FA1C5AF10FE344D17AF2883236EEFE2F2870DFAA561776
A34C802BBF5E63E4ABD98BD01A6A046AAD7F6C81CE6477C66F1A6B3E90225FD3
E5ACE924C50EB4DF7A1D80A545831DA46206B41B72891F1AD091B1E2595710D0
55EF26D993583DD881183A68E0656C542DE0562DC8F96EF6DF614865756E82A2
4B282548D7B05244146573F26B2A72C505B97AFED1E509586CFA1BA90241E6D2
EAB1ADFFC67EDC6C9CDC41CBD97E5786918D2D07E58A3F5253FA55C165EC8E28
4323786DB7BC19483671DB925C1EB06A09A6421AAE9121841773E9D5C64F9C43
C176AF266163C6C03D0440CBA00F71AFDFBAC43DDC300C87251B8BCA28FDEAB8
2DE5E288A8D3E77A01BD143EDBC2BA613A76D9ABDF1B537C04DAF0B09A931619
38B0AC07CA1B8C9E84A1E849999E8833ED7458D8BD2E06CD823FF24D3E45E719
2F8267E00CEDAAE12E0AE1B440292BDC660E232333A89CC30F12A4B539FB1A76
0F2ED3C826319C09481E074C3CB05BDB450EB3FC58BE131D123639AF892B403F
CE277E4F7FB4289009DC9B4A651E58841D95711EB57B984149515B9FBB70D623
33E4030127C9AA723620CCB6C074DC8294541A4DC16F060C0C4BBE4ACC493244
4FE415CABC7AE431A97F524D9A891A0D1CF723F12740C40BB7F3349534F1858F
7356ACD8238961E9A8FEDB33C69309C02401AB5C5ABABE3F56B7E68181772B2E
21213A3ACC5723892CD06EBFCD09C8FE8EC13A646A995FBA167023E0C5A37521
D3F68290BBCF98E25D9B151A31CEBEFEC2F66F695E332D422B4704A57F480640
F7A1659E5A7F7C7981539E420BBFCADCD18BF812A18FA3745D83A12E629A0DC5
D0E0CC82944E57697596BDC6EB617F1389E7C940C6F565D326AEC5810213CD63
A3D463499C4CC78B7D8CFA7C8A64258FB82D575F1268791E986A57FA6F425E92
D95657DA8944077DE502864ECF1F1519423421783BD998A3AE7D1F4FD7B12FC5
9F147BA140A84B57C2870EE2BA88FF39549047BFA8E1263CE464409B544C8F5D
7583750D659F73845D3A4DF85F8E643D3342EFBCFBFC42284F7109A239F35C48
06567DD04F9041C598AE429B17E841CA1E5C0E982FEC4A98B8D45FE17CCD5F15
A55C36EB472D56315235250BE02A75AC94B3A93B893864AC033D8CA8BB639F0D
5612D18E8FAEBCF70514FE5D1F53BBFE52F4C89C78C208EF229727C03E3F99A1
1E7C01682970A9B704838B8FD227507664B0480E9468341A84D8A0F70ADA697C
9934CFBB3DEF573A333FFC21A36C401D148A3480D8DF11D94F9C1BEEBBAEFE39
E422E5EE996757E728E1A4B2C8FBBF090A6227E986B2E62D70E2E4EDDB1EDB22
9C695427E5483DE3643C1967FBF6118D3255670287A4381BD6854B9EF9FB313A
AABF58C6ACBC5EF656AD0B6846BCF0369FF32E27236E174891A87C6E0A82893E
5A8C6B709BFE58230FDE4513B4883BB79A221FE253B31BF2FCC5F9642CCD255F
E6A6DC2B2DEC8A8E8331236B989B17FFDC80080CFD61853DFA80DDBDC0BBD56E
984823EF47F8BB4953C5057F6A7F0E57D93CCEC6877ED5C0065C1CB71092206C
A98012B6DB3C4765D308004F54B94D657BC9E402E4241120F4F2EC668E256E03
D984ED5F060F3750B949E86ACE8A6230D7887A9BC83F51708E0F0EA8B6DC651C
53BE2DC0BBE48DCF3AD70EB951F7238E837B62308E970BCD25C534B40943F3C2
9A677012E5CF994C4863F345DCF28BEDE7BF267D69F2376C039C3603105208FD
F26E72008C5E074D8FD6AAA76CCE3224ACC46D45E3273C48D6AC6A8AD6E7E743
9E4BCF23362286689AD2DD79A760BC2AAB9335A715B72536F2409ED685AD5DE5
BB30CED00EAFA3E05A44C382B224CAEF9D83770EC7CC14B886D51987DAF1D901
903673E7C0095434375629B2572ABD8ECFC038FA9818D92E767273D7AC321A41
E0390F3C2F23C10428F6DEFF0AAFA47D70623B58733B3BF0EE87B737B78F8C3C
EF4ADF915605C3B24763F8ECE9DAEE1E8E6B36A700C4697DBD67E0E831C88F24
B7FAE020BCCCCF8A0A7ED75F787FD61D6EAE3FB111D548A09A3C18B4C0026035
16BC748BD3B7836E8288D40C3998E0DC0828B6D8AA73127923DFF5C7D4134EE8
39C3AC9EC6DA2123AC680644E2FB3846AACECDE6BE282642784E60849748E26A
B9A746789603D300AB670830184CF3F0232130BF78541BE81D00C4E4802F3C07
E91D7D59A6880671B6CF92C5D7243BC135761C5A5ED67E684C38D0FC8A49721E
8FA5EA756E05DA427E595E30181049FB05F7BC0527EBAA67C743B403A88B4792
CA45576B86F2A40FE56F5E76E65A845E15F4A67A3205CBD42CBAC2D1F9DAF130
A8918CB0E72D17F28F67D614136F318E3F4514A764CA68091E2A53E54F86C03B
2A6CFDDD699EC2DAC8F10D7FDDFA138C21144CAB841489F40139D7AC915D02B2
41D2F6E3F56B7CACBDF9CE2EFCDC2DE00278D8C7699197D99600E62CD09981B2
68B1497139ED760DFC843D39B84938CDD7174A344AD4601AB6E2AD27D0A2D572
C645A6549E70D080C9759B5E1D331065199301B9E939B42758517AE7AE2BB3D1
8C9ECC1FB7E0CD522B312248840773F493B19CB11C4377B902FACCAE8825D921
33446E17D57A4CB3B289F7E88238497DDFCAC9D8AD9A6641166BEC6C5D5D65E6
34BC2AA985C9BB96E8161D69648135DF10E153D0B4E34D30C660AD585030A0C7
7884C78D076AD22438605C1FA0E6251726A4161996C2D0A6087425D57B500850
10D9C1A26B9EB1488BCB53A7195A780412B552D1FCE300F09E02B5AFFBA00EB0
DFE9355DBE728F44620158419E3844A31658E357CC8C9DA32A6C52FFCDF3AA65
C29E8F132D1570B7CDF4D7A2E7ABF9097B4AD6BFA9D7D4CEDDB023D98CFBF017
2228C2B8EC391A3A8C9D0A8466BF8BBCCBE50B9FDB191E275E751F9A015AE497
AB880B51A9534511E68356F0FD89EBB99D4A40B0913D34E1D835DC0EAE6B3464
6A985F9FB9AE043F2B6AF13BA4242630D9D47494B79F638C76C99B50FE28EE31
6E62C942D8D84CA36B3911794FCD1C228D8F3D8FA41C5D94A9B7F2D06664EB91
16DEDABD9BDE7370992B79274307AFB40898C5C3ED015974A87979C403F0605D
653237A3C026A11C90E2931A8A0757A056B9669244EA93AD299598423355F35A
E84C349870CCC7F6B87A986DE7FF8D0A366A7F30A04FB967F2945B2BE22C3E6B
B2A1E1702B81B3ED41A1504FF29347B66D39DD5CB430EDE468FCA5AA168729F1
8746B7FBE53D10C41BD4F9F007EA588573C3B0D93A366304081AFA298A5BE507
FAF5E9B8F237EB3F091E2B1C01CF1DEA09DCF67A96ADDA5976913E8C336C390B
ED6ACE719A16FDAE31E870162E319F48E2F03599875068A8DACE0065A225A124
F7AFDE2F301A56EBF578EBB3E7FB6F262E12B0F2EA351D107F0CBD0DBEA7429A
E0BCDE64C85957C36A36B2D38E9AADDE7CAB0E5F4474954FBCB6FD08FB6ACD1C
3DE40420CA5F822D806A7DF565570A16504794A4A5F09138E3ED012F5E495A3F
17E0D35D76E0C3AC7F5ACE873E7452C32DF5595DE3BB601E4729E1DD4865126A
05C9FE086B3CC80C172236F9BA08D9C859F12E4F44E8EF4739D8F02B2E9C2D5A
28E2663ED3258387FCDEAEA0032908045B3835ED18D0A0FB8DFAA88E54C831D5
215FDE89AD4DF1906EEF259B1017FA9BAF851466B76EE0D1D8FE3B123EF2706B
176853B6071C89A0AC943A6D530DF2B4B756A9793BCBAAEC392C7CEF74120D2D
9DF4302262728B6D3A60C22D507B1B399941004E833213F2A2C88AAB44294659
4ACE11D979D8D4CEB6F42177D5D03F53804F22EAB0791B6A1E44F57B5DC3C14C
5CD170905FAE34F765B94706324302FBB72407B03DD4E001063FBCB472DC21BE
A88A86C8638AD1AEF0A5A7233A9E483ACBE69A4F3CB9CAA893A25AFFF6826FFA
83E5A81C0C8BD2719171004C0F7A1D06BF58078E2A1415A1EBB54AFE85F51080
F2E2709E1E153A97899B97B61CE19A29E12EB14350DD258AB1A38E7E440C66D2
FA5488FA2A4C6E848224B6C0A6C7E96B450942FAB3CF0969B508D43E09A80C3D
4A37AAC77919F0204E06DCB725347C26C334A49766F5BDF72858A13E142582C8
4D67C8BE6F6DBF8544B72F06FC06D76FAD8E051B5A3E123273EF434C534FE1C0
B3BE8AA1E8B8493F8A62DD8AD341291C56E1507791D36B6D329AD282F60DA4A0
86FC8357ECE8FD7902A427AC71B22E13FF718D5F9191BFFF48908DE40DB58F76
8C459EFC45E6A60B9D896C5BF5FA194E80527BEB88C0B92D7DB5A2F4A0F6B8CD
145A7BDB3E086706F3E2D4510E2580A578C862A50814350242205A55211E8377
E6D84EB12A40CB28C7D59A6BEF1BDAD4DB9B33EE862708A8C67786DF618B21DD
031B8B6B97F26F388EB9783E01261CEFF0D77A9AA102A48601107FBC2FD4445F
4777D32A82980AE3342EFF9798D405D121EC17F6477FACFCBC75BD19EEE93728
11EA4EE380CB5B145C054C1732B70E19E1B12864F55EB8AE2B2DBFEB40B1E0F6
A9CD1BB4627E79D63E7470E04507FE1FC0D70CA70D8FFFEA72E9675A2CA748AA
BC9D1476C6F0737C3C1B15B330BA86FB0C8E512AF61D967FDC53820B431FF904
BBEE94541BF4769B7E722CCA493F50CCBA9862021D7444D13BEB5EEFCE3A79FA
353B49DC0C8ED4C0E3A0FEED836588DECEF23E519F2F3AD2F059E08D5231541F
555D3576F1FA02DC97946CF3D6D1D043540C2D9C219CDF60C853EDCD42EA58FA
B276C63DAA7243DC44889EBA3FE8C38112A0F7CF50A883E6DDEF2DA1FFA2A68A
433D1DE0BB8F5037AF905F570416B6265046BD17890AB9BF381130420B99153A
AC2753FEAAB9414DDE6DA5950430BECC4A7F8E611BF2AC6800461DE88194A1A2
2416133015C9B7F5D5F89685B9A3125081305F2ACED8B9171737C4A6EFD134C3
9BC2D15115F96E8205E42277A42638CE293F31076B3DA79A955D1BD4C39D1F7D
E2E68C18A0D3DCBC4C858C8905D4E89A2AD5E9E1DF5730792F3B6C86BCF795CA
3169231D9A83FFF05807E8C5AF1150C6E079E200C8EE22F4FAA136CC98F3471B
9025248E3E394668DDDA59861E4F9A277C61C8580C9BD49C962C18F852CBF159
224DEA99224AD1DA3AC0E8988FB8FA453BD7ACEA2F7F1C69BDA45BC1B7BF4B83
F10E071D4DDB6EC5462124A73EF8CCBF49E340057324280AE4FAF1DFEE91E6E9
D83A99CBD3848917DE76059072F3E668083878CDDA4FE219F53F4D91C59C0D22
2B06D6A7E439682704701AEACE057C6DEECBB6B545145A6D8A553DBF738CA202
630A1577549F39ED3E702738ABD730A636A9D95D0A2D4CFB458835FDFA51F10C
A1D5EFC8FA2D7C5DABBCF07E983CB5BE87D5B87C534EDA46B2291DC1DADF8146
41E2F191FB9A3BAB00E7B53C9F3D2CBEA284D20B8FD4E3E5148A0F5F17CFB61C
F3D4A7732AF0E9292F8275A5D771C5A356579EE1D80EE0CF17E6E22BAA6C5A49
0C3AFE38F6590DED840C7001045C160820E8C060CC874B2DC860C86BF88B155F
DBF2CD9EEC353C5DDF39B25CF1AA7A4FD8F3FA9A7F8DA3A955362210964A1064
CD2A1C56B20C4E91705492EEE6C9485986D3386C5CBDBC1651825CEA7AB9FBE8
D82E3075CA2CCAEB4195F217B45577A1364A2EB841B67E0041A18D757808CACF
61848B56C56A2FA2B2AF0766F42D90AF1FD64C4DFF8A92FC176DF9928E51617B
09C5A9DA3515BD0C79FF740AE513DC0C3C1417F65A03EB3A939BF544D4A95602
C6BD779F87F22F9AF8E58C069344928224B3AA846E4F3A77899ED3E0B65C69F7
8E1C3425551B40CD3A805B968488693EE65D33CAD71CFF2A48273193DC155FB4
88691675FC26FB8B246BC7591A3F1C45F23D368B71475D78370E07D5DF926C44
2692E813C426AA11597A31CFD203D5C3333B03B27A1EB07C40A3ACCB971BFD4F
F6D5DF0F65EEBB8EE2892B69C07592E052BBD57BB02E142E06DB1F1E35D28BAE
FC4B791803FD1260F6BF3389ED065DC11F0E3F02B6B75EBC78AD2C7B47BD9AAC
510A284D2B806BD85733E8989AE99F11D8442CC722
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /four put
dup 73 /I put
dup 80 /P put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
/FontBBox{-33 -250 945 749}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089
7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461
1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760
207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B7A887B6794E
6C09C4B9C00804F4A8EF339D38DBB66834F717793B7BC0C630F64390B83A3109
83644BFADDC7FD352CA2A1FBE1E9A1A64197BF7EA562F1CB7D80E159439D3BF3
AE405113578D8CB1285B8C6A34E585E9E6FDB22B2CF0F0BFCFB14DD080F8051E
383E72F52BE3B922C787A175378999D492E35FFCE5C0682A23F8ECB693D88CBE
37F6E7D4DBA13272B9BEE984B17FC925DF4565B00B7482E715DC3408BC71F5E3
AA02B34EEC8559C0430AA305322A4A3E697BB75714BD0E3A352BA67A3DDE458F
76FA90F70385C0386F33300DEC9DED63126532D8094CE572F6A79F4C553490BD
1B7733F51A9D9D7DEE242936B1BCC09B736A983D1E4AA38A2D49291BA7942E01
8D52097A8C73925D509DA51D3909A06508611C80632BB60FBFE077198B66F53F
D80AD696EBF2F872F40DE62D1EFFD31C07666FAF9ECF027197B6CB0F3BDBDF19
6DE8683296A1768D70EFBE30C0A9F5ED76E52A311891E464B103173041009931
50E805387A0B2E92413D073DEDDE8EF4A40C76320B7387913B575BAC70FF20D6
5549F151B032F9E386535DFB53C0A93DD5A793D7868102972E02F9F0375CD0C3
9D0352A238F33A2229BDDC9741F109637BAA756D92EC0A4E01A3C9A6AB4CB4BE
88F1ED142330F82C9FF38FB14750F69B9B53FE07399268B1A7CD43A2D69F0DE5
228EFB06D113C4EDCC8F5AD1F27A623981A0CD38B581D77763FAA843C1044D46
FF8C137DCBE20743BA7590C3FB9B7701E94EC4346F2C8CE26CAAE586FD62871B
DCEF633FEACDDD9A1EC7D4492F52A65335019B0D3870E301C0E1B8DB5B38C63D
B937F3CC4B4B5E96F24B5C03679C00040347DF083A31AF228D596B4C2049C336
8BD0D862368696FEDE5DF31B88D93C3BCB286CEE4A50DCC3A22810030C8D7C66
2581D38E12FA56B5670FE1A1EA1D4EE58303A49C1A7595E347ABD078BF3B97E4
25BE3D6A737A9E1875845083B501986A463D1CBE6FBE42F6AC4E024C07DA1C3D
E7411762FD8177E378920CBCA9BAC01EEF78A9AFCE83466C7967A69C3209BBA1
9D6104EA270F370814A415CE6C023DE89F64675A1178AAC8237D4B9B9F887775
0B92FF34F1771BCA4E2BCDF3560D47EE5051ADFDFF04BF085B34F1DF23AA0581
C35133AA9713A32966B854DE777666B16E359317928C3B064EDC33FE08A313C6
DEE6DAD83A9BC71BB87268CE12307BCBB85D1A98AE7A6153AF7BA7409285506C
A641A922DE2A4D0F99702474021DD2A1309AC625F42F25CE3EB475229EDA6DD4
08235A04D3C75C724308685E3EE44D6516C9C2CA230736AFD0B1E36FB5C62CE3
79B4460C7A513F441CFA3C458D84BFAED952250084EC94F3F7AC442C420B619D
1D219AD2477DDB98A23A71336B0D4C56FFFE3D933F17AAD299FE640C4F44529E
B477447302BE7AE94F59A296814B6F623BF1883DA4EC724C9F985BFED4845649
FAE399CAAB03A33BEC24482D2F24BDE9B1EC5ED6FA3406BC86E6EA1B2D060DA1
AA018DCE4C1152A7C627FF601D3A929D6DB3A8A4511EB65176C2A9D637D4CAAB
201BEB31CA3D0304E8C1B9E3F638879840F31FC07499B147465AF11A52CDBBF4
C608D93A55C6245A14E8A92D8617DD6D483A63B60E0DFF3DD0C2058E602FB70E
736FD496B17BA1B7D1BD92995874FB6357BB79AB7ABCEBF79670E668986F721C
102A00E2C6B26ED8F86239A8A0BC05ABE71A7E1B3D767D4776161A3900274014
2B14086F665EA760F6C0C7ACE2ED71D7CA53DACA4D821749B6C4EA14E74C9AEF
08A367191D8662A0F4046C1902A092AF2315E8A9663C0A9151CF3882D5B23B68
B3198AC6A3B6E88D30EFCE5466D2A5952360DC6AE400ADEF197EBBD196D94081
12BA59E73A18C780239BDF7CACD1EABEA2F9DAFAD61CA2C1550177EB5D58D618
9BC00145A2F5EE7DC4F059D3BDA6B979B32F5CB9EE6F6D7D92041791C7815249
EAB78BC9FB45D594CBABD45D6DCF2F1FD1D0A7518BF9426FF58D8AF48D2F920A
F8A087CA9CB82F15C292F1A9A3F185CACF33A745F4EB0E98D5ABF9EA99DB39C9
301921764A2920907A18E2CA2FA84E0471DE69006E69754E0CCF0DDB131E31F6
C9DE58EF04EEC5077281102CBA7CD5AF7D81ED39F0FCDBC0A1EC9011F37522B0
1FE0B722D1BB3DB51A3EC6A29CEDD6B9FF8F4A53880817AD88460D1ABCBF744E
B0C9E12986C32A31E1FA37F001A6187B4C7E0EE98BB6C29812A6B3D6BD8AF0C2
D6A9612B4DFA0E1E5F85C41A3784891F9596D14029E53176BDB01A5C80674B5A
2FEEC1D2F38F7E084A3ED5E676AE07C98E1E8EE89EF31B31625B093BCE1EE4DD
46D7E42BAEA1EA6B05860057E4287AFD0E77859AA0B8362C590A04905F1235B2
001FE9249F5D56A32526C276BE3116DCFE835091C90022A37C7C67D0C63E392A
EC2696D7255C8665D50A4DA40363CEB21A10290838BEBC4873E58BE4E2D19667
EB0648114A1E90EAE329EA0FF652EF42786735C9FD50C872CD93ED456CA908A3
64C5303D2E3F9709A5248FDEC9A6CEE0A7D0559EECAAB386266E41BA148D0C8E
A2C5599B8118C8442203FB0A50DA307AC6C96C8A5E496962B39872BC2909D447
1E2A1359F7A938A7760F81C638B70B5C84070DDBC19FE9CCEEF1A11150A7EDCA
A3BAE4576F7667FB385C0F34EBD3C2A7EC224C14E040684D1BC318E8B135790D
118CE503F52FA522E432C1916FF1C4781D0B465E4A23E7688A0492E3909066E7
A5E5630DC91DABD4BBB2B3DEE861D9673C3D67613E8EA9EFC1FD20F04AFC3ACD
DD5DD893AA60B939B1263748BFD4BB7D1B0CC29DD39C902C9B7CC528C497AE9E
3606F9D568C958E30DFF518E9C306614D2D3690101F0388F393C54C5414287A5
E5F79F7CF7E3F3AF98F034A9FF8261A880B3273E4B076A9DAF21E320BC472040
C4E6733ECBC6D5E148F6415701CD7DCEE625DE9588E19EA1845BD5DA7E9B6113
4F368121D41F3A1D7A21E88508F1509FC69B923614EEA24F08D34AD210D0396F
483604C545971A6B7474EFA95D6A466F84F77BEA9FAE6F8E1A4C6ECF9CA52494
A0114CA40CBB818486FC348937E6A4358C18C460980E68E1CC48D3EF0235EBCA
B5742650633006B6E0A01B5AE97BE734707E111DC013BCDA83CFA93DDD47EF82
45EE53EBC83DAD9ECC165E43715CB0E5541C022D28BFA5935336F023534F488B
4FC3496A164695D9F5A23E6A718576BAD358904FB545D27AE0EF292DC1C27C01
04787475A9799005BE475C3021AAC2ED70CCC167B3D32F13F05F695F397C2226
61F7557F8A36ADDA3DB18E21A12AD6177F900B1295955B7A7301F097218EDEDF
ECB90FCAE82F4FFA5419E8BE609396E6993D6909076DF96D444E4E8CE5F74520
EDC29797921DB159B0DC26A8DD4C5FA2C201B47B1ECA7666248CA5ACD746D42D
27455194AD45E03656439CF6F3C38F09D51D7E2ACEC4A852EBBC1C74979F648E
ADE03DC212A8233816FFC7DB60264551C2C28F252DE6CF771C07B147F15C303E
776657EA65BEAE688AA1B3A93E6C1FBFC5599E88B25FD14CDFAAD1DDCDE307CE
B6AF9F33810B4B19162BA805B689A702FE1F20D031381AF574C89E00A71A5AAF
6685ED7DBCF74985170B63C4D10B173EA763C17AD4F94A1ED037603EB93C318F
9E8A7C949B90F83D22EEC4BBF55A1E0A3D1ACF550C49E746076D922A5C03826D
A72168245DCA5AAFEC78D0F99A61EE4DA460DAEFB0CE9D3FE27EB054AD7D78FC
4E187AE067C20A5A37AE2FD540F26C2AD37DA2984992808FF3CD56889D43D9DC
3BD3D434CC6A1B65D69BE8802D65831CC024389D66AAAEBB6AE748CFAAEE434C
E123FE1F30EA594E0FCC624416707C7457FEAC7DF727095EB7DF69CC899BB961
56517E2C869B94400619C2A655A2E105891154A5B84E90FEFE4E24DCEB7B0422
957AC2388585F179782877CC1560B0E5159B6E795DC074ABAAC319C89676765A
9F19F8530224AC7E689050DB566ABA89DE90C7F917160013AE90AD8A98D21AD2

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 14 /ffi put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 58 /colon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 92 /quotedblleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BA8B194E613047BF469C7B4261CACC1DF1648E8A86E926F8702B5ACA
6CEB4E3E85EF23EF5C9C53097F3BF17243B8D4BF0E6B0C5982FD14E4E916D363
E265322DF0823E9990F966A842ED69BADFAC2CD1754FC84C0FF6750D2373F997
362DDA16A0D73B178FB7B67307204AF174AB871C254B8E7CD77058113B702B2C
13F341A972B67756D65C6A9F553C365E20F0BA59F8537C88E0C13F87CEC69C9E
0775F760C4EE10819388782A2CC2E9C000DCBA76E4EFC7B390E50611F3D4F6A9
CE60FC3B742F046E84B4A302F5DB51092CD59F103DEE2910757696C3F131517C
416687E6DF671911BFEFE08D1C5D0B16F9302960E29760EE101C5BDFBA4176A0
260ED46500F88BD388506DA361B0E9FD796196E66B332C82CFFEB7974F9E4428
B82C64ACBDF865B4356C4E2C8E6ED840AD5579B7E08BFA3BD81AB1FAE47901EA
E298F60FFB651A0ADDD1C312033C9D1FD4D0FEE44FAC4B0288339260EA0072DD
0AA168900C492640EB652F4ACF14A4F84878F5EAE4169AF39131695A11CC691C
FCA0E10862BBAD279F932368BBBCA91BD5350FC11060D30B9407C3D09FFCAD95
A1C64FFBC6312A96D8D3C4335651B78EB1225E8017A232120463AE2E74CD8BEC
EAFE4047386A30562BD7697D49B84EF75A690E8A9A818458DC8B092E722779E6
BD0E2D9CD6EB7831D6AF1E6EF714E61387578D219D3E273BC61C61EF72C7AA93
4B690CC1433782D3EE1739B003D8845E82EAF0F9AFA9C087F43AD07BFE56FD1D
6ECD3A8571437EB4368D6453A6040F1D9F1427543C85FA1D75303C88F95FD20D
4BC6325B8C959842A8A1A7BBDA03503557C779D42E4B928B8C25621B45358677
60C584F0E4B979C934772EF7EF40152CAB23F594259D7BEB668EB42BFF3FA4F1
1353436452224779CD623BC9C7DE31BDD7DF23054BDDEE56182422DB0E16F355
5AA25D0936BE0D28DFD4E2F9842196C63D397592C18152FB861CA64359986F0C
74712B2D95BB63E93E3AF6E57B82E02DBA956D1DD7840F278BFC7C56E9C8E56C
6CCA5B7FD779A8C409B9C4AD8F261CFEBF4387D4ADD6945F7377BEC4BC0E0EC9
2A4E09323DB8B120F83699EA7AD5C47ECF01BC05463937E6733C04FBD1E6B22F
164B6636851D681A4497FC9F9C1354A52452394AA9DEA907FD02453C5B62BD22
41633444453893BB642020840378A13C41DD813B88C3C0BEC08CAB9C3B46ACF8
69509B2DCE0A86AD85B58A1D4C5A1ADE4271271CBEE20E715751D1CAB4F243CA
DDCAFD04E96C530BA1C89585BE48BFC03112D1756CFD541823D456E797DDE963
FC7940E8BD58C9A36602B8569E52ABF939BD3783CDF9176A4A7769A21B47A2A1
45A353C09C97B92C09312429F972C886A5507F267D5D3FCE3DBEF87F56057303
93D565E060E6EB0793A68486DA5AFE2A974D86403138373918E3575EA45E16DA
2E1FD9B33B60B5FA7CFF6FE84D39FEA67D89AB4F6400254CCBDEDBF44F77A993
077C0B2501E3EE4E0C55C190874F5E54D4E00C908A3CAD0B2E70BE600906A7F9
A203016E3D49E800DE25077551E7E4EFC9EAD62BB8319EB27004FBC33E05C4AA
8747DEE530F2F9A8223F28CF2B5CBBDAA09C42E1EE19264CFDACF1B59F9D9EF6
6B845262F83BCB5AA69904CED00BD8DDA1320ECDF3D273F2F250472B7372AC99
4BC5C36240F3ADD23A5101BEAECC7ECFA73E571208C3051E766AB7D824BEF459
22C49857CAF75B816B590DB1217DF31329C48E01309BEFBAAE6852FBE722BF9A
F8B1DAB562C53B8A6000963218FD55BA7BED6747693C75F1D7F31AB3A5CF150A
898B01F3BC75EA5B2D179EF2F95EC2505DCAA49A19D23C66DF2A446159B7A5BC
AB004240B59A4B9A1331B3FE85FD8117AD23EE9F7CD1E0D13B50A62F714D6237
C61B7BC39E8362EB6C6138D35763F9BA089BE828CEAC6D08FC3EF35ACFEEE913
7B84CDF18A63B0ADDFB1BE8418FFC57458E2F0B7CAD1738902538B052882FFD9
C6C7A54248D8EDA00F123419EAF50E477DFAEDAE3EC8F5BFB413A25E6297CEEF
A6253B39E2A14BCC2E7ED27868434BA1468578E42EF7B1471682D67B8DD8051A
16036B35EDC8B0EE624B23C2C69D27711E815F7E9B61C2ED0DD9A68E69F327F6
8FFCA319F9575F929D5AF929BAB01DF426C52D624041D7C0B3C025475D05D312
3A205391A145885E6BD1AF0CFBF830099AEC1B5C6079B373C00333090339E9B5
7A0C8BC847671D953FC317C7ABB32E70A93A13684831F7734417D4BAD686BA76
C9C787B288BF15A51879D5978B6DC0243F0CE1B4C18803681096EF1F5724D416
D5C59886254AD6AD5C77771C9D135D3D8B9E31E0D234DD24D61A5CC32F899DB6
FA60B0CCF71F2415F4ABAEA931CC88D03BC025F9FB4A819B8F205358F67CBAE3
F37D1389D1D60EE1B309E0F8C382FEB0622195AB2CE41A0483E605C1558D9357
CC12E411200A2551F43E29B39F9A504B37DFD436AFCF8DDBF9C5AACBAAE1ED49
30E784DF8B9C721816F141FE54532BDE43BFED5DB7268382BB487B53C5CFD815
7039088E8D514669C5862AA21ACCFD8E95A886F7BDBF5FE983910135A64CBCFE
84841D9BC22459B3F0C9B19BA3B4F73C94A9DD4D3B550583B7A4473429102228
500E592431C1096F901B5799302823CC69A070A541428F6AD89D799164C6270F
662535265D0850F3CFC20B5C21056E541E7236427AC89B7A4815653004C7B8FA
6DC05A9EA43111624050317C74BFCF626771A13C14D6FC0B4ED77A82E3B6FB0F
7C7A84787FECDA43542FAA502A6E8DC8A142311590D426888369E3A159786BAB
52C029677E261C59BB2E3EC7FC5553B0F5A79F580A6D190CA150352B40304112
5AE58366E01E0BDA2A6358769C973DC227373240521AA351B3A38D71C8542CE0
75D60C901E5A760694699D34ED71628AE5E896832C51862B45469765A8F071BB
3DD73B96E864CE258F492F7CA1B0023470ED69132D5B240967A9DE377EC83BA4
1B49ED19DE836BEA91BB2D46D9552A1D1FE48F8E27BEF772F507DD8F0B93564D
50AD49AC5B65E7E978556CF37D5ED06F83877581C852EBF826839CC2A3D98DE1
4C2D29377ED7FB52745D74858B964712DBEE72A404390B17BF3017DA64994C41
3D0867FC7B3E82CC4F3FB55D762831ADC866EC0A2F8B38705CCCDF7D52696299
BEF10285E6786AAB498DAB43FF76F7E326B1A9AB3660E39402FA35382EA30A86
7EE0057108C67C3FFE471BB9C64333DFBC0E997FCA8796D36B0A920759A3351A
C71A2EC215BFEC66662A1F952D4D2CFF1E9A0E4B338C47B51D993027FC9B394F
EF47FA60A84C8549C67E1F463D31448030936631D3515C38B3D25629A74BD092
847A65A85D9F8676099D7FF5A5FB2107EB13AF4F189708613B54057B58A103E8
4294311DC5B48C2A22E5F8431CDC031A6E161CE7861DE847239BACBD09D0070C
DF111DAB7B2677075FF94AB172F613A7331A03FCC21404BCE295CAFEE839B97B
27415978C8536D79C7C94BFAC181625B914E89C47FF7AD5BCD82E84CCBF43261
03689A653DF9CF20FA5A72EDCEF275A421A24359E1CB60B39B4CE82D2145B2B9
EFD7178AC167066F8E8D309F3DAD5C0DE46B5E271FDD509930300B800126FC7B
C24578ACB572D6E0182363E0851EBC542D8FD226D0D53FF3F402A0AC65CFE4A1
FFC092C57D538991914CE287F1FA947F638202B66BDD5602D02106DCAF9E6681
C432DA43E13C0AE0478A8B8B8AA06CB895A8A3912C476638B09F1D1797C69004
CFC2F72240809C0E96550D63B61470DA57A6D547B66609ED4E22E9D66F12E929
FB158E2806BCDEB1E9C3283817231FB904B88B89D937B9BB8ECC1CF23234966B
3E0B17CACDF7DCF64692E7210B1EB0F7CEDE27CF7ACC83DF0A72B69B3E70F136
B0E8DF2426F200BA82CDA8140016212FAEECE71A5B5567D293F4F7E3A030E818
1E393E3F58EF0DA8DD7863D577CD3B23E2E7CE6FC613735150D7F473BAE36E2F
438DC19D760405294AFB12C76FAB2ACAA7542C20F5CB2DADE3DBFBB5D175B494
59E5D60160A3C621DC5B804FEDC6B673F420BDF70B14BB8821D54D0A1633DD27
95056D35B9E9AC805D5366938583C93ABD33032CF74FEF9E12CA37F9D5AEF7CF
73E8AAE5BE1874BF8864A94F68E512567CA1B95F4F021A996C1B9702EF9A349E
84C29A12B3BCC1801D2E57BC63085386256D40103696710AF87306981401D4AC
5EFD1C6F426E09FE5A728446F7D2A8AEAA2C5A803E114DBE2974AC73467392A8
6B7AFDCD265E6CC286F17D76F3391C163B78688CBAD4D711A784CEA0E7A6A940
7D889CFC9333A2FAA77EBF0D6FFFB40B511F77DDAAF310D97737FC5958F98396
1638770EEBE434CB6A03F5D8A36A6DBA45B645D22F28099ED70D50961BC4CB48
66085C15911AED3706DE88368DCE43616DBFC99FF5659140551605FDC6BC165C
570C636A62657B90295FFAEF6A9CF562A0401244D4DF9778A9BB0F7DB2659DA8
59119138E1559BC591E4DEEC9CB206C5E4989AE3AAB2EB0EB5AE84BEDAC1880D
48A98776D5FBC3F792F14458A0CEBA3034B8C4E5F7825059434F3422DE2D7966
13B812DEF5B2DA345DF36CD6ABAB2552BA91B6F1CEC32BE296C0FBD7F7CB0481
D3C6CD5E901E64E0291807F30EF5759DB3D03FDDC850DA6B4910C1FED00EBD02
C09188944CED6C2FA98129B9C7CFF4299655F78D110C417998A696D1DB7A85ED
D5DEC46052F441B4FA41DF6B9F457CB2B056660CB865E7CA85A5F13BFB467B17
243401D6D6F9BA3A4E7ACB0BB05088DA9CA4F81456E37998E09779DD9A8B5D99
06274B0163C0F5D35BCF70DC862F9BF7D0C34FB36989049F9906BDEA5C09F6BF
D0E7858E85480900078A12A8A99EF42BF6275FD15877C29C2B966EDD1A1C3C14
B5603FFF6FF130762943BBC915656AC72F9E3B00F18BC3A27B7C18BB74618C45
174312F4D39B0AE11DF86D745CF7FFA4C3F75A5BB220C37CA8C7129B98BAE3B7
BB30D32058DD7AC84640AC366CEA4D399B158C3A785CB53A3D666BC81BCB65FE
BE502E8FAA9CE996F24CDEB9C8161942E441DCF6C9B497A8FE92AB626518A0D0
9E44D004396D2606D61EE55C81FC7F17CA01D5E7CC5C42AD2A6E850CBCEC0984
A8E9DAB206B351F8304F856BE62D069EE9B093D9DD886D3E25C73FB90A818381
7B4E4A5234EB6F202E53CF56B1E9AA4FC27CE1027B0522DDAEF4ECBD17B1CCBE
9A752DAA4DBF403818238FA5EA80D4A2E9B368819A898162AFBC458258384D81
1EBEA85CFB4D145B6918B5936BB5A14FAF34AF4EA8F18AC13DA0312F95493AE3
977BDC4CF1DF27DFEFAB2C0DDF5F8DD9E6C568C83A2CFECAA80B47A36CF4F9F8
600F9E51D9EFA52F934D065BABF6A243CEB89B21B08F2C3C1231451E43F9D112
D24E40106F73E88DF870E685E9B12CF4DAEAE479A3825A1FF21A670EAB6E7D68
AF1D71946EFA85798A58B6018C5773CA63A96DF46038F8FB6AF36F21D8B142EA
6B4C48FC2BDAA1696597E9F0E6D8C1EF936D59FEA040043F2634A5542CA3B660
F6B6478B38C47F03D5F4B2E747EA9FA6ABD196B039E2EA0EF983761D6FFACBB4
17408CB2216DFF29C56EF89A34B27158BAFD20E3021B10F602DE9AA8419E6F23
1F614A07AEC1170A2F289A86648F544B883C0A1EC2F6145CA98AFD5CE0059C61
2F4070F0912C1E23DEC57ADE0F2683F50531B14B4E346EBE3C73DD6903C7CD91
BC0E9395C629201ABDD8507C2D6C2D42A581C5DEE505F33C5CDB19B5A7338F2A
11D07D2D60B37A1614A9314F88C670AAAB7B49866CAF9E676BA756BFBAC59D56
0E1C71781EF1DEA3E5A32DCA02D86B0827D4B4152B2421F96724A36159DA7DD5
9249CC39F739FC5C8311799D594EC7409F68A78871FF63FF05030DA39EE50FD8
0B470547C72B3123FDB0E00DAC3FE8D0C4AEB689754BEA6A34A6AE103E2AD356
CDD936654BC8C05777C5951125213A6E8BA793284FFB95F6A94D5EB146F10566
2DFD9629F58D50B82EF8328EB76203C1AA7930D38FED08983E64EFAF110100AA
CA1C6A13D8E3C613ECD739A3FC0399770BB059D35A30D5D22DA55A60F7996AB8
2456FD03F4E3E544995A232386A7F4A50F65DCB8127E0686B33CFEE676757E29
6BAC0D258DA88AFAF6BFDFFD01A5F1246F9277682C1B83752E5594C5DA4A749F
909FE1FEE68C2BDB643DA83CFAD46CC624DC70DE9092F4B0A6A71DBBCAFA7D98
F1578EC19C0832E1DE131CAC11D104EECA7D80A70F14F5047DB12843278BC27C
6677A88DF8D1AC163718F0B3EC66C93D8CC0421A5050FD9695A8D36FB93A307C
78E0C33447D6A81DD499CE62A5A841479F3465661DCE30588AB6E6D92CDFB246
5EF90EA29F181EA36D40A981B52961911EF3A653E647F36337907C3292D37688
634CD6462D215D482BA72A0CD0DBAFB9EEEDE6B9FF763E4335DD96247E4E9136
4F53965D6C2B6B0EC8B595C092AA5B315D78079DF71F416FBBCC8DAD22745DBC
04B8AFEE04ED0632CA22D8226BF36C57A6D095A595DBEAB7BA533D5464AD7C6B
E0A8A95E95F680AEE4836C4A0BD6F059996B0BB12DC78890BBBEBD21B843558A
EFC493A61B5CB72ADE026C99F418B1B9C039B6182F03B77BA1FCD2E1EC61906C
1096AF580188AF6D6A301F131760A5013D51FA3497F5B604A69D9C26D06C20BE
21D827E0B0CE5C8F33AEE5E7E39D4D51005CDCCCC4716DEC6EC69533A2EA8F75
4EE05C1F20236EB993C5D43DCCDADEF7831294FA586EC0B5314B6BCC3EECC215
B3F570F6D4F0469DE01CB641F20D6DE2409826D4BDCF29D694E4142E39BABBC7
D72D38AFC0E97440CF789A7E012330EF84305BBFFC2196F7F6D3E7255BBFD69B
673EC1B11C1F6A5D3335447F5C1475F60D7569E9D6D8AA016FB504B3CFBC5451
4900483634CF50373AB7F44DB010CF417A8133B0DF4F5DC60B8EA8D90522BC13
CAD7D441086A52098D68C87CA0E898CB44784F097E2A582A592CE7D0B61B0BC7
5D2DEBC548D0698243239994222330CB18E2D6F173CFD4ED13A7748A1CC9DD98
CAEC7EAAC0B4C749740A2C697A93808AA7FEDF504D441B86424501907BA789FE
B4BA430501ED49B49E85E2999D8C522BF8639201D8B571A4C596BD7408390841
D951A94E5355945C1C6C3ADE4C30F13EA8F16B115F2A56A269A38E35E121B17E
C390C757563473234FCE22003971DF1EDFD19EC487C931783EB2CAB40EA1C8A4
345FF58B72AB1284A43769A42E33D4CBA246C28808EE2B32DDADF1BC906AF28C
9F8F53C088E21EB36C6F5AB9B64AD94CAF0BDAC9A5FCB267121671AC3687E0B5
7C01326120F049157850A5512A0506BCD1677BFCBE36EF9FC92CC19766E7D398
A87D0BB0D04CCCB2DC9FFE756D00C3DECD433A262C3D77BA25A7D170714E8C42
8DDF7C0BAB4136ACA5047B35B579D8B82102C1A264A71C856E7623BF46549F16
1B9E20CB307EE043B1F0BBB6B2B490C074B67C243C7074706B884651592FF6B9
CEE9BDAF799191092FB5ECBA68D0AB7D0D581811BB9E10D4CAD52B1156EAD7EC
0AC14ABF5BCB7F18ADFEB0403E8C022EDD6FD0F219679C97D6219776E6C3DFF7
FFF0D056FC6EDDD540AB8A03AA85FB5AF250BFE521F640A3951CB85848E090B8
DF3B9C6C7621B7377479F471BB6B0BE785123A21D3D1F25A4D74BF4D03A6FBD8
ED5C9DF7405719FF6328BC736551AAD645FC48B3AF966B6B672D7FBFE5F438ED
C95BA35E754FAC8C53680FF62A414F6988616D89DB29CF7DE8FCD7C4321F2579
CBD41257D2D538E0BC9F2FD5623DF833037D230897A9EF714FA2E002D5460FC8
F8D56A9F9FA2A66ED8C539B3EB2115109E8B9E00E8979A7CC4C3EBE7B7E2AE25
034E90CEB79595F45B038FCA7BCAABC8A07F86B7514CDB663712298E09B97C38
CC2BC48C6F8A9526C669EFBEEF0C5895886ED73EC238578F2EACAC362DA5575C
B4FDEBD51863B18A8CDF543EC85142138167AA624DB13BED2A5174FFEC8399C1
4757A5FBAF687E33B8BE3E3D9E25D4D53235C7CD949C69BD396D85F34AA9948C
E6DC772797D2D40987346B8A8F4E838C40C37262893847D04A8204BF4A280E54
06960DF75AA7E9B3E18359732EB6ECA09F643CA81D974C6AD7D684FA7B99F31D
848C6C79F9CA14A1862A24D8D756EE84D91AA66ECD884228DEE45F26CA253D3C
678FDC9681AFBBE34F19DA126B1706B81FC0BBC8AC454115ECA5E9D91BC3ADFB
A15BBC2C6719A14B8F9C8306FE134D0EAE3972BCABCDB285EBD431D3912C876E
FFD57E51B364D94C1CB4AC3A3DE771CFFF99FA8849840BD60E6DBE7723AA1734
19AAE05747652990A31CB250F2C0972F1D95F9E12980DC4492F4B580AE6C1559
A96294DB78495732C51252DD8375FA3A39DFB9F3B335F89C4249A1A06A4E6E7C
E264B28EF85FB9B6BC219FEEBD934BCB22EEEFF05F7402144E55C868CD7FDE5D
AC84945AB8BD50D10256BAD297F7C022521BAE05CD0894F1D32AABBA4F365E53
EFA34459CE72A4E70631A73FE10D22F8B68194BC33EFA44686E73F5B6654DE52
9BC4CDE5344F736AF78728ED2AD274A3476CEE04EA8FF3A9A0AAF16D2BCC936E
229AA1917022EA0831414F65F47C68A9004645C72D357DED8F78024AC154F239
3D398A42C96E9A488EFA6BE2879455B8367EE41FA582DFDAB7D218A9A82C6DB6
4A1748B51D2A74E144D162699527B61A9079DA2025F7E75E7717CFBA37582560
141B2100371556F79B26E130BAAD70DB48F0BA87C751A83AB79CED369839410B
F568CAC5122ABA19233C1D3340BA9C3E7067D099472E8FBF4B53C58FE57EB9A1
BB9804F7DFD70E839831C6FA83CE793760DD2787AE2CE4AA6500787120304923
E16C85AC3450F354FD768CDB05935981E373737C8F8F0D3A5854F007FD299DE7
7F8B20BFD177895E304418642ECE341DBC2DF1B9D99572F5FABCE7AD4AA51A73
722F5240B04E7B67A48DAE1B06F7B8ECB6D5A181F411935CFD411FE9CE66EA0A
635CD33563D95524C2B583989259C1351F702C083CC79801447AED3A3F09896F
5353900937C175ED31448815ED20F5EFE2D60E2C66C58CD0EF2366AEF4440A7C
C021F70D28273071533135C3B2CA7435025F2DAA8C62AD2B2A855A4AAEB5436C
DE587C803666D1C8FB8399510446494A5AB6D6C8B641218C5E32FDB8D3EC45D9
A68DDD00EA71DF81A576A1E3DBD8EA362A65EA2EF6C743254AC36FA82BFE6896
295677E1F9B67A76A05A5B32F53A3F773E179D47A550F7A1D8A1A1FDD63B9526
2BCF7530546F0AA7DF10A72A55023A4FCE7A1B3777CFF03680005D547119ECA3
49EB43C802749F0882AAA31DA2D316F15B6CF3CC2FB8DC25F7E30F39555C20F3
F63CB314F85F4D4D20052E5C48E50A170DAD0359A9895C880666F92899961DE4
7E109EA55C04EAEB2418C19DDC79C20CC93CBCCB7CC31575B49D9E5C773EB11D
6A2BA2E5F0E69AC0E354E3B9F151A2B8AA489564C6589ED6B954548E7992C0FF
9E21F7E7679423C2135573343BAAFD92D8E951EE1702CB4FCD01D341800C2F94
8F838F411723205230934A92C2A6FE2694C8DD896DD39D50FDB7BEF87B46130E
940D26654B81C967D9A506AE3C94A3B9D13C64D0718DFDD9AA7C30D7BB7B68BB
502162A4B67DB1166CE251CBF6BD103C74239F2C132E00E07AD3C03AC442BF87
E4C00BDAD7F4E3448C65D5E22570675DEF3406DDBCF473C30B3D77BF68A4868C
75E8EC7768F94198CD0CFF80D891718FA955A3C6F7657848A269439386DDC4AF
86097CE517BD0F1477108ECFCD37D42B3BDAF7B5049548975593E55B2AEA8218
0EB4DD6D6529B30388385AB8DD59B14EB42AF161249A6877B7016863769583FE
FCE8CEB032D33785FD3651AD506C59F950C9F7F5E468394E8065EB27269C9410
6331C40CEC896FA4C09E718A482687631C3BAC93B556CE82D38213430E1889D4
B59C64E3F15758D0AE2342CB7BD62B77CA014F38B109FD7320E684863212E608
F6CA5ED1730C78BF9FBC305CBB28B0E1379CA05C4DA8600227AD93E726DD522F
91CEACCC1E81773B16510408A93819975563C5335D17483EDAD332072E767D4E
915FEDEAB4284840E3F992CCD519C0E75AE416BDA876D9F9157404915E2294B6
E24B897635B261B5F660EDE4655CAE601B28B323DB4D4F695908A8F3D9B2D5AF
559383C855D396B7AF5CB15DDD7AFB3F9A0016834AFC0572041DC24CB988BAE6
46E82710F1B17E67AB1E603EE959DD860E1184828BB568ABF167FB523A7B6047
7E009B34820056C5B143CB591F2114C33DAF6A0A0D84DEB027EC554F9DFA9EF4
4E437D5A70B187F94CF1D751A045920D1045351EC27A80F424ABBBCE00C12C1E
0E3BC5DED2A7E5446B31ABC55B1840A6E8A086AC1E0AF852AE253CB93C9196D3
4896045AEAE3E914A7BFE103E1AB4E70F6C3737C972D381125560B5C2CA2BB9B
346446AB7EB79E8EF24F9E97DE03229CAB2868A7D0D3AEC6A388040BD47E739C
CE5D3EC48AC6BBF2ACAE96BEEB94DF7C059D9C614EAE0C608F0803D8AD5A40F2
1B69A9596B618A9629F3FFE2A609793D026401B11D6E1CA9CCDEF67C9B250906
B44E26D71ADF2E52598F17D28FB9E5E1A01A282FD22496D616AB3F7124EEDBAD
CFB0C9779E9832F094B913A5B01D536521804CDA5BFD33C43344E380491E19F0
B5A7E7C956A6E3A3CE9A51F8D610D6513508BE6E37FCDCFF9E52D105304771D0
894CB4AF36CF5B8782D24D3EB93A7058E78E016EE352D5C0EA1CC142DC74B813
DC331EC2694EBEB89C69C5B963EF0996AFD84157C642673DF653450E9C08D78F
FCA316721B9D0363C627C027295C01808EE0BE44E808DE85A5D5641AE25156A1
DE0342A7A7E3E6E9666D6F7A74D9EC010DB05628308A10ADAD7C1502A33E50FB
A219E7873188B0E48AC6CF967B32C9490B191DD6621CA0456B37DA74962F3610
8E3F95F779B063451E6484882A823B274240740127293D3F79D1936EF288D978
3220A45A49CF371230512444788C45DE62F2BDEB9E23ED239F8B5814283D8128
56567ADB5549195BEDA4C58F170128711D99C80626220B92F965C2DEE7847A7F
8647C064E0540930A8106E78CBA61A120E293BA5810E60BCEC24B0F3D076A276
D9CB2E7FAD71D067AABA386651645BEB4E7CD190E2D5991ED82E2B7F4087744D
0261BD69CBFBB88D42D6BB21185CE3E89395EE16B90CB686FF220D698CB8B379
BE3E45644C08A187FAB43747D3EB81F26307A11FCE2756DA3F5C54AF281B64C5
640D5C5D72156C90A7331A961438AEB928148396BD26E7AB00ABCF77592310B0
A4833A904A12F4C799CAC14538F682735A0D115C2351171496971D50F3922804
389EA2AAD6B64D9E25642E2402C107A2151FE872B892B5E0380E3744B6A91F23
7EBAC0A230D6EA2B966AA75CC24113C9561E384FD1BCB413A72526CF620BD4AE
58FD7DCBEE262B26DB261D54BBE8023D6360AFDCBA42D423E1BBC702EA89FE16
68D984B912536C2E9FEF7CEA4D8C22D065269A7FF730B70468370E76CC0C0ECB
296CAEAE676C9B4F74C7E398FEA332E652101893FAD16C0398CEF4E01BE11E44
B835759FD56E135CA04C0BC5D0F59C88751B5AEAC240089971F9FF7ED4B4F786
C246D3F046A0C34F2FADF3434C7F3E77C64FF35EA0C9CAD9EAF8936846D0A894
3AF90C81C9216467B02A2372EBD5796F09AB08647DFC63DF1C894AB1427CEC4B
FDB7CE082BC24FB9C3E9887226722AB953209784C25A25810A365AD888E5F19C
E59CC3B02B38BD35C28ABBDBC3AFC2AD875F00AAD575AB2C8FB309B5C1BAEBFD
FFF412109DE528C5D5636CD50229057EA9ADB14C784DB8902354E8B8681F2450
5898A4F77EC73C17A844141CA2DB20236CFFAB70D2C85CF16F5D076CFB6620C4
DAE9A86681E7B3B6A9C6B568EB48429B64545B81B312691DCE8C883FF689AB86
0173EA29065D8D0A69A26B2C290BE84B095E3EF3E6D38FBBB6D6B23771A9C63B
3761008796BEEA758B31DAF6D065B40E09448CBE69EBCC976CB48D216ED40EB3
4D2AF13AEFC025209DAB310604C721429F65B39976E2D40BD82DBF4DAAD83380
379C468360C72748C2C58F80C7851FC6B37F789B1DFCBB9DD2033EED2E31C3D4
9AD799D10D646AEF22DB34701DC872DBF12E55FD99CEDC6C5BCCC3D420EC5676
11C14FF8CAFC7B0AE97E60169D300AE565B398616E2F0115FA2F34EB721C2095
7C2146EAF1ED51F8DFE8A1D90539CF3DF1B6C374E1406662625ED723A550786E
4794BA47DA9A28CC66C2A8337CF8A620D29187749C2EE0B44B5BF926670C0A0A
92600C0E23EB3AB196A24D82C2DCDFF458272C1A23432E7C44D3B1A2AB997043
2296D11C3AFE4F62B34142FDF43DCFDFD42B89767DC408824FCFA3AD2C8820F5
77BC1177B7D0715CCC78C249E2EC9683421D0EA35CB53316995FA7011BAC4BA1
880C58EBE8EA65841BBC2F4B469A4AB49C7BB03BD4525BE5FFA8A4353F285669
8226B017B30D0890ED4118DEA72FACEF730AD3D253B21205811352A5E5BF1C48
FBCF54B776EEDF4E698273028108AC5C71B1533067F46BAA690683C3B3C6B4B0
A3EF0BB693CE36946FBFC482222A09A4CEEE91E894A0350D184B2B4C71A8FC17
5FE87852CF2DF5978CB22722CDDB75D21231CD50BBC3A16E768E9EF2ECAD35FB
DA14DF5BD358637952BB969FF3CCA5A3993A36F26027EB726E7C5FA8DB50D4D3
E0C009AAC8AFE7812560961C8DDA127EC2CDEBDA8074809DC7B131548F6E96B8
50D6990F5247201C277388C1E7598C4F076340C756AD59AF0D1ED285EFC02C7A
8E7D40688E561BCA0DF87FF5A35EB4E5DB8604C78A96370BD5D772C1D5F969D7
6ED68A5AD2D5EB4DF596153733033EBCC7F7744DDB63D2FABF8C646E5ED1425F
95BA2D05FDF21476BBBC8E9F486A4EFC670D9AFCBAF0588B6FAC3356540826A7
9E2F28392E71795058FD02990EBBC25F5C06EFC7A97980DF6113AC408B2408A8
2E1893BD7F01A47DB63342CED5194BB88C35533A8290278354D0E3950306CF42
C8F7B5E1BD2D2523EDCD135070941934FA52B7DA3CA4171CB8D89F20E61338B0
3ACDA3CB19A8267C0DBCCFDD3CFA5FF427771FDC784F1FA3A843CD97CABDEC29
94BFE18F2902B8BFEF9C1E83BC54BC4C94146B7F42D00CBE2CA8DE1089BAED2F
5923A10268C9C7007960C361A6F161D7B902C567EAA6D03F6EB88BE7F10C18C2
FB3A618C6219811DD216B3A6CED6A022B7F86D65C97F5DDB0C428C55E30DB5CF
E5A9D72F6BB8D7994B228643B9B4C2165DE741CB75B87AFD70257541E7FA6A65
E37BBCEC134ABF055733121157244292D232BB52493A0A2E1640E7EF0D186C29
49ED4F531928DE9C27DDDEEA66734416B6FABC8D7A0987A065079E744EFC2A51
35D3B651FB1889DE40B47D279AF7FF43D590DD31D942EFADC55A7C8283F28FD9
CF88C2921C1E9D64ADBD63954BB04994E9CECEE372FCEE041DFB86A1CCA0DE6F
27B0F55D412F4CE33C20311B49F24266BBDDA25B818EF51308879CE6F07B5B04
676AEB4E43ADC58F736C86CD5CE425547B4D2F9440158EBE6FE776D7F335A630
9DD0C1D80BEEC4435ED15375F19BDA27B6BF1DAF465AFEC4971733967D21E804
1A96DFE5195DA1D7F880B595821807D8459071721246361E665C6AFD2B1A29E1
762122F3DFCE3C26E75EF2E43938118AC7D3DD7780AC79B7E42F2742B3D8D36F
119E38D8C43FC19CDBC038391038659393729B5143CD2C49E00ECB2FE66B168A
F43A8B7FA9067EE4179345EE3A603060FC0F6E76F026E6196FE92D79EA0FEEBE
16572388B8E37AAF75828A2D5E09352FC0B73C500FAD104B2574B883E76B7649
369AC7389DDBD87502FC6AC08ED6A0244E602DC560230D46175C3E4865C8EDE0
06F2A54334E06F8B9DEBA5D1F4145AF5CD4BD3D633FF16E2350018E32CC9A704
0EF83722F800DE15CB9F55A129464DCF077E17F155A2D5FA0A13A8A6844A4EAA
CFC2CD17E7D68CD596C053CCCA68CFF3E34673BF882F2443DE7F7098BF9C5C43
A73FDD36639B9A384AA572FB71DA2262DCFD37CB8EB47B6F7E8B29AD4613B194
FEB765F3DF1B89441F33FE30550E12EF9AEB5C706E68AA074583D4F3E7F855B0
21F087B6A1BB7B103CD70F29ADEC9BDB853D07DE505FDD1933E3089443E8AD24
355BD19A259B2D0A3D993F4C8E77354A92967402B491ACECABCFE2641ABF1C42
C02DED3F979E2EFE9B2E38CBB172926C5C5249AA67B618AF9EA6B806AF0610A8
20677768466C25A47D3D625F993FC85096CF40E0971D8D9F948B619A8C42F6DF
FAF58DC28217EAF1AB8D7B74E3D6E773A9015493F8E11285565C883A63DC57B3
EA631C8BBC5D83CD9ABBD3219CC4CEE3F47E4D33AAA5659856E1C659124D3A5D
8F5B59E332BA15F9A6BDDF4E4E810E1004F7A4C1CB6125AC59A3AF9BE187EC23
7703A8C9EC195E1B234458FCD5BFD593279820A175EC539407ACDD538D2D8197
0F897452C48E69609013857DF964693A74DA4BDA482BF6BD7CF2BE23F4D1B81E
65CB716EF9B55221983B7A577424961032A6CF2BC26EB91BD748AE7F5F0D29FC
32B27A1B087910EE8553CE7ADC210173214249A41046617CC6AF9789E0D7FE5E
E3A86EA7027118342FEDF5905A519EF4EDE2FF4D35C05BEC7F3D4A39A792CA2F
DA4EE5E745475F5563B79DD7E4DEE4281650AF888FDE37BCB6E5F715F9924D2E
2F1BBC91111063C301F407C8CE14E0B583DB564163321E6D7A0B52472BD3380A
FA6BD72F6B458266D09C5BA01B445F90050C5342BBA737BF276276117A43F105
876BD545BCE4F16EF9D21E5DA78453EB35196A41D9ABC69CEAD292D50522D601
FEA4FBAA1F04D0F3522287D3579D559FCBE860F83EB908B4FAF16041A78340C2
5033BE8B54064265B0E5D4B8541C2449D5C1C1BC2456F0DBD6C82DC0AECFAEC3
6CAAEC2BB4DFAA79E50DCFF4FDC065B57F5BDC05D0383F033A197B5310E24500
8BD728BDFF27F10777DA9940202EFC345D46279C6419C08453370591CB79E2D3
A35E81C6A381F39493CF07B5EF808A82ABE02340D06A320B1DD7A2DFD15989B3
D80E094002E9E60972A9D54719301F9035D96BBBE983E9C78D3AED8F81BE2738
1506B3BDDF80A8AA1912A7E2BE12838487A9B7548D541A2E84A03B0468B16F9F
40F81A607AE2736667250FF1ED5F6A5BC8C227BEC6F353379801B44738B1E4E3
23425CCB954D02A8D6A695D6E11AA98F4271A0F26486A965C0951F54C9B7DDF9
E62DB1AA0A468AC3C57A1B015C8806E8BEE44B9B1622E1567D90CD7EAA66BDC1
BD81AADBA16C16C3D40EE6CCB19389B7D4D6D0496D7EB978721780D313A95EC3
E215DC3A0109E0666C4B6231EE94699FB814B2C6DBDCE1110690EE41D822B0CB
9C0515215FA68EA98975F45E7F3FAD5C7645BEBABF1FC000FF0D75F1FE216EB6
C3E1AD8339101B931D2AF27072A1EE6FCA793AF3378537B0E3DEF774F1A7E629
164ABCC32568299E893643ABF6EEC7348539421C1B83596692CE839153B0D40E
DE9138C4306C7B0F96C34452634E48E5558C76FEAE1BB0A0CC2EA13FF0A9D501
ED13F01D7F985C2166527F2A1FD06F958AB810490627C39C428397091D93108F
1215F9C27D96685B8D53347FFB5122844BDB5A64B20EF693069084479AE3D460
FB26D9B4B4784281738EA95B8ED1C257DB1229EBA78696885207EEDC8B0BB7A8
28633F308FAAEFF075BBC1484B868BEA2F4A7568E8128230746E09727F57D7C7
1438FD99094B3E97B6C7CDBA862878CC15B44EBB8FB8B8A3245EFF6658F4FD76
8DB8CB07C622F42E3E8F8F2BD6AF692D947F1F6CC86A5A2A25F25E5AD923F6AF
7484911ED13C0E44F619E00F046637478BD85FACDBA5EFDBB48374B695D64EC9
8E8C46B1601DDB981E5C80AA5FF099076926F3275D1F3668BD2FABF01DDD4644
C7694EB277F248134185993AD92B02387CE39E123C94841AE391615EAB46EF86
CD4EF0E79D297598C73A1341FD61B94E80AEE7EB86232FC64DC42330B0D8C2FA
6B5D97147BAE78A142DDE3C65B5E4D3CF094E39425E29899CAA12262CA55C9A2
1A876985275BA528ED19C4CF04978DF94876B12F1E22F205FA0CCE9D838AF5A2
DC3689C6DC8B605D7AB9055DFBB4FB0D82D77A07B5F83B27413A7A87B3B5670A
5525BE9D790EB3F4A65AA469827207A0C466BC9DB2A9E6D05B86FF4040021C21
82776F60F947619101044A36D3A92393B6F1F64FD5BABBA090E07ADE2186F38C
D3DDE8A9F3B414BE15E21B24C5014849742265FE6742FECA9C3D6A6AF0A7E75C
2A4A4253BC8D38DDC6441D52497599B788A9533E502FFF25E8C8EB651A059395
0EA166C6F6AD87EC1A8D1B5DB81E4971438CF4DBBE08CDFB57B2B8F6C1D29BDD
263370B5364F6F760A78F4089D3C9D09F3FC452C4D2E917A43208BCE9CAEA6B5
E0596D3B906A2BF5CCF754D7283176DFA5284CD0EA92EFEA79C65E44E13C77E8
57486B0DAC9DAC6373993B1F5DD64FB89FA0ADADA5AAE202E59D6FBCBB369ACB
E5C42B197D4C3438417AA0E34503F86181B0AADB8668638578123D899DBEFD45
2F1256E67EBDAC72F365D516A758E2AA50697816EF5B4239FF5BB1628DC617E3
232776FC59940DE54B72335D4F3CBF0B77A416618583C6401412BB3C65B5C520
BADC89015DA9126CE1E3551D3896BA53E6F0B1ED615FB1C4E5348E08A52FB534
7D0865D9D1ACC93AFC85E5EA339397F9498D195AF8AAB740652A07857E78B15B
72275DFDEF66332EE4FA8ABB0C9110BEF0DE1A9B1E6F4A2E5F821F73710877FA
AAAB7B6C98FA1C5497B88F4B70FDC92791065B9A9454573ADB9BA9AFF91E0C02
B9FB543E783AECC845
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (mywriteup.dvi)
@start /Fa 138[53 37 38 39 1[53 48 53 80 27 50 1[27 1[48
1[44 53 42 1[46 12[66 10[36 4[73 1[68 7[27 58[{}21 83.022
/CMBX10 rf /Fb 134[40 1[55 1[45 28 34 35 1[42 42 47 68
21 38 1[25 42 38 25 38 42 38 38 42 9[83 3[47 3[64 1[74
52 3[62 3[63 59 58 2[42 16[25 1[25 31[47 12[{}34 83.022
/CMTI10 rf /Fc 137[70 73 51 1[51 1[73 66 73 1[36 1[40
36 2[40 58 73 58 1[66 9[137 6[90 6[47 20[66 52[{}19 143.462
/CMR17 rf /Fd 133[37 44 44 60 44 46 32 33 33 44 46 42
46 69 23 44 25 23 46 42 25 37 46 37 46 42 4[42 4[85 1[62
60 46 2[57 65 62 76 52 2[30 62 65 54 57 63 60 59 62 3[65
2[23 1[42 42 42 42 42 42 42 42 42 42 23 28 23 2[32 32
23 4[42 19[69 1[46 48 11[{}67 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 411 Project 4) /Subject (CS 411 Project 4) /Creator (LaTeX with hyperref package) /Author (David Merrick) /Keywords (cs411 ``operating systems'') /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray Black 0 TeXcolorgray -300 -360
a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 -300 -360 a -300 -360 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 -300 -360 a -300 -360 a
SDict begin H.S end
 -300
-360 a -300 -360 a
SDict begin 12 H.A end
 -300 -360 a -300 -360 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 -300 -360
a 83 x Fd(Da)n(vid)27 b(Merric)n(k)-300 -57 y(CS)h(411)-300
162 y(20)f(Ma)n(y)-7 b(,)27 b(2013)p 0 TeXcolorgray 0
TeXcolorgray 1016 489 a Fc(Individual)44 b(W)-11 b(riteup)43
b(for)f(Pro)7 b(ject)44 b(4)-300 687 y
SDict begin H.S end
 -300 687 a -300
687 a
SDict begin 12 H.A end
 -300 687 a -300 687 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.1) cvn H.B /DEST pdfmark end
 -300 687 a 0 TeXcolorgray
-199 792 a Fd(1.)p 0 TeXcolorgray 42 w Fb(What)30 b(do)g(you)g(think)g
(the)g(main)g(p)l(oint)g(of)h(this)f(assignment)g(is?)74
925 y Fd(The)25 b(main)h(p)r(oin)n(t)f(of)h(this)f(assignmen)n(t)g(is)g
(to)h(gain)e(a)h(b)r(etter)h(understanding)f(of)h(ho)n(w)e(memory)h
(allo)r(cation)g(in)g(the)h(k)n(ernel)f(w)n(orks)-92
1024 y(and)j(the)g(adv)-5 b(an)n(tages/disadv)g(an)n(tages)25
b(of)j(the)g(algorithms)f(asso)r(ciated)g(with)i(doing)f(that.)39
b(The)29 b(p)r(oin)n(t)f(is)g(also)g(to)g(learn)f(ho)n(w)h(to)g(use)-92
1124 y(system)f(calls.)-300 1173 y
SDict begin H.S end
 -300 1173 a -300 1173
a
SDict begin 12 H.A end
 -300 1173 a -300 1173 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.2) cvn H.B /DEST pdfmark end
 -300 1173 a 0 TeXcolorgray
-199 1290 a Fd(2.)p 0 TeXcolorgray 42 w Fb(How)j(did)h(you)f(appr)l(o)l
(ach)i(the)e(pr)l(oblem?)39 b(Design)30 b(de)l(cisions,)i(algorithm,)g
(etc.)-92 1523 y Fa(Bac)m(kground:)74 1655 y Fd(The)e(memory)f
(managemen)n(t)f(la)n(y)n(er)h(is)g(the)i(part)e(of)h(the)g(k)n(ernel)f
(that)h(services)f(all)g(memory)g(allo)r(cation)g(requests.)43
b(T)-7 b(o)29 b(handle)-92 1755 y(memory)e(requests)g(that)h(are)f
(less)g(than)h(a)f(full)i(page,)e(the)h(k)n(ernel)f(curren)n(tly)g(giv)
n(es)g(a)g(c)n(hoice)g(of)h(three)g(di\013eren)n(t)f(allo)r(cators:)36
b(SLAB,)-92 1855 y(SLUB,)27 b(and)g(SLOB.)g(SLAB)g(and)g(SLUB)g(\(the)h
(most)f(recen)n(t)g(of)g(these\))g(are)f(complex)h(allo)r(cation)f
(framew)n(orks)f(for)i(use)g(in)g(resource-)-92 1954
y(ric)n(h)f(systems)g(\(desktop)h(computers,)g(for)f(example\).)37
b(They)27 b(are)f(designed)h(to)f(reduce)h(in)n(ternal)f(fragmen)n
(tation)g(of)h(memory)f(and)h(to)-92 2054 y(p)r(ermit)h(e\016cien)n(t)f
(reuse)g(of)h(freed)f(memory)-7 b(.)74 2187 y Fb(SLOB)34
b Fd(\(Simple)27 b(List)g(Of)f(Blo)r(c)n(ks\),)g(on)g(the)h(other)e
(hand,)i(is)f(designed)g(to)g(b)r(e)h(a)f(small)g(and)g(e\016cien)n(t)g
(allo)r(cation)f(framew)n(ork)g(for)-92 2286 y(use)k(in)h(small)g
(systems)f(suc)n(h)g(as)g(em)n(b)r(edded)h(systems.)43
b(Unfortunately)-7 b(,)31 b(a)e(ma)5 b(jor)28 b(limitation)i(of)g(the)g
(SLOB)f(allo)r(cator)f(is)i(the)g(high)-92 2386 y(degree)25
b(to)i(whic)n(h)f(it)h(su\013ers)f(from)h(in)n(ternal)e(fragmen)n
(tation.)36 b(One)26 b(lik)n(ely)g(cause)g(for)g(SLOB's)g(high)g
(fragmen)n(tation)g(rate)f(is)i(the)g(fact)-92 2486 y(that)j(it)h(uses)
f(a)h(simple)f(\014rst-\014t)h(algorithm)e(for)h(memory)g(allo)r
(cation.)44 b(SLOB)30 b(is)h(capable)e(of)i(allo)r(cating)e(as)h
(little)i(as)d(2)h(b)n(ytes,)h(but)-92 2585 y(most)c(arc)n(hitectures)g
(will)h(require)f(at)g(least)h(4)f(b)n(ytes)h(\(32-bit\))g(and)f(8)h(b)
n(ytes)f(\(64)h(bit\).)38 b(SLOB)28 b(allo)r(cates)e(using)i(a)f(heap.)
38 b(Inside)28 b(this)-92 2685 y(heap)i(is)g(a)f(link)n(ed)h(list)h(of)
f(pages.)44 b(T)-7 b(o)30 b(allo)r(cate)f(from)h(the)g(heap,)h(the)g
(algorithm)e(searc)n(hes)f(for)i(a)f(page)h(with)h(su\016cien)n(t)f
(free)g(blo)r(c)n(ks)-92 2785 y(\(next-\014t-lik)n(e)e(approac)n(h\))f
(follo)n(w)n(ed)h(b)n(y)h(a)f(\014rst-\014t)h(scan)f(of)h(the)g(page.)
40 b(T)-7 b(o)28 b(deallo)r(cate,)h(SLOB)f(inserts)g(ob)5
b(jects)29 b(bac)n(k)f(in)n(to)g(the)h(free)-92 2884
y(list)f(in)g(address)f(order)g(\(e\013ectiv)n(ely)h(an)f
(address-ordered)e(\014rst)j(\014t\).)39 b(The)28 b(SLOB)g(heap)g(is)f
(a)h(link)n(ed)g(list)g(of)g(pages.)37 b(Heap)28 b(pages)f(are)-92
2984 y(segregated)f(in)n(to)j(3)f(separate)g(lists.)41
b(One)28 b(list)h(con)n(tains)f(ob)5 b(jects)29 b(less)f(than)h(256)e
(b)n(ytes,)i(another)f(con)n(tains)g(ob)5 b(jects)29
b(less)f(than)h(1024)-92 3083 y(b)n(ytes,)e(and)g(the)h(third)g(con)n
(tains)f(all)g(other)g(ob)5 b(jects.)74 3216 y Fb(Memory)25
b(fr)l(agmentation)p Fd(.)35 b(Memory)21 b(fragmen)n(tation)f(is)h(the)
g(inabilit)n(y)g(to)h(\014nd)f(large)f(con)n(tiguous)g(c)n(h)n(unks)h
(of)g(a)n(v)-5 b(ailable)20 b(memory)-7 b(.)-92 3316
y(In)n(ternal)26 b(fragmen)n(tation)h(is)g(when)h(the)g(un)n(usable)f
(memory)g(is)g(within)i(an)e(allo)r(cated)g(region)f(\(in)i(this)g
(case,)f(a)g(page\).)-92 3548 y Fa(Design)46 b(and)i(Implemen)m
(tation:)62 b Fd(The)41 b(default)h(implemen)n(tation)f(of)g(SLOB)g(is)
g(the)g(\014rst-\014t)g(approac)n(h)e(men)n(tioned)i(in)h(the)-92
3648 y(\\Bac)n(kground")25 b(section.)40 b(Our)28 b(task)g(w)n(as)f(to)
i(implemen)n(t)g(a)g(b)r(est-\014t)g(algorithm.)39 b(This)28
b(mean)n(t)h(that,)g(for)f(eac)n(h)g(request,)h(the)g(SLOB)-92
3748 y(allo)r(cator)f(had)i(to)g(\014nd)g(the)h(smallest)e(blo)r(c)n(k)
h(of)g(memory)f(that)h(it)h(w)n(ould)e(\014t)i(in.)44
b(W)-7 b(e)31 b(decided)f(that)g(w)n(e)g(could)g(do)g(this)g(b)n(y)g
(lo)r(oping)-92 3847 y(through)g(all)h(of)g(the)h(requests)e(with)i(a)e
(temp)i(p)r(oin)n(ter.)47 b(This)31 b(p)r(oin)n(ter)g(w)n(ould)g(hold)g
(the)h(curren)n(t)e(smallest)h(blo)r(c)n(k)f(of)h(memory)g(that)-92
3947 y(w)n(ould)h(\014t)h(the)g(request.)51 b(If)33 b(a)g(blo)r(c)n(k)f
(of)g(memory)g(w)n(as)g(found)h(that)g(w)n(ould)f(\014t)h(the)g(curren)
n(t)f(request)g(and)h(w)n(as)e(smaller)h(than)h(this)-92
4046 y(blo)r(c)n(k,)23 b(the)h(temp)f(p)r(oin)n(ter)g(w)n(ould)g(b)r(e)
g(reassigned)f(to)h(reference)f(this)h(new)h(blo)r(c)n(k.)34
b(This)24 b(algorithm)e(w)n(ould)g(guaran)n(tee)g(that)h(the)h(temp)-92
4146 y(p)r(oin)n(ter)j(w)n(as)g(alw)n(a)n(ys)g(referencing)f(the)j
(smallest)f(blo)r(c)n(k)f(of)h(memory)g(that)g(the)g(request)g(w)n
(ould)g(\014t)g(in.)39 b(Once)27 b(outside)h(the)h(lo)r(op,)f(the)-92
4246 y(request)f(w)n(ould)g(b)r(e)h(stored)e(in)i(the)g(memory)f(p)r
(oin)n(ted)h(to)f(b)n(y)h(temp.)74 4379 y(In)f(order)e(to)i(get)g(the)g
(new)h(k)n(ernel)e(to)g(use)h(SLOB,)g(w)n(e)f(had)h(to)g(mo)r(dify)h
(the)f(.con\014g)f(\014le)i(in)f(the)g(k)n(ernel)f(directory)-7
b(.)36 b(W)-7 b(e)27 b(c)n(hanged)-92 4478 y(CONFIG)p
249 4478 25 4 v 30 w(EMBEDDED)32 b(to)g(\\y")f(\(SLOB)h(is)g(designed)g
(for)f(em)n(b)r(edded)i(systems\))f(and)g(added)g(CONFIG)p
3411 4478 V 30 w(SLOB=y)f(near)h(where)-92 4578 y(CONFIG)p
249 4578 V 30 w(SLAB)27 b(w)n(as.)-92 4810 y Fa(T)-8
b(esting:)74 4943 y Fd(W)h(e)30 b(decided)h(to)f(test)g(the)h(fragmen)n
(tation)e(of)h(our)g(new)g(slob)g(b)r(est-\014t)g(algorithm)g(b)n(y)g
(de\014ning)g(system)g(calls)f(for)h(determining)-92
5043 y(the)36 b(n)n(um)n(b)r(er)g(of)f(SLOB)h(blo)r(c)n(ks)f(claimed)h
(and)g(the)g(n)n(um)n(b)r(er)g(of)g(free)f(blo)r(c)n(ks.)62
b(W)-7 b(e)36 b(could)g(use)f(these)h(to)g(determine)g(the)h(amoun)n(t)
-92 5142 y(of)d(fragmen)n(tation)e(su\013ered)i(b)n(y)g(SLOB.)g(W)-7
b(e)34 b(got)g(this)g(idea)g(from)g(P)n(aul)f(P)n(aulson's)f
(instructions)i(for)g(his)g(class)f(when)h(he)g(taugh)n(t)-92
5242 y(this)40 b(class)f(\(h)n
(ttp://classes.engr.oregonstate.edu/eecs/fall201)o(1/)o(cs4)o(11)o(/pr)
o(o)t(j02.p)r(df)6 b(\).)70 b(W)-7 b(e)41 b(created)e(t)n(w)n(o)h
(system)g(calls.)74 b(The)-92 5342 y(\014rst,)27 b(\\sys)p
259 5342 V 28 w(get)p 398 5342 V 30 w(slob)p 572 5342
V 29 w(am)n(t)p 742 5342 V 30 w(claimed,")g(returned)g(the)g(amoun)n(t)
g(of)h(memory)e(not)h(serv)n(ed)g(b)n(y)g(an)g(allo)r(cation)f
(request.)36 b(W)-7 b(e)28 b(did)g(this)f(b)n(y)-92 5441
y(m)n(ultiplying)21 b(the)g(n)n(um)n(b)r(er)f(of)h(used)g(slob)f(pages)
g(b)n(y)h(the)g(n)n(um)n(b)r(er)f(of)h(slob)f(units)i(p)r(er)e(page.)34
b(The)21 b(second)f(system)h(call,)h(\\sys)p 3807 5441
V 28 w(slob)p 3979 5441 V 30 w(free,")-92 5541 y(returned)k(the)i(n)n
(um)n(b)r(er)f(of)g(free)g(units)h(within)g(eac)n(h)e(used)h(page.)36
b(W)-7 b(e)28 b(did)f(this)h(b)n(y)f(lo)r(oping)f(through)h(eac)n(h)f
(of)h(the)h(three)f(link)n(ed)g(lists)p 0 TeXcolorgray
1929 5889 a(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.S end
 -300 -568 a 0 TeXcolorgray
0 TeXcolorgray -300 -568 a
SDict begin H.R end
 -300 -568 a -300 -568 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 -300
-568 a 0 TeXcolorgray 0 TeXcolorgray -92 -277 a Fd(of)27
b(slob)h(pages)f(and)g(adding)h(the)g(free)g(units)g(to)g(a)f(running)h
(total.)38 b(W)-7 b(e)28 b(w)n(ere)f(able)g(to)h(use)g(b)r(oth)g(of)g
(these)g(system)g(calls)f(to)h(calculate)-92 -177 y(the)g(in)n(ternal)e
(fragmen)n(tation)h(b)n(y)g(dividing)h(the)g(n)n(um)n(b)r(er)f(of)g
(free)h(units)g(b)n(y)f(the)h(total)f(n)n(um)n(b)r(er)h(of)f(units.)74
-45 y(W)-7 b(e)34 b(assumed)f(that)g(\\e\016ciency")g(mean)n(t)g(the)h
(time)g(complexit)n(y)f(of)h(eac)n(h)f(algorithm.)53
b(W)-7 b(e)34 b(decided)g(to)g(test)g(this)f(b)n(y)h(timing)-92
55 y(some)28 b(mallo)r(c\(\))h(calls)f(for)h(v)-5 b(arying)27
b(sizes)i(of)f(memory)h(and)f(prin)n(ting)h(the)g(a)n(v)n(erage)d(n)n
(um)n(b)r(er)j(of)g(microseconds)e(they)i(to)r(ok.)40
b(Because)-92 155 y(the)33 b(b)r(est-\014t)g(algorithm)e(iterated)h
(through)g(all)h(of)f(the)h(slob)f(pages)g(while)h(the)f(\014rst-\014t)
h(did)g(not,)h(w)n(e)e(predicted)h(that)g(the)g(b)r(est-\014t)-92
254 y(w)n(ould)27 b(b)r(e)h(less)f(e\016cien)n(t)h(b)n(y)f(these)g
(standards.)36 b(And)28 b(this)g(is)g(exactly)f(what)g(w)n(e)g(found.)
74 487 y Fb(De\014ning)35 b(System)g(Cal)t(ls)p Fd(.)57
b(T)-7 b(o)33 b(do)h(this,)h(w)n(e)f(\014rst)f(had)h(to)g(learn)f(ho)n
(w)g(to)g(de\014ne)i(system)e(calls.)55 b(F)-7 b(ortunately)g(,)35
b(there)f(w)n(as)e(an)-92 586 y(en)n(tire)h(section)g(in)g(the)h(b)r(o)
r(ok)f(dedicated)h(to)f(this)h(on)f(page)g(78.)53 b(The)34
b(steps)f(in)n(v)n(olv)n(ed)f(are)h(as)g(follo)n(ws:)47
b(write)34 b(the)f(system)h(call)f(as)-92 686 y(a)e(function.)51
b(Add)32 b(an)g(en)n(try)f(for)g(this)i(system)e(call)h(in)g(the)g(end)
h(of)f(the)g(system)g(call)f(table)h(for)f(eac)n(h)h(arc)n(hitecture)e
(that)j(supp)r(orts)-92 786 y(it.)48 b(This)31 b(table)g(is)g(lo)r
(cated)g(in)h(asm/unistd.h.)47 b(Giv)n(e)31 b(the)h(system)f(call)g(a)g
(n)n(um)n(b)r(er)g(for)g(eac)n(h)f(arc)n(hitecture.)47
b(This)31 b(n)n(um)n(b)r(er)g(is)g(used)-92 885 y(to)h(in)n(v)n(ok)n(e)
g(the)h(system)g(call)f(later.)52 b(Finally)-7 b(,)35
b(compile)d(the)i(system)e(call)h(in)n(to)f(the)i(k)n(ernel)e(image.)52
b(It)33 b(can)f(then)i(b)r(e)f(in)n(v)n(ok)n(ed)f(with)-92
985 y(syscall\(syscall)p 415 985 25 4 v 27 w(n)n(um)n(b)r(er\),)c
(where)f(syscall)p 1275 985 V 29 w(n)n(um)n(b)r(er)g(is)h(the)g(n)n(um)
n(b)r(er)f(it)h(w)n(as)f(de\014ned)h(with.)-300 1118
y
SDict begin H.S end
 -300 1118 a -300 1118 a
SDict begin 12 H.A end
 -300 1118 a -300 1118 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.3) cvn H.B /DEST pdfmark end
 -300
1118 a 0 TeXcolorgray -199 1251 a Fd(3.)p 0 TeXcolorgray
42 w Fb(What)33 b(did)h(you)f(le)l(arn?)57 b Fd(I)31
b(learned)f(ho)n(w)g(to)h(write)f(system)h(calls.)46
b(I)31 b(learned)f(ab)r(out)g(v)-5 b(arious)30 b(memory)g(allo)r
(cation)g(sc)n(hemes)g(in)h(the)-92 1350 y(k)n(ernel.)36
b(I)27 b(re-learned)f(ho)n(w)h(to)h(do)f(microsecond)f(timing)i(of)f
(op)r(erations)g(and)g(function)h(calls.)p 0 TeXcolorgray
1929 5889 a(2)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
